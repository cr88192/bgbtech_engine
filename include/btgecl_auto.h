//AHSRC:base/cl_update.c
void BTCL_Init(void);
float btclTime(BTCL_World *wrl);
float btclMsgTime(BTCL_World *wrl);
float btclFrameTime(BTCL_World *wrl);
float btclClientTime(void);
BTCL_MessageHandler *BTCL_LookupHandler(dyt name);
BTCL_MessageHandler *BTCL_GetHandler(dyt name);
BTCL_API BTCL_MessageHandler *BTCL_RegisterHandler(char *name,void (*fcn)(BTCL_World *wrl, dyt msg));
BTCL_API BTCL_MessageHandler *BTCL_RegisterDyHandler(char *name,dyt fcn);
BTCL_API BTCL_World *BTCL_NewWorld(void);
BTCL_API void BTCL_BindWorld(BTCL_World *wrl);
BTCL_API void BTCL_BindBrushWorld(LBXGL_BrushWorld *wrl);
BTCL_API void BTCL_StepWorld(BTCL_World *wrl, float dt);
BTCL_API void BTCL_LoadMapFile(BTCL_World *wrl, char *map);
BTCL_API void BTCL_LoadMap(BTCL_World *wrl, char *map);
BTCL_API void BTCL_FlushWorld(BTCL_World *wrl);
BTCL_Entity *BTCL_LookupEntity(BTCL_World *wrl, int entnum);
BTCL_Entity *BTCL_GetEntity(BTCL_World *wrl, int entnum);
void BTCL_DeleteEntity(BTCL_World *wrl, int entnum);
BTCL_Light *BTCL_LookupLight(BTCL_World *wrl, int num);
BTCL_Light *BTCL_GetLight(BTCL_World *wrl, int num);
void BTCL_DecodeMsgVec(float *v, int nv, dyt msg);
void BTCL_DecodeMsgVec2(float *v, dyt msg);
void BTCL_DecodeMsgVec3(float *v, dyt msg);
void BTCL_DecodeMsgVec4(float *v, dyt msg);
void BTCL_DecodeMsgOrg(BTCL_World *wrl, double *v, int nv, dyt msg);
void BTCL_DecodeMsgOrg3(BTCL_World *wrl, double *v, dyt msg);
void BTCL_DecodeBoneDeltaAttr(BTCL_World *wrl, BTCL_Entity *ent,int bone, dyt msg);
void BTCL_DecodeBoneDelta(BTCL_World *wrl, BTCL_Entity *ent, dyt msg);
void BTCL_DecodeDeltaAttr(BTCL_World *wrl, BTCL_Entity *ent, dyt msg);
void BTCL_DecodeDelta(BTCL_World *wrl, dyt msg);
void BTCL_DecodeLDeltaAttr(BTCL_World *wrl, BTCL_Light *ent, dyt msg);
void BTCL_DecodeLDelta(BTCL_World *wrl, dyt msg);
void BTCL_DecodeBDeltaFaceMsg(BTCL_World *wrl, dyt msg,LBXGL_Brush *brush, int fn);
void BTCL_DecodeBDeltaPatchPts(BTCL_World *wrl, dyt msg,LBXGL_Brush *brush);
void BTCL_DecodeBDeltaPatchMsg2(BTCL_World *wrl, dyt msg,LBXGL_Brush *brush);
void BTCL_DecodeBDeltaPatchMsg(BTCL_World *wrl, dyt msg,LBXGL_Brush *brush);
void BTCL_DecodeBDeltaMeshMsg(BTCL_World *wrl, dyt msg,LBXGL_Brush *brush);
void BTCL_DecodeBDeltaMsg(BTCL_World *wrl, dyt msg,LBXGL_Brush *brush);
void BTCL_DecodeSEDeltaMsg(BTCL_World *wrl, dyt msg, LBXGL_SEntity *sent);
void BTCL_DecodeRegionSEDeltaMsg(BTCL_World *wrl,BTGE_VoxelRegion *rgn, dyt msg);
void BTCL_DecodeRegionBDelta(BTCL_World *wrl,BTGE_VoxelRegion *rgn, dyt msg);
void BTCL_DecodeRegionDeltaAttr(BTCL_World *wrl,BTGE_VoxelRegion *rgn, dyt msg);
void BTCL_DecodeRegionDeltaMsg(BTCL_World *wrl, dyt msg);
void BTCL_DecodeSound(BTCL_World *wrl, dyt msg);
void BTCL_DecodeSpeak(BTCL_World *wrl, dyt msg);
void BTCL_DecodeParticleEffect(BTCL_World *wrl, dyt msg);
void BTCL_DecodeBDelta(BTCL_World *wrl, dyt msg);
void BTCL_DecodeDelBrush(BTCL_World *wrl, dyt msg);
void BTCL_DecodeNewBrush(BTCL_World *wrl, dyt msg);
void BTCL_DecodeNewSEnt(BTCL_World *wrl, dyt msg);
void BTCL_DecodeSEDelta(BTCL_World *wrl, dyt msg);
void BTCL_DecodePushSound(BTCL_World *wrl, dyt msg);
void BTCL_DecodePushImage(BTCL_World *wrl, dyt msg);
void BTCL_DecodeVoxelDeltaMsg(BTCL_World *wrl, dyt msg);
void BTCL_DecodePushFile(BTCL_World *wrl, dyt msg);
void BTCL_DecodeUpdateMsg(BTCL_World *wrl, dyt msg);
void BTCL_DecodeWDelta(BTCL_World *wrl, dyt msg);
BTCL_API void BTCL_DecodeUpdate(BTCL_World *wrl, dyt msg);
//AHSRC:base/cl_hud.c
BTCL_API BTCL_World *BTCL_GetClientWorld();
BTCL_API void BTCL_DrawImageName(float ox, float oy, float xs, float ys, char *name);
BTCL_API void BTCL_DrawImage(float ox, float oy, float xs, float ys, int tex);
BTCL_API char *BTCL_GetInventoryItem(BTCL_World *wrl,int slot, int *rcnt);
BTCL_API void BTCL_DrawInventory(BTCL_World *wrl);
BTCL_API int BTCL_HandleInputInventory(BTCL_World *wrl, PDGLUI_InputState *state);
BTCL_API void BTCL_Draw2D(BTCL_World *wrl);
BTCL_API int BTCL_HandleInput(BTCL_World *wrl);
//AHSRC:base/cl_gui.c
BTCLUI_Context *BTCL_LookupUIContext(BTCL_World *wrl, int idnum);
BTCLUI_Context *BTCL_GetUIContext(BTCL_World *wrl, int idnum);
void BTCL_DeleteUIContext(BTCL_World *wrl, int idnum);
BTCLUI_Widget *BTCL_GetUIWidget(BTCL_World *wrl,BTCLUI_Context *uictx, int idnum);
BTCLUI_Form *BTCL_LookupUIForm(BTCL_World *wrl,BTCLUI_Context *uictx, int idnum);
BTCLUI_Form *BTCL_GetUIForm(BTCL_World *wrl,BTCLUI_Context *uictx, int idnum);
BTCLUI_Widget *BTCL_LookupUIFormWidget(BTCL_World *wrl,BTCLUI_Context *uictx, BTCLUI_Form *form, int idnum);
BTCLUI_Widget *BTCL_GetUIFormWidget(BTCL_World *wrl,BTCLUI_Context *uictx, BTCLUI_Form *form, int idnum);
void BTCL_DecodeFormWidgetDeltaAttr(BTCL_World *wrl,BTCLUI_Context *uictx, BTCLUI_Form *form, BTCLUI_Widget *widget, dyt msg);
void BTCL_DecodeFormWidgetDelta(BTCL_World *wrl,BTCLUI_Context *uictx, BTCLUI_Form *form, dyt msg);
void BTCL_DecodeFormDeleteWidget(BTCL_World *wrl,BTCLUI_Context *uictx, BTCLUI_Form *form, dyt msg);
void BTCL_DecodeFormDeltaAttr(BTCL_World *wrl,BTCLUI_Context *uictx, BTCLUI_Form *form, dyt msg);
void BTCL_DecodeFormDelta(BTCL_World *wrl,BTCLUI_Context *uictx, dyt msg);
void BTCL_DecodeDeleteForm(BTCL_World *wrl,BTCLUI_Context *uictx, dyt msg);
void BTCL_DecodeUIDeltaAttr(BTCL_World *wrl,BTCLUI_Context *uictx, dyt msg);
void BTCL_DecodeUIDelta(BTCL_World *wrl, dyt msg);
void BTCL_DecodeDeleteUI(BTCL_World *wrl, dyt msg);
BTCL_API dyt BTCLUI_ComposeFormEventDelta(BTCL_World *wrl,BTCLUI_Context *uictx, BTCLUI_Form *form, BTCLUI_Event *ev);
BTCL_API dyt BTCLUI_ComposeFormDelta(BTCL_World *wrl,BTCLUI_Context *uictx, BTCLUI_Form *form);
BTCL_API dyt BTCLUI_ComposeContextDelta(BTCL_World *wrl,BTCLUI_Context *uictx);
BTCL_API dyt BTCLUI_ComposeUpdate(BTCL_World *wrl, dyt lst);
void BTCL_DrawGUI(BTCL_World *wrl);
int BTCLUI_HandleInput(BTCL_World *wrl, PDGLUI_InputState *state);
//AHSRC:base/cl_frame.c
void BTCL_FlushEntityVis(BTCL_World *wrl, BTCL_Entity *ent);
void BTCL_FlushEntity(BTCL_World *wrl, BTCL_Entity *ent);
void BTCL_PredictEntFrame(BTCL_World *wrl, BTCL_Entity *ent);
void BTCL_PredictEntWFrame(BTCL_World *wrl, BTCL_Entity *ent);
void BTCL_SetupClientEntFrameMdl(BTCL_World *wrl, BTCL_Entity *ent);
void BTCL_SetupClientEntFrameWMdl(BTCL_World *wrl, BTCL_Entity *ent);
void BTCL_SetupClientEntFrameEffects(BTCL_World *wrl, BTCL_Entity *ent);
float btclAngleMod(float v);
float BTCL_AngleDist1(float a, float b);
float BTCL_AngleDist(float *v0, float *v1);
void BTCL_SetupClientEntFrame(BTCL_World *wrl, BTCL_Entity *ent);
void BTCL_SetupClientLightFrame(BTCL_World *wrl, BTCL_Light *ent);
BTCL_API void BTCL_SetupClientFrame(BTCL_World *wrl);
BTCL_API void BTCL_SetupClientCamera(BTCL_World *wrl);
//AHSRC:base/cl_impulse.c
BTCL_API dyt BTCL_SendMessage(BTCL_World *wrl, dyt msg);
BTCL_API dyt BTCL_ComposeBrushDelta(BTCL_World *wrl, LBXGL_Brush *brush);
BTCL_API dyt BTCL_ComposeWorldDelta(BTCL_World *wrl);
BTCL_API dyt BTCL_ComposeUpdate(BTCL_World *wrl);
//AHSRC:base/cl_bsglue.c
BTCL_API void BTCL_ScriptInit();
BTCL_API void BTCL_ScriptDrawUI();
//AHSRC:base/clui_draw.c
BTCL_API void BTCLUI_DrawFormWidget(BTCLUI_Context *uictx,BTCLUI_Form *form, BTCLUI_Widget *widget, int ox, int oy);
BTCL_API void BTCLUI_DrawForm(BTCLUI_Context *uictx,BTCLUI_Form *form);
BTCL_API void BTCLUI_DrawContext(BTCLUI_Context *uictx);
//AHSRC:base/clui_form.c
void BTCLUI_Init();
BTCLUI_WidgetType *BTCLUI_LookupWidgetType(char *name);
BTCLUI_WidgetType *BTCLUI_GetWidgetType(char *name);
BTCLUI_Form *BTCLUI_LookupUIForm(BTCLUI_Context *uictx,int idnum);
int BTCLUI_KeyDown(BTCLUI_InputState *state, int key);
BTCL_API BTCLUI_Form *BTCLUI_NewForm(BTCLUI_Context *uictx, int idnum);
BTCL_API BTCLUI_Widget *BTCLUI_NewWidget(BTCLUI_Context *uictx, BTCLUI_Form *form, int idnum);
BTCL_API BTCLUI_Widget *BTCLUI_FindFormWidgetName(BTCLUI_Form *form, char *name);
BTCL_API void BTCLUI_UnlinkForm(BTCLUI_Form *form);
BTCL_API void BTCLUI_DeleteForm(BTCLUI_Form *form);
BTCL_API void BTCLUI_DeleteContextForms(BTCLUI_Context *uictx);
BTCL_API void BTCLUI_DeleteContext(BTCLUI_Context *uictx);
BTCL_API void BTCLUI_UnlinkWidget(BTCLUI_Widget *widget);
BTCL_API void BTCLUI_FreeWidget(BTCLUI_Widget *widget);
BTCL_API void BTCLUI_DeleteWidget(BTCLUI_Widget *widget);
BTCL_API void BTCLUI_WidgetSetParent(BTCLUI_Widget *widget, BTCLUI_Widget *other);
BTCL_API void BTCLUI_WidgetSetType(BTCLUI_Widget *widget, char *type);
BTCL_API BTCLUI_Event *BTCLUI_NewEvent();
BTCL_API void BTCLUI_ReleaseEvent(BTCLUI_Event *ev);
BTCL_API BTCLUI_Event *BTCLUI_Forms_AddEvent(BTCLUI_Form *form, BTCLUI_Widget *widget, char *event);
BTCL_API int BTCLUI_Forms_HandleInput(BTCLUI_Context *uictx, BTCLUI_InputState *state);
//AHSRC:base/clui_widget.c
BTCLUI_Event *BTCLUI_Widget_AddEvent(BTCLUI_Widget *obj, char *event);
int BTCLUI_Widget_BindForm(BTCLUI_Widget *obj, BTCLUI_Form *form);
int BTCLUI_Widget_HandleInput(BTCLUI_Widget *obj,BTCLUI_InputState *state, int ox, int oy);
int BTCLUI_Widget_Render(BTCLUI_Widget *obj, int ox, int oy);
int BTCLUI_Widget_SizeWidget(BTCLUI_Widget *obj);
int BTCLUI_Widget_CheckFocus(int ox, int oy,BTCLUI_InputState *state, BTCLUI_Widget *obj);
int BTCLUI_Widget_CheckClick(int ox, int oy,BTCLUI_InputState *state, BTCLUI_Widget *obj);
int BTCLUI_Widget_CheckClicked(int ox, int oy,BTCLUI_InputState *state, BTCLUI_Widget *obj);
int BTCLUI_Widget_CheckClickedBox(int ox, int oy, int xs, int ys,BTCLUI_InputState *state);
int BTCLUI_Widget_CheckDragBox(int ox, int oy, int xs, int ys,BTCLUI_InputState *state);
int BTCLUI_Widget_CheckMClick(int ox, int oy,BTCLUI_InputState *state, BTCLUI_Widget *obj);
int BTCLUI_Widget_CheckMClicked(int ox, int oy,BTCLUI_InputState *state, BTCLUI_Widget *obj);
int BTCLUI_Widget_CheckMClickedBox(int ox, int oy, int xs, int ys,BTCLUI_InputState *state);
int BTCLUI_Widget_CheckMDragBox(int ox, int oy, int xs, int ys,BTCLUI_InputState *state);
int BTCLUI_Widget_CheckRClick(int ox, int oy,BTCLUI_InputState *state, BTCLUI_Widget *obj);
int BTCLUI_Widget_CheckRClicked(int ox, int oy,BTCLUI_InputState *state, BTCLUI_Widget *obj);
int BTCLUI_Widget_CheckRClickedBox(int ox, int oy, int xs, int ys,BTCLUI_InputState *state);
int BTCLUI_Widget_CheckRDragBox(int ox, int oy, int xs, int ys,BTCLUI_InputState *state);
int BTCLUI_Widget_CheckHKey(BTCLUI_InputState *state, int key);
int BTCLUI_Widget_CheckHKeyString(BTCLUI_InputState *state, char *str);
BTCLUI_Widget *BTCLUI_Widget_FindName(BTCLUI_Widget *parent, char *name);
BTCLUI_Widget *BTCLUI_Widget_LookupID(BTCLUI_Widget *parent, char *name);
BTCL_API int BTCLUI_Forms_RenderColor(int c, int a);
BTCL_API int BTCLUI_Forms_RenderDarkColor(int c, int a);
BTCL_API int BTCLUI_Forms_RenderLightColor(int c, int a);
BTCL_API int BTCLUI_Forms_CalcColor(int c, int *rr, int *gr, int *br);
BTCL_API int BTCLUI_Forms_CalcDarkColor(int c, int *rr, int *gr, int *br);
BTCL_API int BTCLUI_Forms_CalcLightColor(int c, int *rr, int *gr, int *br);
int BTCLUI_Widget_Render3DBorder(int ox, int oy, int xs, int ys,int wbgcolor, int ind);
int BTCLUI_Widget_Render3DBox(int ox, int oy, int xs, int ys,int wbgcolor, int ind);
int BTCLUI_Widget_RenderLight3DBorder(int ox, int oy, int xs, int ys,int wbgcolor, int ind);
int BTCLUI_Widget_RenderContent(int ox, int oy, int xs, int ys,dyxNode *body, int fgc);
int BTCLUI_Widget_RSizeWidget(BTCLUI_Widget *obj);
int BTCLUI_Widget_SizeContent(dyxNode *body, int *xs, int *ys);
int BTCLUI_Widget_SizeText(char *str, int *xs, int *ys);
int BTCLUI_Widget_Init();
//AHSRC:base/cluiw_box.c
int BTCLUI_WidgetBox_HandleInput(BTCLUI_Widget *obj,BTCLUI_InputState *state, int ox, int oy);
int BTCLUI_WidgetBox_Render(BTCLUI_Widget *obj, int ox, int oy);
int BTCLUI_WidgetBox_SizeWidget(BTCLUI_Widget *obj);
int BTCLUI_WidgetBox_AddWidget(BTCLUI_Widget *tmp, BTCLUI_Widget *tmp2);
int BTCLUI_WidgetBox_Init();
//AHSRC:base/cluiw_input.c
int BTCLUI_WidgetInput_Render(BTCLUI_Widget *obj, int ox, int oy);
int BTCLUI_WidgetInput_SizeWidget(BTCLUI_Widget *obj);
int BTCLUI_WidgetInput_HandleInput(BTCLUI_Widget *obj,BTCLUI_InputState *state, int ox, int oy);
int BTCLUI_WidgetInput_Init();
//AHSRC:base/cluiw_label.c
int BTCLUI_WidgetLabel_Render(BTCLUI_Widget *obj, int ox, int oy);
int BTCLUI_WidgetLabel_HandleInput(BTCLUI_Widget *obj,BTCLUI_InputState *state, int ox, int oy);
int BTCLUI_WidgetLabel_SizeWidget(BTCLUI_Widget *tmp);
int BTCLUI_WidgetLabel_Init();
//AHSRC:base/cluiw_list.c
int BTCLUI_WidgetList_Render(BTCLUI_Widget *obj, int ox, int oy);
int BTCLUI_WidgetList_HandleInput(BTCLUI_Widget *obj,BTCLUI_InputState *state, int ox, int oy);
BTCLUI_Widget *BTCLUI_WidgetList_Begin(char *type, char *id);
int BTCLUI_WidgetList_SizeWidget(BTCLUI_Widget *tmp);
int BTCLUI_WidgetList_SetPropertyS(BTCLUI_Widget *obj, char *var, char *val);
int BTCLUI_WidgetList_AddItem(BTCLUI_Widget *obj, char *name, char *value);
int BTCLUI_WidgetList_SetItem(BTCLUI_Widget *obj, char *name, char *value);
int BTCLUI_WidgetList_ClearItems(BTCLUI_Widget *obj);
int BTCLUI_WidgetList_Init();
//AHSRC:base/cluiw_scroll.c
int BTCLUI_WidgetScroll_HandleInput(BTCLUI_Widget *obj,BTCLUI_InputState *state, int ox, int oy);
int BTCLUI_WidgetScroll_Render(BTCLUI_Widget *obj, int ox, int oy);
int BTCLUI_WidgetScroll_Init();
//AHSRC:base/cluiw_textarea.c
char *BTCLUI_TextArea_Flatten(BTCLUI_Widget *obj);
char *BTCLUI_TextArea_FlattenSelection(BTCLUI_Widget *obj);
int BTCLUI_TextArea_DeleteSelection(BTCLUI_Widget *obj);
int BTCLUI_TextArea_Insert(BTCLUI_Widget *obj, int *px, int *py, char *ks);
int BTCLUI_TextArea_HandleSelect(BTCLUI_Widget *obj, BTCLUI_InputState *state);
int BTCLUI_TextArea_HandleInput2(int ox, int oy,BTCLUI_InputState *state, BTCLUI_Form *form, BTCLUI_Widget *obj);
int BTCLUI_TextArea_HandleInput(BTCLUI_Widget *obj,BTCLUI_InputState *state, int ox, int oy);
int BTCLUI_TextArea_Render(BTCLUI_Widget *obj, int ox, int oy);
int BTCLUI_TextArea_SizeWidget(BTCLUI_Widget *tmp);
int BTCLUI_TextArea_SetPropertyI(BTCLUI_Widget *obj, char *var, int val);
int BTCLUI_TextArea_Init();
//AHSRC:base/cluiw_tree.c
int BTCLUI_WidgetTree_HandleInput(BTCLUI_Widget *obj,BTCLUI_InputState *state, int ox, int oy);
int BTCLUI_WidgetTree_Render(BTCLUI_Widget *obj, int ox, int oy);
int BTCLUI_WidgetTree_SizeWidget(BTCLUI_Widget *obj);
int BTCLUI_WidgetTree_AddWidget(BTCLUI_Widget *tmp, BTCLUI_Widget *tmp2);
int BTCLUI_WidgetTree_Init();
//AHSRC:base/cluiw_union.c
int BTCLUI_WidgetUnion_HandleInput(BTCLUI_Widget *obj,BTCLUI_InputState *state, int ox, int oy);
int BTCLUI_WidgetUnion_Render(BTCLUI_Widget *obj, int ox, int oy);
int BTCLUI_WidgetUnion_SizeWidget(BTCLUI_Widget *obj);
int BTCLUI_WidgetUnion_AddWidget(BTCLUI_Widget *tmp, BTCLUI_Widget *tmp2);
int BTCLUI_WidgetUnion_Init();
