//AHSRC:base/prng.c
BGBDY_API u64 bgbrng_rdtsc();
BGBDY_API u64 bgbrng_rdtsc();
BGBDY_API u64 bgbrng_rdtsc();
BGBDY_API u64 bgbrng_rdtsc();
BGBDY_API u64 bgbrng_rdtsc();
BGBDY_API u64 bgbrng_rdtsc();
BGBDY_API u32 bgbrng_genvalue();
BGBDY_API u64 bgbrng_genvalue64();
BGBDY_API u32 bgbrng_genvalue_fast();
BGBDY_API int bgbrng_rand(iv128_t *a);
BGBDY_API double bgbrng_randf();
BGBDY_API double bgbrng_randg();
BGBDY_API float bgbrng_ssqrt(float f);
BGBDY_API float bgbrng_ssqr(float f);
BGBDY_API float bgbrng_nfrand();
BGBDY_API float bgbrng_sfrand();
BGBDY_API float bgbrng_sqrrand();
BGBDY_API float bgbrng_ssqrrand();
BGBDY_API float bgbrng_logrand();
BGBDY_API void bgbrng_ciph0_swap(byte *map, int i, int j);
BGBDY_API void bgbrng_ciph0_swap2(byte *map, byte *imap, int i, int j);
BGBDY_API int bgbrng_ciph0_kindex(iv128_t *key);
BGBDY_API void bgbrng_ciph0_enc(byte *ibuf, byte *obuf, int sz,iv128_t *key);
BGBDY_API void bgbrng_ciph0_dec(byte *ibuf, byte *obuf, int sz,iv128_t *key);
BGBDY_API iv128_t bgbrng_ciph0_genkey(char *str);
//AHSRC:base/int128.c
BGBDY_API dyt dyint128(iv128_t v);
BGBDY_API dyt dyint128ll(s64 v);
BGBDY_API dyt dyint128str(char *str);
BGBDY_API int dyint128p(dyt p);
BGBDY_API iv128_t dyint128v(dyt v);
BGBDY_API s64 iv128_s64v(iv128_t v);
BGBDY_API iv128_t iv128_mkll(s64 v);
BGBDY_API iv128_t iv128_mk2(u64 a, u64 b);
BGBDY_API iv128_t iv128_mk4(u32 a, u32 b, u32 c, u32 d);
BGBDY_API iv128_t iv128_mulb(iv128_t a, int b);
BGBDY_API iv128_t iv128_divb(iv128_t a, int b);
BGBDY_API iv128_t atoxl_iv(char *str);
BGBDY_API char *xltoa_iv(iv128_t val);
BGBDY_API void iv128_zero(iv128_t *val);
BGBDY_API void iv256_zero(iv256_t *val);
BGBDY_API int iv128_zerop(iv128_t val);
BGBDY_API int iv128_negativep(iv128_t val);
BGBDY_API iv128_t iv128_neg(iv128_t val);
BGBDY_API iv128_t iv128_not(iv128_t val);
BGBDY_API iv128_t iv128_shl(iv128_t a, int b);
BGBDY_API iv128_t iv128_shr(iv128_t a, int b);
BGBDY_API iv128_t iv128_sar(iv128_t a, int b);
BGBDY_API iv128_t iv128_rol(iv128_t a, int b);
BGBDY_API iv128_t iv128_ror(iv128_t a, int b);
BGBDY_API int iv128_cmp_eq(iv128_t a, iv128_t b);
BGBDY_API int iv128_cmp_g(iv128_t a, iv128_t b);
BGBDY_API int iv128_cmp_ge(iv128_t a, iv128_t b);
BGBDY_API int iv128_cmp_l(iv128_t a, iv128_t b);
BGBDY_API int iv128_cmp_le(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_and(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_or(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_xor(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_add(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_sub(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_mul(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_mulh(iv128_t a, iv128_t b);
BGBDY_API iv256_t iv128_mulw(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_udiv(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_umod(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_div(iv128_t a, iv128_t b);
BGBDY_API iv128_t iv128_mod(iv128_t a, iv128_t b);
BGBDY_API iv256_t iv256_neg(iv256_t val);
BGBDY_API iv256_t iv256_shl(iv256_t a, int b);
BGBDY_API iv256_t iv256_shr(iv256_t a, int b);
BGBDY_API int iv256_cmp_eq(iv256_t a, iv256_t b);
BGBDY_API int iv256_cmp_g(iv256_t a, iv256_t b);
BGBDY_API int iv256_cmp_ge(iv256_t a, iv256_t b);
BGBDY_API int iv256_cmp_l(iv256_t a, iv256_t b);
BGBDY_API int iv256_cmp_le(iv256_t a, iv256_t b);
BGBDY_API iv256_t iv256_add(iv256_t a, iv256_t b);
BGBDY_API iv256_t iv256_sub(iv256_t a, iv256_t b);
//AHSRC:base/float128.c
BGBDY_API dyt dyfloat128(fv128_t v);
BGBDY_API dyt dyfloat128d(double v);
BGBDY_API dyt dyfloat128str(char *str);
BGBDY_API int dyfloat128p(dyt p);
BGBDY_API fv128_t dyfloat128v(dyt v);
BGBDY_API double dyfloat128dv(dyt v);
//AHSRC:base/vfile2.c
BGBDY_API int vfread(void *buf, int s1, int s2, VFILE *fd);
BGBDY_API int vfwrite(void *buf, int s1, int s2, VFILE *fd);
BGBDY_API int vfgetc(VFILE *fd);
BGBDY_API int vfputc(int c, VFILE *fd);
BGBDY_API int vfflush(VFILE *fd);
BGBDY_API vfoffs_t vfseek(VFILE *fd, vfoffs_t pos, int rel);
BGBDY_API vfoffs_t vftell(VFILE *fd);
BGBDY_API int vfeof(VFILE *fd);
BGBDY_API int vfclose(VFILE *fd);
BGBDY_API int vfioctl(VFILE *fd, int req, void *arg);
BGBDY_API int vfioctl2(VFILE *fd, int req, void *arg0, void *arg1);
BGBDY_API int vfioctl3(VFILE *fd, int req, void *arg0, void *arg1, void *arg2);
BGBDY_API char *vfgets(char *s, int n, VFILE *fd);
BGBDY_API int vfputs(char *str, VFILE *fd);
BGBDY_API void vf_register(VFILE_Interface *iface);
BGBDY_API void vf_register_fs(VFILE_Mount_Interface *iface);
BGBDY_API VFILE *vf_new();
BGBDY_API void vf_destroy(VFILE *fd);
BGBDY_API VFILE_Mount *vf_new_mount();
BGBDY_API VFILE *vffopen(char *name, char *mode);
BGBDY_API int vf_mount(char *src, char *dst, char *fs, char **ops);
BGBDY_API void vf_umount(char *name);
BGBDY_API void vfDumpMounts(void);
BGBDY_API VFDIR *vfopendir(char *name);
BGBDY_API void vfclosedir(VFDIR *dir);
BGBDY_API char *vfreaddir(VFDIR *dir);
BGBDY_API void vfrewinddir(VFDIR *dir);
BGBDY_API int vfstatflags(char *name);
BGBDY_API int vfmkdir(char *name, int flags);
BGBDY_API char *vfgenabs(char *base, char *name);
BGBDY_API char *vfgetext(char *name);
BGBDY_API int vfcmpext(char *str, char *ext);
BGBDY_API char *vfTryFindOSPath(char *name, char *mode);
BGBDY_API byte *vf_bufferin(VFILE *fd);
BGBDY_API byte *vf_bufferin_sz(VFILE *fd, int *rsz);
BGBDY_API byte *vf_loadfile(char *name, int *rsz);
BGBDY_API int vf_storefile(char *name, void *buf, int sz);
BGBDY_API void vfprint(VFILE *fd, char *str, ...);
BGBDY_API int vfDeflateBuffer(byte *obuf, byte *ibuf, int osz, int isz);
BGBDY_API int vfDeflateBuffer64(byte *obuf, byte *ibuf, int osz, int isz);
BGBDY_API int vfDeflateBufferLvl(byte *obuf, byte *ibuf, int osz, int isz, int lvl);
BGBDY_API int vfInflateBuffer(byte *obuf, byte *ibuf, int osz, int isz);
BGBDY_API void *vfGetEnv();
//AHSRC:base/vfile2_buffer.c
BGBDY_API VFILE *VFBUF_VfWrapEntry(VFBUF_Entry *ent);
BGBDY_API VFBUF_Entry *VFBUF_EntryWrapBuffer(char *name, void *data, int sz);
//AHSRC:base/vfile2_dir.c
BGBDY_API VFILE *vfdir_wrapfd(FILE *fd);
//AHSRC:base/vfile2_zip.c
//AHSRC:base/vfile2_zpak.c
//AHSRC:base/inflate.c
//AHSRC:base/deflate.c
//AHSRC:base/vfile2_exwad.c
BGBDY_API VFILE *VFILE_ExWAD_OpenAny(char *name, char *mode);
//AHSRC:base/inflate2.c
//AHSRC:base/netval.c
BGBDY_API void *BGBDY_WrapIntFast(int i);
BGBDY_API int BGBDY_UnwrapIntFast(void *a);
BGBDY_API s32 *BGBDY_AllocInt32(void);
BGBDY_API s64 *BGBDY_AllocInt64(void);
BGBDY_API f32 *BGBDY_AllocFloat32(void);
BGBDY_API f64 *BGBDY_AllocFloat64(void);
BGBDY_API s128 *BGBDY_AllocInt128(void);
BGBDY_API f128 *BGBDY_AllocFloat128(void);
BGBDY_API float *BGBDY_AllocVec2(void);
BGBDY_API float *BGBDY_AllocVec3(void);
BGBDY_API float *BGBDY_AllocVec4(void);
BGBDY_API float *BGBDY_AllocQuat(void);
BGBDY_API double *BGBDY_AllocVec2D(void);
BGBDY_API double *BGBDY_AllocVec3D(void);
BGBDY_API double *BGBDY_AllocVec4D(void);
BGBDY_API double *BGBDY_AllocQuatD(void);
BGBDY_API void BGBDY_FreeInt32(s32 *p);
BGBDY_API void BGBDY_FreeInt64(s64 *p);
BGBDY_API void BGBDY_FreeFloat32(f32 *p);
BGBDY_API void BGBDY_FreeFloat64(f64 *p);
BGBDY_API void BGBDY_FreeInt128(s128 *p);
BGBDY_API void BGBDY_FreeFloat128(f128 *p);
BGBDY_API void BGBDY_FreeVec2(float *p);
BGBDY_API void BGBDY_FreeVec3(float *p);
BGBDY_API void BGBDY_FreeVec4(float *p);
BGBDY_API void BGBDY_FreeQuat(float *p);
BGBDY_API void BGBDY_FreeVec2D(double *p);
BGBDY_API void BGBDY_FreeVec3D(double *p);
BGBDY_API void BGBDY_FreeVec4D(double *p);
BGBDY_API void BGBDY_FreeQuatD(double *p);
BGBDY_API void *BGBDY_WrapMiniFloat(double f);
BGBDY_API double BGBDY_UnwrapMiniFloat(void *p);
BGBDY_API void *BGBDY_WrapMiniFloat(double f);
BGBDY_API double BGBDY_UnwrapMiniFloat(void *p);
//AHSRC:base/dyll_func.c
BGBDY_API dyt dyRawFunc(char *sig, void *fcn);
BGBDY_API dyt dyRawClose(char *sig, void *fcn, void *data);
BGBDY_API dyt dyRawMethod(char *sig, void *fcn);
BGBDY_API dyt dyRawMethodData(char *sig, void *fcn, void *data);
BGBDY_API dyt dyRawStaticMethod(char *sig, void *fcn);
BGBDY_API dyt dyRawStaticMethodData(char *sig, void *fcn, void *data);
BGBDY_API char *dyllGenSym();
BGBDY_API dyt dyRawFunc(char *sig, void *fcn);
BGBDY_API dyt dyRawClose(char *sig, void *fcn, void *data);
BGBDY_API dyt dyRawMethod(char *sig, void *fcn);
BGBDY_API dyt dyRawMethodData(char *sig, void *fcn, void *data);
BGBDY_API int dyRawFuncP(dyt obj);
BGBDY_API int dyRawFuncBasicP(dyt obj);
BGBDY_API char *dyRawFuncGetSig(dyt obj);
BGBDY_API void *dyRawFuncGetFuncPtr(dyt obj);
BGBDY_API void *dyllApplyCallSig(BGBGC_RawFunc *inf, void *buf);
BGBDY_API void *dyllApplyRawFuncD(BGBGC_RawFunc *inf, dyt obj, dyt *args, int nargs);
BGBDY_API void *dyllApplyRawFuncB(BGBGC_RawFunc *inf, dyt obj,dytf *args, int nargs);
BGBDY_API void *dyllApplyRawFuncV(BGBGC_RawFunc *inf, dyt obj, char *sig, va_list lst);
BGBDY_API void *dyllApplyRawFuncU(BGBGC_RawFunc *inf, dyt obj, char *sig, void **args);
BGBDY_API void *dyllApplyObjRawFuncV(BGBGC_RawFunc *inf,dycObject obj, char *sig, va_list lst);
BGBDY_API void *dyllApplyObjRawFuncU(BGBGC_RawFunc *inf,dycObject obj, char *sig, void **args);
//AHSRC:base/dyll_func2.c
//AHSRC:base/dyll_func2_auto.c
BGBDY_API void DYLL_ApplyCallSig2(BGBGC_RawFunc *inf, void *buf);
//AHSRC:base/dyll_sig.c
BGBDY_API char *dyllSigGetStructName(char *sig);
BGBDY_API int dyllSigQuickSize(char *sig);
BGBDY_API int dyllSigAlignSize(char *sig);
BGBDY_API int dyllSigAlign(char *sig);
BGBDY_API char *dyllSigSizeAlign(char *sig, int *rsz, int *ral);
BGBDY_API char *dyllSigNext(char *sig);
BGBDY_API char *dyllSigEsig(char *sig);
BGBDY_API int dyllSigSizeListEsig(char *sig, char **esig, int *algn);
BGBDY_API int dyllSigSizeList(char *sig);
BGBDY_API dytf dyllExtractVariantBufferSigB(char *esig, byte *buf);
BGBDY_API dyt dyllExtractVariantBufferSig(char *esig, byte *buf);
BGBDY_API dyt dyllGetVarSig(void *p, char *sig);
BGBDY_API dyt dyllGetVarSigFlags(void *p, char *sig, s64 fl);
BGBDY_API void dyllSetVarSig(void *var, char *sig, dyt val);
BGBDY_API void dyllSetVarSig2(void *var, char *sig, dyt val);
BGBDY_API s64 dyllSigGetPtrS64(char *sig, void *ptr);
BGBDY_API double dyllSigGetPtrDouble(char *sig, void *ptr);
BGBDY_API void dyllSigSetPtrS64(char *sig, void *ptr, s64 val);
BGBDY_API void dyllSigSetPtrDouble(char *sig, void *ptr, double val);
BGBDY_API s64 dyllExtractLongBufferSig(char *esig, byte *buf);
BGBDY_API double dyllExtractRealBufferSig(char *esig, byte *buf);
BGBDY_API char *dyllSigFromDytname(char *name);
BGBDY_API char *dyllSigFromPtr(dyt ref);
BGBDY_API int dyllSigCheckName(char *sig, char *str);
BGBDY_API int dyllSigCheckSigEqP(char *siga, char *sigb);
BGBDY_API dyt dyllSigCastVariantSig(char *sig, dyt val);
//AHSRC:base/dyll_sig_arg.c
BGBDY_API char *dyllSigRet(char *sig);
BGBDY_API int dyllCheckCallArg(char *fsig, char *sig);
BGBDY_API int dyllCheckCallSig(char *fsig, char *sig);
BGBDY_API int dyllCheckCallSigValue(char *sig, dyt v);
BGBDY_API int dyllCheckCallSigList(char *sig, dyt lst);
BGBDY_API int dyllCheckCallSigArray(char *sig, dyt *args, int nargs);
BGBDY_API int dyllUnpackListSigUArgs(char *sig, dyt lst, void **arr);
BGBDY_API int dyllUnpackArraySigUArgs(char *sig, dyt *args, void **arr);
BGBDY_API int dyllUnpackArgsSigArray(char *sig, va_list lst, dyt *arr);
BGBDY_API dyt dyllUnpackArgsSigList(char *sig, va_list lst);
BGBDY_API int dyllUnpackUArgsSigArray(char *sig, void **args, dyt *arr);
BGBDY_API int dyllUnpackArgsSigUArgs(char *sig, va_list lst, void **arr);
BGBDY_API int dyllGetSigUArgsSize(char *sig);
BGBDY_API int dyllRepackBufSigArray(char *sig, char **esig,byte *buf, dyt *arr, int nargs);
BGBDY_API int dyllRepackBufSigArrayB(char *sig, char **esig,byte *buf, dytf *arr, int nargs);
BGBDY_API int dyllRepackBufSigArgs(char *dsig, char **esig, byte *buf,char *ssig, va_list lst);
BGBDY_API int dyllRepackBufSigV(char *sig, byte *buf, va_list lst);
BGBDY_API int dyllRepackBufSigU(char *sig, byte *buf, void **args);
BGBDY_API int dyllRepackBufSigU(char *sig, byte *buf, void **args);
BGBDY_API int dyllRepackBufSigUArgs(char *dsig, char **esig, byte *buf,char *ssig, void **args);
BGBDY_API int dyllRepackBufSigUArgs(char *dsig, char **esig, byte *buf,char *ssig, void **args);
//AHSRC:base/dyll_sig_flags.c
BGBDY_API char *dyllFlagSigNextFlag(char *sig);
BGBDY_API s64 dyllFlagSigPeekFlag(char *sig);
BGBDY_API s64 dyllFlagSigReadFlag(char **rsig);
BGBDY_API s64 dyllDecodeFlagSig(char *sig);
BGBDY_API char *dyllEncodeFlagSig(s64 fl);
//AHSRC:base/dyll_sig_trans.c
BGBDY_API void DYLL_CopyValuesBuf(DYLL_ArgList *ctx,dycValue *args, byte *buf);
BGBDY_API void DYLL_CopyBufValues(DYLL_ArgList *ctx,byte *buf, dycValue *args);
BGBDY_API DYLL_ArgList *DYLL_CompileSigArgList(char *sig);
//AHSRC:base/dyll_addr.c
BGBDY_API int BGBGC_InitDyLL();
BGBDY_API void dyllAddLibraryPath(char *name);
BGBDY_API void dyllAddLibraryPathFront(char *name);
BGBDY_API char *dyllString(char *sym);
BGBDY_API char *dyllStrdup(char *sym);
BGBDY_API void *dyllGetAddr(char *sym);
BGBDY_API void *dyllGetProcAddress(dyt lib, char *sym);
BGBDY_API char *dyllGetAddrName(void *ptr);
BGBDY_API void dyllSetAddr(char *sym, void *ptr);
BGBDY_API void *dyllCreateVar(char *sym, char *sig);
BGBDY_API void *dyllGetPtr(char *sym);
BGBDY_API void dyllSetPtr(char *sym, void *v);
BGBDY_API int dyllGetInt(char *sym);
BGBDY_API void dyllSetInt(char *sym, int v);
BGBDY_API s64 dyllGetLong(char *sym);
BGBDY_API void dyllSetLong(char *sym, s64 v);
BGBDY_API float dyllGetFloat(char *sym);
BGBDY_API void dyllSetFloat(char *sym, float v);
BGBDY_API double dyllGetDouble(char *sym);
BGBDY_API void dyllSetDouble(char *sym, double v);
BGBDY_API dyt dyllGetDynamic(char *sym);
BGBDY_API void dyllSetDynamic(char *sym, dyt val);
BGBDY_API dyt dyllNewEnv(dyt super);
BGBDY_API void dyllEnvBindAddr(dyt env, char *name, void *addr);
BGBDY_API void dyllEnvBindAddrSig(dyt env, char *name, char *sig, void *addr);
BGBDY_API void dyllEnvSetAddr(dyt env, char *name, void *addr);
BGBDY_API void *dyllEnvGetAddr(dyt env, char *name);
BGBDY_API char *dyllEnvGetSig(dyt env, char *name);
BGBDY_API void *dyllEnvAllocVar(dyt env, char *name, char *sig);
BGBDY_API dyt dyllThunkEnv(dyt fcn);
BGBDY_API void dyllThunkBindAddr(dyt fcn, char *name, void *addr);
BGBDY_API void dyllThunkBindAddrSig(dyt fcn, char *name, char *sig, void *addr);
BGBDY_API void dyllThunkSetAddr(dyt fcn, char *name, void *addr);
BGBDY_API void *dyllThunkGetAddr(dyt fcn, char *name);
BGBDY_API char *dyllThunkGetSig(dyt fcn, char *name);
BGBDY_API dyt dyllAsmThunk(char *buf);
BGBDY_API dyt dyllAsmThunkEnv(char *buf, dyt env);
BGBDY_API dyt dyllAsmThunkSuperEnv(char *buf, dyt senv);
BGBDY_API dyt dyllAsmThunkInline(char *buf);
BGBDY_API dyt dyllAsmThunkInlineEnv(char *buf, dyt env);
BGBDY_API dyt dyllAsmThunkInlineSuperEnv(char *buf, dyt senv);
BGBDY_API dyt dyllAsmModuleBuffer(char *name, char *buf);
BGBDY_API void dyllAsmBegin();
BGBDY_API void *dyllAsmEnd();
BGBDY_API void *dyllAsmEndDebug();
BGBDY_API void dyllAsmBeginThunkInline();
BGBDY_API void *dyllAsmEndThunkInline();
BGBDY_API void *dyllAsmEndThunkInlineDebug();
BGBDY_API void dyllAsmPuts(char *str);
BGBDY_API void dyllAsmPrintv(char *str, va_list lst);
BGBDY_API void dyllAsmPrint(char *str, ...);
BGBDY_API int dyllAsmRegisterLinkMeta(char *name,void *(*fcn)(char *sym, char *name, char **args));
BGBDY_API int dyllAsmRegisterLinkNotify(char *name,void (*fcn)(char *sym, char *name, char **args, void *ptr));
BGBDY_API char *dyllComposeLinkMetaName(char *name, char **args);
BGBDY_API char *dyllComposeLinkNotifyName(char *name, char **args);
BGBDY_API char *dyllComposeLinkMetaName0(char *name);
BGBDY_API char *dyllComposeLinkMetaName1(char *name, char *ar0);
BGBDY_API char *dyllComposeLinkMetaName2(char *name, char *ar0, char *ar1);
BGBDY_API char *dyllComposeLinkMetaName3(char *name, char *ar0, char *ar1, char *ar2);
BGBDY_API char *dyllComposeLinkMetaName4(char *name,char *ar0, char *ar1, char *ar2, char *ar3);
BGBDY_API char *dyllGetAddrSig(void *fcn);
BGBDY_API char *dyllGetNameSig(char *name);
BGBDY_API void *dyllApplyPtrV(void *fcn, va_list lst);
BGBDY_API void *dyllApplyPtrU(void *fcn, void **args);
BGBDY_API int dyllApplyPtrVi(void *fcn, va_list lst);
BGBDY_API s64 dyllApplyPtrVl(void *fcn, va_list lst);
BGBDY_API float dyllApplyPtrVf(void *fcn, va_list lst);
BGBDY_API double dyllApplyPtrVd(void *fcn, va_list lst);
BGBDY_API void *dyllApplyPtrVp(void *fcn, va_list lst);
BGBDY_API void *dyllApplyPtrObjV(void *fcn, void *obj, va_list lst);
BGBDY_API void *dyllApplyPtrObjU(void *fcn, void *obj, void **args);
BGBDY_API void *dyllApplyPtrSigV(void *fcn, char *sig, va_list lst);
BGBDY_API void *dyllApplyPtrSigU(void *fcn, char *sig, void **args);
BGBDY_API int dyllApplyPtrSigVi(void *fcn, char *sig, va_list lst);
BGBDY_API s64 dyllApplyPtrSigVl(void *fcn, char *sig, va_list lst);
BGBDY_API float dyllApplyPtrSigVf(void *fcn, char *sig, va_list lst);
BGBDY_API double dyllApplyPtrSigVd(void *fcn, char *sig, va_list lst);
BGBDY_API void *dyllApplyPtrSigVp(void *fcn, char *sig, va_list lst);
BGBDY_API void *dyllApplyPtrSigObjV(void *fcn, char *sig,void *obj, va_list lst);
BGBDY_API void *dyllApplyPtrSigObjU(void *fcn, char *sig,void *obj, void **args);
BGBDY_API void *dyllWrapClosure(void *fcn, void *data, char *sig);
BGBDY_API dyt dyllGetFuncAddrObj(char *name);
BGBDY_API int dyllLoadLibrary(char *name);
BGBDY_API dyt dyllCallTopA(char *name, dyt *args, int nargs);
//AHSRC:base/dyll_sigcache.c
//AHSRC:base/dyll_metapath.c
BGBDY_API void dyllMetaInit();
BGBDY_API void dyllMetaCommit();
BGBDY_API int dyllMetaLoadDB(char *name);
BGBDY_API int dyllMetaSaveDB(char *name);
BGBDY_API int dyllMetaLoadDB2(char *name, char *base);
BGBDY_API int dyllMetaLoadBufferDB(char *name, char *base,char *buf, int szbuf);
BGBDY_API void dyllMetaBindKey(char *key, char *val);
BGBDY_API char *dyllMetaLookupKey(char *key);
//AHSRC:base/dyll_catch.c
BGBDY_API dyllException dyllBeginUnwind();
BGBDY_API void dyllEndUnwind(dyllException ctx);
BGBDY_API void dyllUnwindNext(dyllException ctx);
BGBDY_API dyt dyllUnwindObj(dyllException ctx);
BGBDY_API void dyllDoUnwind(dyt obj);
BGBDY_API void dyllThrowObj(dyt obj);
BGBDY_API void dyllThrowName(char *str);
BGBDY_API void dyllThrowClass(char *str);
BGBDY_API void dyllThrow(char *str);
BGBDY_API int dyllCatchP(dyllException ctx, char *str);
BGBDY_API void dyllTryCatchFl(void (*fcnTry)(void *data), int (*fcnCatch)(dyllException ex, void *data), void *data, int fl);
BGBDY_API void dyllTryCatch(void (*fcnTry)(void *data), int (*fcnCatch)(dyllException ex, void *data), void *data);
BGBDY_API void dyllTry(void (*fcnTry)(void *data), void *data);
//AHSRC:base/dyll_thunk.c
//AHSRC:base/dyll_typebox.c
BGBDY_API DYLL_BoxPtr *DYLL_TypeBox_AllocBoxPtr();
BGBDY_API void DYLL_TypeBox_FreeBoxPtr(DYLL_BoxPtr *tmp);
BGBDY_API dyt dyllTypeboxSig(char *str);
BGBDY_API int dyllTypeboxSigP(dyt obj);
BGBDY_API char *dyllTypeboxSigV(dyt obj);
BGBDY_API dyt dyllTypeboxSigFromRef(dyt ref);
BGBDY_API int dyllTypeboxSigIsStrP(dyt obj, char *str);
BGBDY_API int dyllTypeboxSigEqP(dyt obja, dyt objb);
BGBDY_API dyt dyllTypeboxVal(char *str, void *ptr);
BGBDY_API int dyllTypeboxValP(dyt obj);
BGBDY_API char *dyllTypeboxValSig(dyt obj);
BGBDY_API void *dyllTypeboxValData(dyt obj);
BGBDY_API int dyllTypeboxValSize(dyt obj);
BGBDY_API dyt dyllTypeboxPtrChkFcn(char *str, void *ptr);
BGBDY_API dyt dyllTypeboxPtr(char *str, void *ptr);
BGBDY_API int dyllTypeboxPtrP(dyt obj);
BGBDY_API char *dyllTypeboxPtrSig(dyt obj);
BGBDY_API void *dyllTypeboxPtrData(dyt obj);
BGBDY_API char *dyllTypeGetMetaPacksig(char *name);
BGBDY_API dyt dyllNewCTop(char *name, char *prefix);
BGBDY_API dyt dyllCTopGet(dyt ctop, char *name);
//AHSRC:base/dyll_mrbc2.c
BGBDY_API int DYLL_MRBC2_EvalVoid(char *str);
BGBDY_API void *DYLL_MRBC2_EvalPVoid(char *str);
BGBDY_API int DYLL_MRBC2_EvalInt(char *str);
BGBDY_API double DYLL_MRBC2_EvalFloat(char *str);
//AHSRC:base/dyll_iface.c
BGBDY_API void *dycJniGetJvmtiEnv();
BGBDY_API void *dyllGetIface();
BGBDY_API void *dyllGetObject(char *name);
BGBDY_API void dyllSetObject(char *name, void *value);
//AHSRC:base/dyll_struct.c
BGBDY_API dycClass dyllGetStructClassInfo(char *qname);
BGBDY_API int dyllGetStructSlotSigOffsFlags(char *qname, char *fname,char **rsig, int *roffs, s64 *rflags);
BGBDY_API int dyllGetStructSlotSigOffs(char *qname, char *fname,char **rsig, int *roffs);
BGBDY_API char *dyllGetStructSlotSig(char *qname, char *fname);
BGBDY_API int dyllGetStructSlotOffs(char *qname, char *fname);
BGBDY_API dyt dyllGetStructSlotDynamic(void *ptr, char *qname, char *fname);
BGBDY_API dyt dyllSetStructSlotDynamic(void *ptr,char *qname, char *fname, dyt val);
BGBDY_API dyt dyllGetDynamicStructSlotDynamic(void *obj, char *fname);
BGBDY_API dyt dyllSetDynamicStructSlotDynamic(void *obj, char *fname, dyt val);
//AHSRC:base/dyll_exwad.c
BGBDY_API void ExWAD_StoreImage(char *name, ExWAD_Context *ctx);
BGBDY_API int ExWAD_SaveImage(ExWAD_Context *ctx);
BGBDY_API ExWAD_Context *ExWAD_LoadImage(char *name);
BGBDY_API ExWAD_Context *ExWAD_LoadImageBuffer(char *name, byte *buf, int sz);
BGBDY_API ExWAD_Context *ExWAD_LoadImage2(char *name);
BGBDY_API ExWAD_Context *ExWAD_LoadImageBufferRead(char *name, byte *buf, int sz);
BGBDY_API byte *ExWAD_LoadFile(ExWAD_Context *ctx, char *name, int *rsz);
BGBDY_API void ExWAD_StoreFile(ExWAD_Context *ctx, char *name, byte *buf, int sz);
BGBDY_API ExWAD_CachedFile *ExWAD_LoadCachedFile(ExWAD_Context *ctx, char *name);
BGBDY_API ExWAD_File *ExWAD_OpenFile(ExWAD_Context *ctx, char *name);
//AHSRC:base/ty_complex.c
//AHSRC:base/ty_quat.c
BGBDY_API quat dtyQuatSgn(quat q);
BGBDY_API float dtyQuatArg(quat q);
BGBDY_API quat dtyQuatLn(quat q);
BGBDY_API quat dtyQuatExp(quat q);
BGBDY_API quat dtyQuatSin(quat q);
BGBDY_API quat dtyQuatCos(quat q);
BGBDY_API quat dtyQuatTan(quat q);
BGBDY_API quat dtyQuatCot(quat q);
BGBDY_API quat dtyQuatSinh(quat q);
BGBDY_API quat dtyQuatCosh(quat q);
BGBDY_API quat dtyQuatTanh(quat q);
BGBDY_API quat dtyQuatCoth(quat q);
BGBDY_API quat dtyQuatASin(quat q);
BGBDY_API quat dtyQuatACos(quat q);
BGBDY_API quat dtyQuatATan(quat q);
BGBDY_API quat dtyQuatACot(quat q);
BGBDY_API quat dtyExpRealQuat(float b, quat x);
BGBDY_API quat dtyExpQuatReal(quat p, float q);
BGBDY_API quat dtyQuatExpQuatQuat(quat p, quat q);
BGBDY_API vec3 dtyQuatSlerp(vec3 v0, vec3 v1, float t);
BGBDY_API vec3 dtyVec3ArcPolate(vec3 v0, vec3 v1, float t);
BGBDY_API quat dtyQuatArcPolate(quat q0, quat q1, float t);
//AHSRC:base/ty_matrix.c
BGBDY_API mat2 dtyMat2vf(float *v);
BGBDY_API mat3 dtyMat3vf(float *v);
BGBDY_API mat4 dtyMat4vf(float *v);
BGBDY_API mat2 dtyMat2f(float a, float b, float c, float d);
BGBDY_API mat3 dtyMat3f(float a, float b, float c, float d, float e, float f, float g, float h, float i);
BGBDY_API mat4 dtyMat4f(float a, float b, float c, float d, float e, float f, float g, float h, float i, float j, float k, float l, float m, float n, float o, float p);
BGBDY_API mat2 dtyMat2Add(mat2 a, mat2 b);
BGBDY_API mat2 dtyMat2Sub(mat2 a, mat2 b);
BGBDY_API mat2 dtyMat2Mul(mat2 a, mat2 b);
BGBDY_API mat3 dtyMat3Add(mat3 a, mat3 b);
BGBDY_API mat3 dtyMat3Sub(mat3 a, mat3 b);
BGBDY_API mat3 dtyMat3Mul(mat3 a, mat3 b);
BGBDY_API mat4 dtyMat4Add(mat4 a, mat4 b);
BGBDY_API mat4 dtyMat4Sub(mat4 a, mat4 b);
BGBDY_API mat4 dtyMat4Mul(mat4 a, mat4 b);
BGBDY_API mat2 dtyMat2Inv(mat2 a);
BGBDY_API mat3 dtyMat3Inv(mat3 a);
BGBDY_API mat4 dtyMat4Inv(mat4 a);
BGBDY_API mat2 dtyMat2Trans(mat2 a);
BGBDY_API mat3 dtyMat3Trans(mat3 a);
BGBDY_API mat4 dtyMat4Trans(mat4 a);
BGBDY_API mat2 dtyMat2MulI(mat2 a, mat2 b);
BGBDY_API mat3 dtyMat3MulI(mat3 a, mat3 b);
BGBDY_API mat4 dtyMat4MulI(mat4 a, mat4 b);
BGBDY_API mat2 dtyMat2MulT(mat2 a, mat2 b);
BGBDY_API mat3 dtyMat3MulT(mat3 a, mat3 b);
BGBDY_API mat4 dtyMat4MulT(mat4 a, mat4 b);
//AHSRC:base/dy_wref.c
BGBDY_API dyt dwWrapWRef(iv128_t ptr);
BGBDY_API iv128_t dwUnwrapWRef(dyt p);
BGBDY_API u64 dwGetWRefSeg(dyt p);
BGBDY_API int dwrefp(dyt p);
BGBDY_API char *dwgettype(dyt p);
BGBDY_API int dwtypep(dyt p, char *ty);
BGBDY_API dyt dwtalloc(u64 seg, char *ty, u64 sz);
BGBDY_API int dwfree(dyt ptr);
BGBDY_API int dwmemcpy(dyt dst, dyt src, int sz);
BGBDY_API int dwreadmem(void *buf, int sz, dyt ptr, int disp);
BGBDY_API int dwwritemem(void *buf, int sz, dyt ptr, int disp);
BGBDY_API int dwgetc(dyt ptr, int disp);
BGBDY_API int dwgetb(dyt ptr, int disp);
BGBDY_API int dwgetw(dyt ptr, int disp);
BGBDY_API int dwgeth(dyt ptr, int disp);
BGBDY_API u32 dwgetdw(dyt ptr, int disp);
BGBDY_API s32 dwgeti(dyt ptr, int disp);
BGBDY_API u64 dwgetq(dyt ptr, int disp);
BGBDY_API s64 dwgetl(dyt ptr, int disp);
BGBDY_API float dwgetf(dyt ptr, int disp);
BGBDY_API double dwgetd(dyt ptr, int disp);
BGBDY_API iv128_t dwgetdq(dyt ptr, int disp);
BGBDY_API int dwputc(dyt ptr, int disp, char v);
BGBDY_API int dwputb(dyt ptr, int disp, byte v);
BGBDY_API int dwputw(dyt ptr, int disp, u16 v);
BGBDY_API int dwputh(dyt ptr, int disp, s16 v);
BGBDY_API int dwputdw(dyt ptr, int disp, u32 v);
BGBDY_API int dwputi(dyt ptr, int disp, s32 v);
BGBDY_API int dwputq(dyt ptr, int disp, u64 v);
BGBDY_API int dwputl(dyt ptr, int disp, s64 v);
BGBDY_API int dwputf(dyt ptr, int disp, float v);
BGBDY_API int dwputd(dyt ptr, int disp, double v);
BGBDY_API int dwputdq(dyt ptr, int disp, iv128_t v);
BGBDY_API dyt dwgetp(dyt ptr, int disp);
BGBDY_API int dwputp(dyt ptr, int disp, dyt p);
//AHSRC:base/dy_strarith.c
BGBDY_API char *dysShl(char *s, int v);
BGBDY_API char *dysShr(char *s, int v);
BGBDY_API char *dysShl10(char *s, int v);
BGBDY_API char *dysShr10(char *s, int v);
BGBDY_API char *dysShr10F(char *s, int v);
BGBDY_API int dysCmp(char *s0, char *s1);
BGBDY_API char *dysAdd(char *s0, char *s1);
BGBDY_API char *dysSub(char *s0, char *s1);
BGBDY_API char *dysMul(char *s0, char *s1);
BGBDY_API char *dysDiv(char *s0, char *s1);
//AHSRC:base/dy_chan.c
BGBDY_API dyt chnNew();
BGBDY_API void chnGetBuf(dyt chan, void *buf, int sz);
BGBDY_API void chnPutBuf(dyt chan, void *buf, int sz);
BGBDY_API void chnSendBuf(dyt chan, void *buf, int sz);
BGBDY_API int chnPollGetP(dyt chan);
BGBDY_API int chnPollPutP(dyt chan);
BGBDY_API int chnGetP(dyt chan);
BGBDY_API int chnPutP(dyt chan);
BGBDY_API int chnGetInt(dyt chan);
BGBDY_API s64 chnGetLong(dyt chan);
BGBDY_API float chnGetFloat(dyt chan);
BGBDY_API double chnGetDouble(dyt chan);
BGBDY_API void *chnGetPtr(dyt chan);
BGBDY_API char *chnGetString(dyt chan);
BGBDY_API dyt chanGetDyt(dyt chan);
BGBDY_API void chnPutInt(dyt chan, int val);
BGBDY_API void chnPutLong(dyt chan, s64 val);
BGBDY_API void chnPutFloat(dyt chan, float val);
BGBDY_API void chnPutDouble(dyt chan, double val);
BGBDY_API void chnPutPtr(dyt chan, void *val);
BGBDY_API void chnPutString(dyt chan, char *val);
BGBDY_API void chnPutDyt(dyt chan, dyt val);
BGBDY_API void chnSendInt(dyt chan, int val);
BGBDY_API void chnSendLong(dyt chan, s64 val);
BGBDY_API void chnSendFloat(dyt chan, float val);
BGBDY_API void chnSendDouble(dyt chan, double val);
BGBDY_API void chnSendPtr(dyt chan, void *val);
BGBDY_API void chnSendString(dyt chan, char *val);
BGBDY_API void chnSendDyt(dyt chan, dyt val);
//AHSRC:base/dy_dytf2.c
BGBDY_API dytf dytfWrap(dyt a);
BGBDY_API dyt dytfUnwrap(dytf a);
BGBDY_API int dytfFlonumP(dytf a);
BGBDY_API bool dytfFixrealP(dytf a);
BGBDY_API int dytfRealP(dytf a);
BGBDY_API int dytfFloatP(dytf a);
BGBDY_API int dytfDoubleP(dytf a);
BGBDY_API dytf dytfReal(double a);
BGBDY_API dytf dytfFloat(double a);
BGBDY_API dytf dytfDouble(double a);
BGBDY_API double dytfRealv(dytf a);
BGBDY_API double dytfFloatv(dytf a);
BGBDY_API double dytfDoublev(dytf a);
BGBDY_API double dytfFloatvF(dytf a);
BGBDY_API double dytfDoublevF(dytf a);
BGBDY_API bool dytfIntP(dytf a);
BGBDY_API bool dytfLongP(dytf a);
BGBDY_API dytf dytfInt(s64 v);
BGBDY_API dytf dytfLong(s64 v);
BGBDY_API s64 dytfIntvF(dytf a);
BGBDY_API s64 dytfIntv(dytf a);
BGBDY_API s64 dytfLongv(dytf a);
BGBDY_API s64 dytfLongvF(dytf a);
BGBDY_API dytf dytfInt32F(s32 v);
BGBDY_API s32 dytfInt32vF(dytf a);
BGBDY_API dytf dytfAddInt32FC(dytf a, s32 b);
BGBDY_API dytf dytfSubInt32FC(dytf a, s32 b);
BGBDY_API dytf dytfMulInt32FC(dytf a, s32 b);
BGBDY_API dytf dytfDivInt32FC(dytf a, s32 b);
BGBDY_API bool dytfInt32P(dytf a);
BGBDY_API double dytfRealvF(dytf a);
BGBDY_API void *dytfPtrv(dytf a);
BGBDY_API dytf dytfString(char *str);
BGBDY_API dytf dytfSymbol(char *str);
BGBDY_API dytf dytfKeyword(char *str);
BGBDY_API char *dytfStringv(dytf a);
BGBDY_API char *dytfSymbolv(dytf a);
BGBDY_API char *dytfKeywordv(dytf a);
BGBDY_API char *dytfStringvF(dytf a);
BGBDY_API char *dytfSymbolvF(dytf a);
BGBDY_API char *dytfKeywordvF(dytf a);
BGBDY_API bool dytfStringP(dytf a);
BGBDY_API bool dytfSymbolP(dytf a);
BGBDY_API bool dytfKeywordP(dytf a);
BGBDY_API char *dytfgettype(dytf a);
BGBDY_API int dytftypep(dytf a, char *ty);
//AHSRC:base/dy_method.c
BGBDY_API dyt dyApplyMethod0(dyt obj, dyt mth);
BGBDY_API dyt dyApplyMethod1(dyt obj, dyt mth, dyt a);
BGBDY_API dyt dyApplyMethod2(dyt obj, dyt mth, dyt a, dyt b);
BGBDY_API dyt dyApplyMethod3(dyt obj, dyt mth, dyt a, dyt b, dyt c);
BGBDY_API dyt dyApplyMethod4(dyt obj, dyt mth, dyt a, dyt b, dyt c, dyt d);
BGBDY_API dytf dyApplyMethodB(dyt obj, dyt mth, dytf *args, int nargs);
BGBDY_API dyt dyApplyMethod(dyt obj, dyt mth, dyt *args, int nargs);
BGBDY_API dyt dyApplyMethodLst(dyt obj, dyt mth, dyt args);
BGBDY_API void *dyApplyMethodU(dyt obj, dyt mth,char *sig, void **args, int szargs);
BGBDY_API void *dyApplyMethodV(dyt obj, dyt mth,char *sig, va_list args);
BGBDY_API void *dyApplyMethodSig(dyt obj, dyt mth,char *sig, ...);
BGBDY_API void *dycApplyMethodU(dycObject obj, dyt mth,char *sig, void **args, int szargs);
BGBDY_API void *dycApplyMethodV(dycObject obj, dyt mth,char *sig, va_list args);
BGBDY_API void *dycApplyStaticU(dycClass inf, dyt mth,char *sig, void **args, int szargs);
BGBDY_API void *dycApplyStaticV(dycClass inf, dyt mth,char *sig, va_list args);
BGBDY_API void *dycApplyStructMethodU(void *obj, dyt mth,char *sig, void **args, int szargs);
BGBDY_API void *dycApplyStructMethodV(void *obj, dyt mth,char *sig, va_list args);
BGBDY_API void *dyllConvObjCFunc(dyt obj, char *sig);
//AHSRC:base/dy_oo.c
BGBDY_API char *dyToString(dyt obj);
BGBDY_API int dyCheckValueNoCopyP(dyt p);
BGBDY_API dyt dyCopyValue(dyt p);
BGBDY_API int dyDropValue(dyt p);
BGBDY_API void dyTypeSetClassAlias(char *type, char *qname);
BGBDY_API void dyTypeEncodeBinary(char *type,void (*fcn)(dysObjectStream ctx, dyt val));
BGBDY_API void dyTypeDecodeBinary(char *type,dyt (*fcn)(dysObjectStream ctx));
BGBDY_API void dyTypeGetSlot(char *ty, dyt (*fcn)(dyt, char*));
BGBDY_API void dyTypeSetSlot(char *ty, dyt (*fcn)(dyt, char*, dyt));
BGBDY_API void dyTypeNextSlot(char *ty, dyt (*fcn)(dyt, char*));
BGBDY_API void dyTypeTrySetSlot(char *ty, dyt (*fcn)(dyt, char*, dyt));
BGBDY_API void dyTypeGetDelegate(char *ty, dyt (*fcn)(dyt, char*));
BGBDY_API void dyTypeSetDelegate(char *ty, dyt (*fcn)(dyt, char*, dyt));
BGBDY_API void dyTypeNextDelegate(char *ty, dyt (*fcn)(dyt, char*));
BGBDY_API void dyTypeCallMethod(char *ty, dyt (*fcn)(dyt, dyt, dyt *, int));
BGBDY_API void dyTypeApply(char *ty, dyt (*fcn)(dyt, dyt *, int));
BGBDY_API void dyTypeApplyObj(char *ty, dyt (*fcn)(dyt, dyt, dyt *, int));
BGBDY_API void dyTypeToString(char *ty, char *(*fcn)(dyt));
BGBDY_API void dyTypeCopyValue(char *ty, dyt (*fcn)(dyt));
BGBDY_API void dyTypeDropValue(char *ty, int (*fcn)(dyt));
BGBDY_API void dyTypeVtabMethod(char *ty, char *name, dyt mth);
BGBDY_API void dyTypeMethod0(char *ty, char *sym, dyt (*fcn)(dyt self));
BGBDY_API void dyTypeMethod1(char *ty, char *sym, dyt (*fcn)(dyt self,dyt));
BGBDY_API void dyTypeMethod2(char *ty, char *sym, dyt (*fcn)(dyt self,dyt,dyt));
BGBDY_API void dyTypeMethod3(char *ty, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt));
BGBDY_API void dyTypeMethodN(char *ty, char *sym, dyt (*fcn)(dyt self,dyt rest));
BGBDY_API void dyTypeMethod1N(char *ty, char *sym, dyt (*fcn)(dyt self,dyt,dyt rest));
BGBDY_API void dyTypeMethod2N(char *ty, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt rest));
BGBDY_API void dyTypeMethod3N(char *ty, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt rest));
BGBDY_API dyt dyObject();
BGBDY_API dyt dyObjectParent(dyt parent);
BGBDY_API int dyObjectp(dyt obj);
BGBDY_API int dyObjectP(dyt obj);
BGBDY_API dyt dyObject1(char *var0, dyt val0);
BGBDY_API dyt dyObject2(char *var0, dyt val0, char *var1, dyt val1);
BGBDY_API dyt dyObject3(char *var0, dyt val0,char *var1, dyt val1, char *var2, dyt val2);
BGBDY_API dyt dyObject4(char *var0, dyt val0,	char *var1, dyt val1, char *var2, dyt val2,	char *var3, dyt val3);
BGBDY_API dytf dyBindB(dyt obj, char *var, dytf val);
BGBDY_API dyt dyBind(dyt obj, char *var, dyt val);
BGBDY_API dyt dyBindInfo(dyt obj, dycSlot var, dyt val);
BGBDY_API dyt dyTrySet(dyt obj, char *var, dyt val);
BGBDY_API dyt dyGet(dyt obj, char *sym);
BGBDY_API int dyGeti(dyt obj, char *sym);
BGBDY_API s64 dyGetl(dyt obj, char *sym);
BGBDY_API double dyGetf(dyt obj, char *sym);
BGBDY_API double dyGetd(dyt obj, char *sym);
BGBDY_API void dyGet2fv(dyt obj, char *sym, float *v);
BGBDY_API void dyGet3fv(dyt obj, char *sym, float *v);
BGBDY_API void dyGet4fv(dyt obj, char *sym, float *v);
BGBDY_API void dyGet2dv(dyt obj, char *sym, double *v);
BGBDY_API void dyGet3dv(dyt obj, char *sym, double *v);
BGBDY_API void dyGet4dv(dyt obj, char *sym, double *v);
BGBDY_API char *dyGets(dyt obj, char *sym);
BGBDY_API dyt dySet(dyt obj, char *sym, dyt val);
BGBDY_API dytf dySetB(dyt obj, char *sym, dytf val);
BGBDY_API void dySeti(dyt obj, char *sym, int val);
BGBDY_API void dySetl(dyt obj, char *sym, s64 val);
BGBDY_API void dySetf(dyt obj, char *sym, double val);
BGBDY_API void dySetd(dyt obj, char *sym, double val);
BGBDY_API void dySet2f(dyt obj, char *sym, double x, double y);
BGBDY_API void dySet3f(dyt obj, char *sym, double x, double y, double z);
BGBDY_API void dySet4f(dyt obj, char *sym, double x, double y, double z, double w);
BGBDY_API void dySet2fv(dyt obj, char *sym, float *v);
BGBDY_API void dySet3fv(dyt obj, char *sym, float *v);
BGBDY_API void dySet4fv(dyt obj, char *sym, float *v);
BGBDY_API void dySet2dv(dyt obj, char *sym, double *v);
BGBDY_API void dySet3dv(dyt obj, char *sym, double *v);
BGBDY_API void dySet4dv(dyt obj, char *sym, double *v);
BGBDY_API void dySets(dyt obj, char *sym, char *val);
BGBDY_API dyt dyTryGetRef(dyt obj, char *sym);
BGBDY_API dycSlot dyTryGetInfo(dyt obj, char *sym);
BGBDY_API dyt dyGetIdx(dyt obj, int idx);
BGBDY_API dyt dySetIdx(dyt obj, int idx, dyt val);
BGBDY_API dyt dyGetIdxRef(dyt obj, int idx);
BGBDY_API dyt dyGetKey(dyt obj, dyt key);
BGBDY_API dyt dySetKey(dyt obj, dyt key, dyt val);
BGBDY_API dyt dyGetKeyRef(dyt obj, dyt key);
BGBDY_API dyt dyGetDelegate(dyt obj, char *sym);
BGBDY_API void dySetDelegate(dyt obj, char *sym, dyt val);
BGBDY_API dyt dyGetParent(dyt obj);
BGBDY_API void dySetParent(dyt obj, dyt val);
BGBDY_API void dyBindMethod(dyt obj, char *sym, dyt mth);
BGBDY_API void dyDefMethod(dyt obj, char *sym,dyt (*fcn)(dyt self, dyt *args, int nargs));
BGBDY_API void dyDefMethod0(dyt obj, char *sym, dyt (*fcn)(dyt self));
BGBDY_API void dyDefMethod1(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt));
BGBDY_API void dyDefMethod2(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt));
BGBDY_API void dyDefMethod3(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt));
BGBDY_API void dyDefMethod4(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt));
BGBDY_API void dyDefMethod5(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt,dyt));
BGBDY_API void dyDefMethod6(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt,dyt,dyt));
BGBDY_API void dyDefMethod7(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt,dyt,dyt,dyt));
BGBDY_API void dyDefMethod8(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt,dyt,dyt,dyt,dyt));
BGBDY_API void dyDefMethodN(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt rest));
BGBDY_API void dyDefMethod1N(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt rest));
BGBDY_API void dyDefMethod2N(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt rest));
BGBDY_API void dyDefMethod3N(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt rest));
BGBDY_API void dyDefMethod4N(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt,dyt rest));
BGBDY_API void dyDefMethod5N(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt,dyt,dyt rest));
BGBDY_API void dyDefMethod6N(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt,dyt,dyt,dyt rest));
BGBDY_API void dyDefMethod7N(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt,dyt,dyt,dyt,dyt rest));
BGBDY_API void dyDefMethod8N(dyt obj, char *sym, dyt (*fcn)(dyt self,dyt,dyt,dyt,dyt,dyt,dyt,dyt,dyt,dyt rest));
BGBDY_API dyt dyCall(dyt obj, char *sym, dyt *args, int nargs);
BGBDY_API dyt dyCall0(dyt obj, char *sym);
BGBDY_API dyt dyCall1(dyt obj, char *sym, dyt a);
BGBDY_API dyt dyCall2(dyt obj, char *sym, dyt a, dyt b);
BGBDY_API dyt dyCall3(dyt obj, char *sym, dyt a, dyt b, dyt c);
BGBDY_API dyt dyCall4(dyt obj, char *sym, dyt a, dyt b, dyt c, dyt d);
BGBDY_API dyt dyCall5(dyt obj, char *sym, dyt a, dyt b, dyt c, dyt d, dyt e);
BGBDY_API dyt dyCall6(dyt obj, char *sym, dyt a, dyt b, dyt c, dyt d, dyt e, dyt f);
BGBDY_API dyt dyCall7(dyt obj, char *sym,dyt a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g);
BGBDY_API dyt dyCall8(dyt obj, char *sym,dyt a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g, dyt h);
BGBDY_API dyt dyCallN(dyt obj, char *sym, dyt args);
BGBDY_API dyt dyCall1N(dyt obj, char *sym, dyt a, dyt args);
BGBDY_API dyt dyCall2N(dyt obj, char *sym, dyt a, dyt b, dyt args);
BGBDY_API dyt dyCall3N(dyt obj, char *sym, dyt a, dyt b, dyt c, dyt args);
BGBDY_API dyt dyCall4N(dyt obj, char *sym, dyt a, dyt b, dyt c, dyt d, dyt args);
BGBDY_API dyt dyCall5N(dyt obj, char *sym, dyt a, dyt b, dyt c, dyt d, dyt e, dyt args);
BGBDY_API dyt dyCall6N(dyt obj, char *sym, dyt a, dyt b, dyt c, dyt d, dyt e, dyt f,dyt args);
BGBDY_API dyt dyCall7N(dyt obj, char *sym, dyt a, dyt b, dyt c, dyt d, dyt e, dyt f,dyt g, dyt args);
BGBDY_API dyt dyCall8N(dyt obj, char *sym, dyt a, dyt b, dyt c, dyt d, dyt e, dyt f,dyt g, dyt h, dyt args);
BGBDY_API dyt dyCallSig(dyt obj, char *sym, char *sig, ...);
BGBDY_API dyt dyLookupMethodSig(dyt obj, char *name, char *sig);
BGBDY_API int dyDelete(dyt obj);
BGBDY_API dyt dyNewN(char *name, dyt args);
BGBDY_API dyt dyNewA(char *name, dyt *args, int nargs);
BGBDY_API dyt dyClone(dyt obj);
//AHSRC:base/dy_dyo.c
BGBDY_API dyt dyStatus();
BGBDY_API void dySetStatus(char *str);
BGBDY_API void dyClearStatus();
BGBDY_API dyAccessMode dyGetAccessMode();
BGBDY_API void dySetAccessMode(dyAccessMode access);
//AHSRC:base/dy_access.c
BGBDY_API int dyGetAccessModeUID(dyAccessMode acc);
BGBDY_API int dyGetAccessModeGID(dyAccessMode acc);
BGBDY_API int dyGetAccessModeBits(dyAccessMode acc);
BGBDY_API int dyCheckObjectAccess(dyAccessMode obj, dyAccessMode usr, int req);
BGBDY_API int dyCheckObjectCurrentAccess(dyAccessMode obj, int req);
BGBDY_API int dyCheckCurrentAccessRootOnly();
BGBDY_API dyAccessMode dyGetAccessModeDefault();
//AHSRC:base/dyc_class.c
//AHSRC:base/dyc_lookup.c
//AHSRC:base/dyc_hash.c
BGBDY_API int BGBDYC_SlotHashUsed();
BGBDY_API int BGBDYC_MinfHashUsed();
BGBDY_API int BGBDYC_SlotHashSize();
BGBDY_API int BGBDYC_MinfHashSize();
BGBDY_API int BGBDYC_DumpSlotHash();
BGBDY_API int BGBDYC_DumpMinfHash();
//AHSRC:base/dyc_proto.c
BGBDY_API dycSlot dycGetProtoSlotInfo(char *name, char *sig);
BGBDY_API dycSlot dycGetProtoSlotInfoFl(char *name, char *sig, s64 fl);
BGBDY_API dycSlot dycGetProtoSlotInfoFlAcc(char *name, char *sig, s64 fl, dyAccessMode acc);
BGBDY_API dycMethod dycGetProtoMethodInfo(char *name, char *sig);
BGBDY_API dycMethod dycGetProtoMethodInfoFl(char *name, char *sig, s64 fl);
BGBDY_API dycMethod dycGetProtoMethodInfoFlAcc(char *name, char *sig,s64 fl, dyAccessMode acc);
//AHSRC:base/dyc_struct.c
//AHSRC:base/dyc_ns.c
//AHSRC:base/dyc_array.c
BGBDY_API dycArray dycNewArray(char *sig, int cnt);
BGBDY_API dycArray dycArrayCopyValue(dycArray arr);
BGBDY_API int dycArrayDropValue(dycArray arr);
BGBDY_API int dycArrayP(dyt p);
BGBDY_API int dycArrayDataP(dyt p);
BGBDY_API int dycArray2P(dyt p);
BGBDY_API dycArray dycArrayFromData(dyt p);
BGBDY_API int dycArraySigP(dyt p, char *sig);
BGBDY_API void *dycArrayV(dycArray arr);
BGBDY_API int dycArraySz(dycArray arr);
BGBDY_API char *dycArraySig(dycArray arr);
BGBDY_API int dycArrayStep(dycArray arr);
BGBDY_API dycArray dycArrayAddOffset(dycArray arr, int offs);
BGBDY_API int dycArraySubtract(dycArray arra, dycArray arrb);
BGBDY_API dyt dycArrayIndexRef(dycArray arr, int idx);
BGBDY_API dycArray dycArrayRefArray(dyt ref);
BGBDY_API int dycArrayRefP(dyt ref);
BGBDY_API int dycArrayRefIndex(dyt ref);
BGBDY_API dyt dycArrayRefAddOffset(dyt ref, int offs);
BGBDY_API void *dycArrayIdxPtr(dycArray arr, int idx);
BGBDY_API dyt dycGetArrayVar(dycArray arr, int idx);
BGBDY_API void dycSetArrayVar(dycArray arr, int idx, dyt val);
BGBDY_API int dycGetArraysb(dycArray arr, int idx);
BGBDY_API int dycGetArrayub(dycArray arr, int idx);
BGBDY_API int dycGetArrayss(dycArray arr, int idx);
BGBDY_API int dycGetArrayus(dycArray arr, int idx);
BGBDY_API int dycGetArrayi(dycArray arr, int idx);
BGBDY_API s64 dycGetArrayl(dycArray arr, int idx);
BGBDY_API float dycGetArrayf(dycArray arr, int idx);
BGBDY_API double dycGetArrayd(dycArray arr, int idx);
BGBDY_API dyt dycGetArrayr(dycArray arr, int idx);
BGBDY_API void *dycGetArrayp(dycArray arr, int idx);
BGBDY_API u32 dycGetArrayui(dycArray arr, int idx);
BGBDY_API void dycSetArraysb(dycArray arr, int idx, int val);
BGBDY_API void dycSetArrayub(dycArray arr, int idx, int val);
BGBDY_API void dycSetArrayss(dycArray arr, int idx, int val);
BGBDY_API void dycSetArrayus(dycArray arr, int idx, int val);
BGBDY_API void dycSetArrayi(dycArray arr, int idx, int val);
BGBDY_API void dycSetArrayl(dycArray arr, int idx, s64 val);
BGBDY_API void dycSetArrayf(dycArray arr, int idx, float val);
BGBDY_API void dycSetArrayd(dycArray arr, int idx, double val);
BGBDY_API void dycSetArrayr(dycArray arr, int idx, dyt val);
BGBDY_API void dycSetArrayp(dycArray arr, int idx, void *val);
BGBDY_API bool dycArrayIdxCheck(dycArray arr, int idx);
BGBDY_API void *dycArrayIdxPtrBC(dycArray arr, int idx);
BGBDY_API int dycGetArraySsb(dycArray arr, int idx);
BGBDY_API int dycGetArraySub(dycArray arr, int idx);
BGBDY_API int dycGetArraySss(dycArray arr, int idx);
BGBDY_API int dycGetArraySus(dycArray arr, int idx);
BGBDY_API int dycGetArraySi(dycArray arr, int idx);
BGBDY_API s64 dycGetArraySl(dycArray arr, int idx);
BGBDY_API float dycGetArraySf(dycArray arr, int idx);
BGBDY_API double dycGetArraySd(dycArray arr, int idx);
BGBDY_API dyt dycGetArraySr(dycArray arr, int idx);
BGBDY_API void *dycGetArraySp(dycArray arr, int idx);
BGBDY_API void dycSetArraySsb(dycArray arr, int idx, int val);
BGBDY_API void dycSetArraySub(dycArray arr, int idx, int val);
BGBDY_API void dycSetArraySss(dycArray arr, int idx, int val);
BGBDY_API void dycSetArraySus(dycArray arr, int idx, int val);
BGBDY_API void dycSetArraySi(dycArray arr, int idx, int val);
BGBDY_API void dycSetArraySl(dycArray arr, int idx, s64 val);
BGBDY_API void dycSetArraySf(dycArray arr, int idx, float val);
BGBDY_API void dycSetArraySd(dycArray arr, int idx, double val);
BGBDY_API void dycSetArraySr(dycArray arr, int idx, dyt val);
BGBDY_API void dycSetArraySp(dycArray arr, int idx, void *val);
BGBDY_API dycArray DYC_NewArrayM_R(char *sig, int ord, int *sz);
BGBDY_API dycArray dycNewArrayM(char *sig, int ord, int *sz);
BGBDY_API dycArray dycNewArrayM2(char *sig, int sz0, int sz1);
BGBDY_API dycArray dycNewArrayM3(char *sig, int sz0, int sz1, int sz2);
BGBDY_API dycArray dycNewArrayM4(char *sig, int sz0, int sz1, int sz2, int sz3);
BGBDY_API dycArray dycNewArrayM5(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4);
BGBDY_API dycArray dycNewArrayM6(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5);
BGBDY_API dycArray dycNewArrayM7(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5, int sz6);
BGBDY_API dycArray dycNewArrayM8(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5, int sz6, int sz7);
BGBDY_API dycArray dycNewArrayM9(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5, int sz6, int sz7, int sz8);
BGBDY_API dycArray dycNewArrayM10(char *sig,int sz0, int sz1, int sz2, int sz3, int sz4, int sz5, int sz6, int sz7, int sz8, int sz9);
BGBDY_API dycArray dycNewArrayM11(char *sig,int sz0, int sz1, int sz2 , int sz3, int sz4, int sz5, int sz6 , int sz7, int sz8, int sz9, int sz10);
BGBDY_API dycArray dycNewArrayM12(char *sig,int sz0, int sz1, int sz2 , int sz3, int sz4, int sz5, int sz6 , int sz7, int sz8, int sz9, int sz10, int sz11);
BGBDY_API dycArrayN dycNewArrayN(char *sig, int ord, int *sz);
BGBDY_API int dycArrayNP(dyt p);
BGBDY_API int dycArrayNSigP(dyt p, char *sig);
BGBDY_API int dycArrayNSigOrdP(dyt p, char *sig, int ord);
BGBDY_API void *dycArrayNV(dycArrayN arr);
BGBDY_API int *dycArrayNSz(dycArrayN arr);
BGBDY_API int dycArrayNCnt(dycArrayN arr);
BGBDY_API int dycArrayNOrd(dycArrayN arr);
BGBDY_API char *dycArrayNSig(dycArrayN arr);
BGBDY_API int dycArrayNStep(dycArrayN arr);
BGBDY_API void *dycArrayNIdxPtr(dycArrayN arr, int *idx);
BGBDY_API void *dycArrayNIdxPtrBC(dycArrayN arr, int *idx);
BGBDY_API int dycGetArrayNsb(dycArrayN arr, int *idx);
BGBDY_API int dycGetArrayNub(dycArrayN arr, int *idx);
BGBDY_API int dycGetArrayNss(dycArrayN arr, int *idx);
BGBDY_API int dycGetArrayNus(dycArrayN arr, int *idx);
BGBDY_API int dycGetArrayNi(dycArrayN arr, int *idx);
BGBDY_API s64 dycGetArrayNl(dycArrayN arr, int *idx);
BGBDY_API float dycGetArrayNf(dycArrayN arr, int *idx);
BGBDY_API double dycGetArrayNd(dycArrayN arr, int *idx);
BGBDY_API dyt dycGetArrayNr(dycArrayN arr, int *idx);
BGBDY_API void *dycGetArrayNp(dycArrayN arr, int *idx);
BGBDY_API void dycSetArrayNsb(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNub(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNss(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNus(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNi(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNl(dycArrayN arr, int *idx, s64 val);
BGBDY_API void dycSetArrayNf(dycArrayN arr, int *idx, float val);
BGBDY_API void dycSetArrayNd(dycArrayN arr, int *idx, double val);
BGBDY_API void dycSetArrayNr(dycArrayN arr, int *idx, dyt val);
BGBDY_API void dycSetArrayNp(dycArrayN arr, int *idx, void *val);
BGBDY_API int dycGetArrayNSsb(dycArrayN arr, int *idx);
BGBDY_API int dycGetArrayNSub(dycArrayN arr, int *idx);
BGBDY_API int dycGetArrayNSss(dycArrayN arr, int *idx);
BGBDY_API int dycGetArrayNSus(dycArrayN arr, int *idx);
BGBDY_API int dycGetArrayNSi(dycArrayN arr, int *idx);
BGBDY_API s64 dycGetArrayNSl(dycArrayN arr, int *idx);
BGBDY_API float dycGetArrayNSf(dycArrayN arr, int *idx);
BGBDY_API double dycGetArrayNSd(dycArrayN arr, int *idx);
BGBDY_API dyt dycGetArrayNSr(dycArrayN arr, int *idx);
BGBDY_API void *dycGetArrayNSp(dycArrayN arr, int *idx);
BGBDY_API void dycSetArrayNSsb(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNSub(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNSss(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNSus(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNSi(dycArrayN arr, int *idx, int val);
BGBDY_API void dycSetArrayNSl(dycArrayN arr, int *idx, s64 val);
BGBDY_API void dycSetArrayNSf(dycArrayN arr, int *idx, float val);
BGBDY_API void dycSetArrayNSd(dycArrayN arr, int *idx, double val);
BGBDY_API void dycSetArrayNSr(dycArrayN arr, int *idx, dyt val);
BGBDY_API void dycSetArrayNSp(dycArrayN arr, int *idx, void *val);
BGBDY_API void *dycArray2IdxPtr(dycArrayN arr, int y, int x);
BGBDY_API void *dycArray2IdxPtrBC(dycArrayN arr, int y, int x);
BGBDY_API int dycGetArray2sb(dycArrayN arr, int y, int x);
BGBDY_API int dycGetArray2ub(dycArrayN arr, int y, int x);
BGBDY_API int dycGetArray2ss(dycArrayN arr, int y, int x);
BGBDY_API int dycGetArray2us(dycArrayN arr, int y, int x);
BGBDY_API int dycGetArray2i(dycArrayN arr, int y, int x);
BGBDY_API s64 dycGetArray2l(dycArrayN arr, int y, int x);
BGBDY_API float dycGetArray2f(dycArrayN arr, int y, int x);
BGBDY_API double dycGetArray2d(dycArrayN arr, int y, int x);
BGBDY_API dyt dycGetArray2r(dycArrayN arr, int y, int x);
BGBDY_API void *dycGetArray2p(dycArrayN arr, int y, int x);
BGBDY_API void dycSetArray2sb(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2ub(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2ss(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2us(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2i(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2l(dycArrayN arr, int y, int x, s64 val);
BGBDY_API void dycSetArray2f(dycArrayN arr, int y, int x, float val);
BGBDY_API void dycSetArray2d(dycArrayN arr, int y, int x, double val);
BGBDY_API void dycSetArray2r(dycArrayN arr, int y, int x, dyt val);
BGBDY_API void dycSetArray2p(dycArrayN arr, int y, int x, void *val);
BGBDY_API int dycGetArray2Ssb(dycArrayN arr, int y, int x);
BGBDY_API int dycGetArray2Sub(dycArrayN arr, int y, int x);
BGBDY_API int dycGetArray2Sss(dycArrayN arr, int y, int x);
BGBDY_API int dycGetArray2Sus(dycArrayN arr, int y, int x);
BGBDY_API int dycGetArray2Si(dycArrayN arr, int y, int x);
BGBDY_API s64 dycGetArray2Sl(dycArrayN arr, int y, int x);
BGBDY_API float dycGetArray2Sf(dycArrayN arr, int y, int x);
BGBDY_API double dycGetArray2Sd(dycArrayN arr, int y, int x);
BGBDY_API dyt dycGetArray2Sr(dycArrayN arr, int y, int x);
BGBDY_API void *dycGetArray2Sp(dycArrayN arr, int y, int x);
BGBDY_API void dycSetArray2Ssb(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2Sub(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2Sss(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2Sus(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2Si(dycArrayN arr, int y, int x, int val);
BGBDY_API void dycSetArray2Sl(dycArrayN arr, int y, int x, s64 val);
BGBDY_API void dycSetArray2Sf(dycArrayN arr, int y, int x, float val);
BGBDY_API void dycSetArray2Sd(dycArrayN arr, int y, int x, double val);
BGBDY_API void dycSetArray2Sr(dycArrayN arr, int y, int x, dyt val);
BGBDY_API void dycSetArray2Sp(dycArrayN arr, int y, int x, void *val);
BGBDY_API void *dycArray3IdxPtr(dycArrayN arr, int z, int y, int x);
BGBDY_API void *dycArray3IdxPtrBC(dycArrayN arr, int z, int y, int x);
BGBDY_API int dycGetArray3sb(dycArrayN arr, int z, int y, int x);
BGBDY_API int dycGetArray3ub(dycArrayN arr, int z, int y, int x);
BGBDY_API int dycGetArray3ss(dycArrayN arr, int z, int y, int x);
BGBDY_API int dycGetArray3us(dycArrayN arr, int z, int y, int x);
BGBDY_API int dycGetArray3i(dycArrayN arr, int z, int y, int x);
BGBDY_API s64 dycGetArray3l(dycArrayN arr, int z, int y, int x);
BGBDY_API float dycGetArray3f(dycArrayN arr, int z, int y, int x);
BGBDY_API double dycGetArray3d(dycArrayN arr, int z, int y, int x);
BGBDY_API dyt dycGetArray3r(dycArrayN arr, int z, int y, int x);
BGBDY_API void *dycGetArray3p(dycArrayN arr, int z, int y, int x);
BGBDY_API void dycSetArray3sb(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3ub(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3ss(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3us(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3i(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3l(dycArrayN arr, int z, int y, int x, s64 val);
BGBDY_API void dycSetArray3f(dycArrayN arr, int z, int y, int x, float val);
BGBDY_API void dycSetArray3d(dycArrayN arr, int z, int y, int x, double val);
BGBDY_API void dycSetArray3r(dycArrayN arr, int z, int y, int x, dyt val);
BGBDY_API void dycSetArray3p(dycArrayN arr, int z, int y, int x, void *val);
BGBDY_API int dycGetArray3Ssb(dycArrayN arr, int z, int y, int x);
BGBDY_API int dycGetArray3Sub(dycArrayN arr, int z, int y, int x);
BGBDY_API int dycGetArray3Sss(dycArrayN arr, int z, int y, int x);
BGBDY_API int dycGetArray3Sus(dycArrayN arr, int z, int y, int x);
BGBDY_API int dycGetArray3Si(dycArrayN arr, int z, int y, int x);
BGBDY_API s64 dycGetArray3Sl(dycArrayN arr, int z, int y, int x);
BGBDY_API float dycGetArray3Sf(dycArrayN arr, int z, int y, int x);
BGBDY_API double dycGetArray3Sd(dycArrayN arr, int z, int y, int x);
BGBDY_API dyt dycGetArray3Sr(dycArrayN arr, int z, int y, int x);
BGBDY_API void *dycGetArray3Sp(dycArrayN arr, int z, int y, int x);
BGBDY_API void dycSetArray3Ssb(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3Sub(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3Sss(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3Sus(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3Si(dycArrayN arr, int z, int y, int x, int val);
BGBDY_API void dycSetArray3Sl(dycArrayN arr, int z, int y, int x, s64 val);
BGBDY_API void dycSetArray3Sf(dycArrayN arr, int z, int y, int x, float val);
BGBDY_API void dycSetArray3Sd(dycArrayN arr, int z, int y, int x, double val);
BGBDY_API void dycSetArray3Sr(dycArrayN arr, int z, int y, int x, dyt val);
BGBDY_API void dycSetArray3Sp(dycArrayN arr, int z, int y, int x, void *val);
//AHSRC:base/dyc_api.c
BGBDY_API int dycObjectP(dyt obj);
BGBDY_API int dycClassP(dyt obj);
BGBDY_API int dycSlotP(dyt obj);
BGBDY_API int dycMethodP(dyt obj);
BGBDY_API int dycObjectInstanceOfP(dyt obj, char *name);
BGBDY_API void dycRegisterClassResolver(dycClass (*fn)(char *name));
BGBDY_API dycClass dycBeginClass(char *name, char *super);
BGBDY_API dycClass dycEndClass();
BGBDY_API void dycBeginClassAnon(dycClass super);
BGBDY_API dycClass dycEndClassAnon();
BGBDY_API void dycClassSuper(char *name);
BGBDY_API void dycAddClassFlags(s64 flags);
BGBDY_API void dycSlotBasic(char *name, char *sig);
BGBDY_API void dycSlotStatic(char *name, char *sig);
BGBDY_API void dycSlotInit(char *name, char *sig);
BGBDY_API void dycSlotStatici(char *name, char *sig, int val);
BGBDY_API void dycSlotStaticl(char *name, char *sig, s64 val);
BGBDY_API void dycSlotStaticf(char *name, char *sig, double val);
BGBDY_API void dycSlotStaticd(char *name, char *sig, double val);
BGBDY_API void dycSlotStaticU(char *name, char *sig, void *val);
BGBDY_API void dycSlotStaticr(char *name, char *sig, dyt val);
BGBDY_API void dycSlotIniti(char *name, char *sig, int val);
BGBDY_API void dycSlotInitl(char *name, char *sig, s64 val);
BGBDY_API void dycSlotInitf(char *name, char *sig, double val);
BGBDY_API void dycSlotInitd(char *name, char *sig, double val);
BGBDY_API void dycSlotInitU(char *name, char *sig, void *val);
BGBDY_API void dycSlotInitr(char *name, char *sig, dyt val);
BGBDY_API void dycSlotDelegate(char *name, char *cname);
BGBDY_API void dycSlotStaticDelegate(char *name, char *cname);
BGBDY_API void dycSlotInitDelegater(char *name, char *sig, dyt val);
BGBDY_API void dycSlotStaticDelegater(char *name, char *sig, dyt val);
BGBDY_API void dycMethodBasic(char *name, char *sig);
BGBDY_API void dycMethodStatic(char *name, char *sig);
BGBDY_API void dycMethodFunc(char *name, char *sig, dyt fcn);
BGBDY_API void dycMethodStaticFunc(char *name, char *sig, dyt fcn);
BGBDY_API void dycMethodCFunc(char *name, char *sig, void *fcn);
BGBDY_API void dycMethodCFuncData(char *name, char *sig, void *fcn, void *data);
BGBDY_API void dycMethodCSelf(char *name, char *sig, void *fcn);
BGBDY_API void dycMethodCSelfData(char *name, char *sig, void *fcn, void *data);
BGBDY_API void dycMethodStaticCFunc(char *name, char *sig, void *fcn);
BGBDY_API void dycMethodStaticCFuncData(char *name, char *sig, void *fcn, void *data);
BGBDY_API void dycMethodStaticCSelf(char *name, char *sig, void *fcn);
BGBDY_API void dycMethodStaticCSelfData(char *name, char *sig, void *fcn, void *data);
BGBDY_API void dycSlotMethod(char *name, char *sig);
BGBDY_API void dycStaticSlotMethod(char *name, char *sig);
BGBDY_API void dycAddMethodFlags(char *name, char *sig, s64 flags);
BGBDY_API void dycAddMethodAccess(char *name, char *sig, dyAccessMode acc);
BGBDY_API void dycAddSlotFlags(char *name, s64 flags);
BGBDY_API void dycAddSlotAccess(char *name, dyAccessMode acc);
BGBDY_API void dycClassInterface(char *name);
BGBDY_API dycClass dycBeginIface(char *name, char *super);
BGBDY_API dycClass dycEndIface();
BGBDY_API void dycIfaceSuper(char *name);
BGBDY_API void dycIfaceMethod(char *name, char *sig);
BGBDY_API void dycIfaceSlot(char *name, char *sig);
BGBDY_API dycClass dycBeginStruct(char *name);
BGBDY_API dycClass dycEndStruct();
BGBDY_API dycClass dycLookupClass(char *name);
BGBDY_API dycClass dycGetClass(char *name);
BGBDY_API dycObject dycAlloc(dycClass inf);
BGBDY_API void dycFreeObject(dycObject obj);
BGBDY_API void dycDeleteObject(dycObject obj);
BGBDY_API void dycSetObjectObject(dycObject dst, dycObject src);
BGBDY_API int dycSubclassP(dycClass info, dycClass super);
BGBDY_API int dycInstanceP(dycObject obj, dycClass inf);
BGBDY_API int dycClassDynamicP(dycClass info);
BGBDY_API int dycObjectDynamicP(dycObject obj);
BGBDY_API dycClass dycGetObjClass(dycObject obj);
BGBDY_API dycClass dycGetClassSuper(dycClass inf);
BGBDY_API char *dycGetClassName(dycClass inf);
BGBDY_API char *dycGetObjClassName(dycObject obj);
BGBDY_API s64 dycGetClassFlags(dycClass inf);
BGBDY_API char *dycGetClassShortName(dycClass inf);
BGBDY_API char *dycGetClassSpecialName(dycClass inf, char *name);
BGBDY_API char *dycGetObjClassShortName(dycObject obj);
BGBDY_API dycClassV dycGetClassVersion(dycClass inf);
BGBDY_API int dycGetStructSize(dycClassV vinf);
BGBDY_API dycClass dycGetVersionClass(dycClassV vinf);
BGBDY_API int dycGetStructSlotOffset(dycClassV vinf, dycSlot idx);
BGBDY_API char *dycGetSlotName(dycSlot idx);
BGBDY_API char *dycGetSlotSig(dycSlot idx);
BGBDY_API dycClass dycGetSlotClass(dycSlot idx);
BGBDY_API s64 dycGetSlotFlags(dycSlot idx);
BGBDY_API char *dycGetMethodName(dycMethod idx);
BGBDY_API char *dycGetMethodSig(dycMethod idx);
BGBDY_API dycClass dycGetMethodClass(dycMethod idx);
BGBDY_API s64 dycGetMethodFlags(dycMethod idx);
BGBDY_API dycSlot dycIdxSlot(dycClass info, char *name);
BGBDY_API dycSlot dycIdxObjSlot(dycObject obj, char *name);
BGBDY_API dycMethod dycIdxMethod(dycClass inf, char *name, char *sig);
BGBDY_API dycMethod dycIdxObjMethod(dycObject obj, char *name, char *sig);
BGBDY_API void *dycGetSlotPtr(dycObject obj, dycSlot idx);
BGBDY_API void *dycGetInitPtr(dycClass inf, dycSlot idx);
BGBDY_API void *dycGetStaticPtr(dycClass inf, dycSlot idx);
BGBDY_API void *dycGetStructPtr(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API void *dycPtrSlot(dycObject obj, char *name);
BGBDY_API void *dycPtrStaticSlot(dycClass info, char *name);
BGBDY_API void *dycPtrInitSlot(dycClass info, char *name);
BGBDY_API void *dycPtrStructSlot(dycClassV vinf, void *obj, char *name);
BGBDY_API int dycInstanceOfP(dycObject obj, char *name);
BGBDY_API int dycSubclassOfP(char *name, char *super);
BGBDY_API dyt dycLookupMethodSig(dycObject obj, char *name, char *sig);
BGBDY_API dyt dycLookupStaticMethodSig(dycClass inf, char *name, char *sig);
BGBDY_API dyt dycGetMethodFunc(dycClass inf, dycMethod idx);
BGBDY_API dyt dycGetObjMethodFunc(dycObject obj, dycMethod idx);
BGBDY_API void dycSetMethodFunc(dycClass inf, dycMethod idx, dyt fcn);
BGBDY_API void dycSetObjMethodFunc(dycObject obj, dycMethod idx, dyt fcn);
BGBDY_API dycSlot dycAddObjSlot(dycObject obj, char *name, char *sig);
BGBDY_API dycMethod dycAddObjMethod(dycObject obj, char *name, char *sig);
BGBDY_API dycObject dycCloneObject(dycObject obj);
BGBDY_API dycObject dycCopyObject(dycObject obj);
BGBDY_API dycObject dycGetObjDelegate(dycObject obj, char *name);
BGBDY_API void dycSetObjDelegate(dycObject obj, char *name, dycObject obj1);
BGBDY_API dycSlot *dycEnumSlotArray(dycClass inf);
BGBDY_API dycMethod *dycEnumMethodArray(dycClass inf);
BGBDY_API dycSlot *dycEnumDelegateSlotArray(dycClass inf);
BGBDY_API dycSlot *dycEnumClassSlotArray(char *name);
BGBDY_API dycMethod *dycEnumClassMethodArray(char *name);
BGBDY_API dycSlot *dycEnumClassDelegateSlotArray(char *name);
BGBDY_API dycObject dycAllocClass(char *name);
BGBDY_API void *dycPtrClassSlot(char *cname, char *sname);
BGBDY_API dycSlot dycIdxClassSlot(char *cname, char *sname);
BGBDY_API dycMethod dycIdxClassMethod(char *cname, char *name, char *sig);
BGBDY_API dyt dycGetSlot(dycObject obj, char *name);
BGBDY_API dyt dycGetSlotr(dycObject obj, char *name);
BGBDY_API void *dycGetSlotp(dycObject obj, char *name);
BGBDY_API int dycGetSlotsb(dycObject obj, char *name);
BGBDY_API int dycGetSlotub(dycObject obj, char *name);
BGBDY_API int dycGetSlotss(dycObject obj, char *name);
BGBDY_API int dycGetSlotus(dycObject obj, char *name);
BGBDY_API int dycGetSloti(dycObject obj, char *name);
BGBDY_API s64 dycGetSlotl(dycObject obj, char *name);
BGBDY_API float dycGetSlotf(dycObject obj, char *name);
BGBDY_API double dycGetSlotd(dycObject obj, char *name);
BGBDY_API int dycSetSlot(dycObject obj, char *name, dyt val);
BGBDY_API int dycSetSlotr(dycObject obj, char *name, dyt val);
BGBDY_API int dycSetSlotp(dycObject obj, char *name, void *val);
BGBDY_API int dycSetSlotsb(dycObject obj, char *name, int val);
BGBDY_API int dycSetSlotub(dycObject obj, char *name, int val);
BGBDY_API int dycSetSlotss(dycObject obj, char *name, int val);
BGBDY_API int dycSetSlotus(dycObject obj, char *name, int val);
BGBDY_API int dycSetSloti(dycObject obj, char *name, int val);
BGBDY_API int dycSetSlotl(dycObject obj, char *name, s64 val);
BGBDY_API int dycSetSlotf(dycObject obj, char *name, float val);
BGBDY_API int dycSetSlotd(dycObject obj, char *name, double val);
BGBDY_API dyt dycGet(dycObject obj, dycSlot idx);
BGBDY_API int dycSet(dycObject obj, dycSlot slot, dyt val);
BGBDY_API dyt dycGetr(dycObject obj, dycSlot idx);
BGBDY_API void dycSetr(dycObject obj, dycSlot idx, dyt val);
BGBDY_API int dycGetsb(dycObject obj, dycSlot idx);
BGBDY_API int dycGetub(dycObject obj, dycSlot idx);
BGBDY_API int dycGetss(dycObject obj, dycSlot idx);
BGBDY_API int dycGetus(dycObject obj, dycSlot idx);
BGBDY_API int dycGeti(dycObject obj, dycSlot idx);
BGBDY_API s64 dycGetl(dycObject obj, dycSlot idx);
BGBDY_API float dycGetf(dycObject obj, dycSlot idx);
BGBDY_API double dycGetd(dycObject obj, dycSlot idx);
BGBDY_API void *dycGetp(dycObject obj, dycSlot idx);
BGBDY_API void dycSetsb(dycObject obj, dycSlot idx, int val);
BGBDY_API void dycSetub(dycObject obj, dycSlot idx, int val);
BGBDY_API void dycSetss(dycObject obj, dycSlot idx, int val);
BGBDY_API void dycSetus(dycObject obj, dycSlot idx, int val);
BGBDY_API void dycSeti(dycObject obj, dycSlot idx, int val);
BGBDY_API void dycSetl(dycObject obj, dycSlot idx, s64 val);
BGBDY_API void dycSetf(dycObject obj, dycSlot idx, float val);
BGBDY_API void dycSetd(dycObject obj, dycSlot idx, double val);
BGBDY_API void dycSetp(dycObject obj, dycSlot idx, void *val);
BGBDY_API dyt dycGetStaticSlot(dycClass inf, char *name);
BGBDY_API int dycSetStaticSlot(dycClass inf, char *name, dyt val);
BGBDY_API int dycGetStaticsb(dycClass inf, dycSlot idx);
BGBDY_API int dycGetStaticub(dycClass inf, dycSlot idx);
BGBDY_API int dycGetStaticss(dycClass inf, dycSlot idx);
BGBDY_API int dycGetStaticus(dycClass inf, dycSlot idx);
BGBDY_API int dycGetStatici(dycClass inf, dycSlot idx);
BGBDY_API s64 dycGetStaticl(dycClass inf, dycSlot idx);
BGBDY_API float dycGetStaticf(dycClass inf, dycSlot idx);
BGBDY_API double dycGetStaticd(dycClass inf, dycSlot idx);
BGBDY_API dyt dycGetStaticr(dycClass inf, dycSlot idx);
BGBDY_API void *dycGetStaticp(dycClass inf, dycSlot idx);
BGBDY_API void dycSetStaticsb(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetStaticub(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetStaticss(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetStaticus(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetStatici(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetStaticl(dycClass inf, dycSlot idx, s64 val);
BGBDY_API void dycSetStaticf(dycClass inf, dycSlot idx, float val);
BGBDY_API void dycSetStaticd(dycClass inf, dycSlot idx, double val);
BGBDY_API void dycSetStaticr(dycClass inf, dycSlot idx, dyt val);
BGBDY_API void dycSetStaticp(dycClass inf, dycSlot idx, void *val);
BGBDY_API int dycGetInitsb(dycClass inf, dycSlot idx);
BGBDY_API int dycGetInitub(dycClass inf, dycSlot idx);
BGBDY_API int dycGetInitss(dycClass inf, dycSlot idx);
BGBDY_API int dycGetInitus(dycClass inf, dycSlot idx);
BGBDY_API int dycGetIniti(dycClass inf, dycSlot idx);
BGBDY_API s64 dycGetInitl(dycClass inf, dycSlot idx);
BGBDY_API float dycGetInitf(dycClass inf, dycSlot idx);
BGBDY_API double dycGetInitd(dycClass inf, dycSlot idx);
BGBDY_API dyt dycGetInitr(dycClass inf, dycSlot idx);
BGBDY_API void *dycGetInitp(dycClass inf, dycSlot idx);
BGBDY_API void dycSetInitsb(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetInitub(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetInitss(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetInitus(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetIniti(dycClass inf, dycSlot idx, int val);
BGBDY_API void dycSetInitl(dycClass inf, dycSlot idx, s64 val);
BGBDY_API void dycSetInitf(dycClass inf, dycSlot idx, float val);
BGBDY_API void dycSetInitd(dycClass inf, dycSlot idx, double val);
BGBDY_API void dycSetInitr(dycClass inf, dycSlot idx, dyt val);
BGBDY_API void dycSetInitp(dycClass inf, dycSlot idx, void *val);
BGBDY_API int dycGetStructsb(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API int dycGetStructub(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API int dycGetStructss(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API int dycGetStructus(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API int dycGetStructi(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API s64 dycGetStructl(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API float dycGetStructf(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API double dycGetStructd(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API dyt dycGetStructr(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API void *dycGetStructp(dycClassV vinf, void *obj, dycSlot idx);
BGBDY_API void dycSetStructsb(dycClassV vinf, void *obj, dycSlot idx, int val);
BGBDY_API void dycSetStructub(dycClassV vinf, void *obj, dycSlot idx, int val);
BGBDY_API void dycSetStructss(dycClassV vinf, void *obj, dycSlot idx, int val);
BGBDY_API void dycSetStructus(dycClassV vinf, void *obj, dycSlot idx, int val);
BGBDY_API void dycSetStructi(dycClassV vinf, void *obj, dycSlot idx, int val);
BGBDY_API void dycSetStructl(dycClassV vinf, void *obj, dycSlot idx, s64 val);
BGBDY_API void dycSetStructf(dycClassV vinf, void *obj, dycSlot idx, float val);
BGBDY_API void dycSetStructd(dycClassV vinf, void *obj, dycSlot idx, double val);
BGBDY_API void dycSetStructr(dycClassV vinf, void *obj, dycSlot idx, dyt val);
BGBDY_API void dycSetStructp(dycClassV vinf, void *obj, dycSlot idx, void *val);
BGBDY_API dycObject dycNewClass(char *name);
BGBDY_API dycObject dycNewInitClass(char *name, char *sig, ...);
BGBDY_API dycObject dycNewInitClassV(char *name, char *sig, va_list args);
BGBDY_API dycObject dycNewInitClassU(char *name, char *sig, void **args);
BGBDY_API dycObject dycNew(dycClass inf);
BGBDY_API dycObject dycNewInit(dycClass inf, char *sig, ...);
BGBDY_API dycObject dycNewInitV(dycClass inf, char *sig, va_list args);
BGBDY_API dycObject dycNewInitU(dycClass inf, char *sig, void **args);
BGBDY_API void *dycCallSigU(dycObject obj, char *name, char *sig, void **args);
BGBDY_API void *dycCallSigV(dycObject obj, char *name, char *sig, va_list args);
BGBDY_API void *dycCallSig(dycObject obj, char *name, char *sig, ...);
BGBDY_API dyt dycCallSigVr(dycObject obj, char *name, char *sig, va_list lst);
BGBDY_API dyt dycCallSigUr(dycObject obj, char *name, char *sig, void **args);
BGBDY_API void *dycCallStaticSigV(dycClass inf, char *name, char *sig, va_list args);
BGBDY_API void *dycCallStaticSig(dycClass inf, char *name, char *sig, ...);
BGBDY_API dyt dycCallUr(dycObject obj, dycMethod mth, void **args);
BGBDY_API dyt dycCallVr(dycObject obj, dycMethod mth, va_list args);
BGBDY_API dyt dycCallStaticUr(dycClass inf, dycMethod mth, void **args);
BGBDY_API dyt dycCallStaticVr(dycClass inf, dycMethod mth, va_list args);
BGBDY_API int dycCallSigVi(dycObject obj, char *name, char *sig, va_list lst);
BGBDY_API s64 dycCallSigVl(dycObject obj, char *name, char *sig, va_list lst);
BGBDY_API float dycCallSigVf(dycObject obj, char *name, char *sig, va_list lst);
BGBDY_API double dycCallSigVd(dycObject obj, char *name, char *sig, va_list lst);
BGBDY_API int dycCallSigUi(dycObject obj, char *name, char *sig, void **args);
BGBDY_API s64 dycCallSigUl(dycObject obj, char *name, char *sig, void **args);
BGBDY_API float dycCallSigUf(dycObject obj, char *name, char *sig, void **args);
BGBDY_API double dycCallSigUd(dycObject obj, char *name, char *sig, void **args);
BGBDY_API int dycCallSigi(dycObject obj, char *name, char *sig, ...);
BGBDY_API s64 dycCallSigl(dycObject obj, char *name, char *sig, ...);
BGBDY_API float dycCallSigf(dycObject obj, char *name, char *sig, ...);
BGBDY_API double dycCallSigd(dycObject obj, char *name, char *sig, ...);
BGBDY_API dyt dycCallSigr(dycObject obj, char *name, char *sig, ...);
BGBDY_API void *dycCallU(dycObject obj, dycMethod mth, void **args);
BGBDY_API void *dycCallV(dycObject obj, dycMethod mth, va_list args);
BGBDY_API void *dycCall(dycObject obj, dycMethod mth, ...);
BGBDY_API int dycCallUi(dycObject obj, dycMethod mth, void **args);
BGBDY_API s64 dycCallUl(dycObject obj, dycMethod mth, void **args);
BGBDY_API float dycCallUf(dycObject obj, dycMethod mth, void **args);
BGBDY_API double dycCallUd(dycObject obj, dycMethod mth, void **args);
BGBDY_API void *dycCallUp(dycObject obj, dycMethod mth, void **args);
BGBDY_API void dycCallUv(dycObject obj, dycMethod mth, void **args);
BGBDY_API int dycCallVi(dycObject obj, dycMethod mth, va_list args);
BGBDY_API s64 dycCallVl(dycObject obj, dycMethod mth, va_list args);
BGBDY_API float dycCallVf(dycObject obj, dycMethod mth, va_list args);
BGBDY_API double dycCallVd(dycObject obj, dycMethod mth, va_list args);
BGBDY_API void *dycCallVp(dycObject obj, dycMethod mth, va_list args);
BGBDY_API void dycCallVv(dycObject obj, dycMethod mth, va_list args);
BGBDY_API int dycCalli(dycObject obj, dycMethod mth, ...);
BGBDY_API s64 dycCalll(dycObject obj, dycMethod mth, ...);
BGBDY_API float dycCallf(dycObject obj, dycMethod mth, ...);
BGBDY_API double dycCalld(dycObject obj, dycMethod mth, ...);
BGBDY_API void *dycCallp(dycObject obj, dycMethod mth, ...);
BGBDY_API void dycCallv(dycObject obj, dycMethod mth, ...);
BGBDY_API dyt dycCallr(dycObject obj, dycMethod mth, ...);
BGBDY_API void *dycCallStaticU(dycClass inf, dycMethod mth, void **args);
BGBDY_API void *dycCallStaticV(dycClass inf, dycMethod mth, va_list args);
BGBDY_API void *dycCallStatic(dycClass inf, dycMethod mth, ...);
BGBDY_API int dycCallStaticUi(dycClass inf, dycMethod mth, void **args);
BGBDY_API s64 dycCallStaticUl(dycClass inf, dycMethod mth, void **args);
BGBDY_API float dycCallStaticUf(dycClass inf, dycMethod mth, void **args);
BGBDY_API double dycCallStaticUd(dycClass inf, dycMethod mth, void **args);
BGBDY_API void *dycCallStaticUp(dycClass inf, dycMethod mth, void **args);
BGBDY_API void dycCallStaticUv(dycClass inf, dycMethod mth, void **args);
BGBDY_API int dycCallStaticVi(dycClass inf, dycMethod mth, va_list args);
BGBDY_API s64 dycCallStaticVl(dycClass inf, dycMethod mth, va_list args);
BGBDY_API float dycCallStaticVf(dycClass inf, dycMethod mth, va_list args);
BGBDY_API double dycCallStaticVd(dycClass inf, dycMethod mth, va_list args);
BGBDY_API void *dycCallStaticVp(dycClass inf, dycMethod mth, va_list args);
BGBDY_API void dycCallStaticVv(dycClass inf, dycMethod mth, va_list args);
BGBDY_API int dycCallStatici(dycClass inf, dycMethod mth, ...);
BGBDY_API s64 dycCallStaticl(dycClass inf, dycMethod mth, ...);
BGBDY_API float dycCallStaticf(dycClass inf, dycMethod mth, ...);
BGBDY_API double dycCallStaticd(dycClass inf, dycMethod mth, ...);
BGBDY_API void *dycCallStaticp(dycClass inf, dycMethod mth, ...);
BGBDY_API void dycCallStaticv(dycClass inf, dycMethod mth, ...);
BGBDY_API dyt dycCallStaticr(dycClass inf, dycMethod mth, ...);
BGBDY_API void *dycCallAsU(dycObject obj, dycClass inf, dycMethod mth, void **args);
BGBDY_API void *dycCallAsV(dycObject obj, dycClass inf, dycMethod mth, va_list args);
BGBDY_API void *dycCallAs(dycObject obj, dycClass inf, dycMethod mth, ...);
BGBDY_API int dycCallAsUi(dycObject obj, dycClass inf, dycMethod mth, void **args);
BGBDY_API s64 dycCallAsUl(dycObject obj, dycClass inf, dycMethod mth, void **args);
BGBDY_API float dycCallAsUf(dycObject obj, dycClass inf, dycMethod mth, void **args);
BGBDY_API double dycCallAsUd(dycObject obj, dycClass inf, dycMethod mth, void **args);
BGBDY_API dyt dycCallAsUr(dycObject obj, dycClass inf, dycMethod mth, void **args);
BGBDY_API void *dycCallAsUp(dycObject obj, dycClass inf, dycMethod mth, void **args);
BGBDY_API void dycCallAsUv(dycObject obj, dycClass inf, dycMethod mth, void **args);
BGBDY_API int dycCallAsVi(dycObject obj, dycClass inf, dycMethod mth, va_list args);
BGBDY_API s64 dycCallAsVl(dycObject obj, dycClass inf, dycMethod mth, va_list args);
BGBDY_API float dycCallAsVf(dycObject obj, dycClass inf, dycMethod mth, va_list args);
BGBDY_API double dycCallAsVd(dycObject obj, dycClass inf, dycMethod mth, va_list args);
BGBDY_API dyt dycCallAsVr(dycObject obj, dycClass inf, dycMethod mth, va_list args);
BGBDY_API void *dycCallAsVp(dycObject obj, dycClass inf, dycMethod mth, va_list args);
BGBDY_API void dycCallAsVv(dycObject obj, dycClass inf, dycMethod mth, va_list args);
BGBDY_API int dycCallAsi(dycObject obj, dycClass inf, dycMethod mth, ...);
BGBDY_API s64 dycCallAsl(dycObject obj, dycClass inf, dycMethod mth, ...);
BGBDY_API float dycCallAsf(dycObject obj, dycClass inf, dycMethod mth, ...);
BGBDY_API double dycCallAsd(dycObject obj, dycClass inf, dycMethod mth, ...);
BGBDY_API dyt dycCallAsr(dycObject obj, dycClass inf, dycMethod mth, ...);
BGBDY_API void *dycCallAsp(dycObject obj, dycClass inf, dycMethod mth, ...);
BGBDY_API void dycCallAsv(dycObject obj, dycClass inf, dycMethod mth, ...);
BGBDY_API void *dycCallStructU(void *obj, dycClassV vinf, dycMethod mth, void **args);
BGBDY_API void *dycCallStructV(void *obj, dycClassV vinf, dycMethod mth, va_list args);
BGBDY_API void *dycCallStruct(void *obj, dycClassV vinf, dycMethod mth, ...);
BGBDY_API int dycCallStructUi(void *obj, dycClassV vinf, dycMethod mth, void **args);
BGBDY_API s64 dycCallStructUl(void *obj, dycClassV vinf, dycMethod mth, void **args);
BGBDY_API float dycCallStructUf(void *obj, dycClassV vinf, dycMethod mth, void **args);
BGBDY_API double dycCallStructUd(void *obj, dycClassV vinf, dycMethod mth, void **args);
BGBDY_API dyt dycCallStructUr(void *obj, dycClassV vinf, dycMethod mth, void **args);
BGBDY_API void *dycCallStructUp(void *obj, dycClassV vinf, dycMethod mth, void **args);
BGBDY_API void dycCallStructUv(void *obj, dycClassV vinf, dycMethod mth, void **args);
BGBDY_API int dycCallStructVi(void *obj, dycClassV vinf, dycMethod mth, va_list args);
BGBDY_API s64 dycCallStructVl(void *obj, dycClassV vinf, dycMethod mth, va_list args);
BGBDY_API float dycCallStructVf(void *obj, dycClassV vinf, dycMethod mth, va_list args);
BGBDY_API double dycCallStructVd(void *obj, dycClassV vinf, dycMethod mth, va_list args);
BGBDY_API dyt dycCallStructVr(void *obj, dycClassV vinf, dycMethod mth, va_list args);
BGBDY_API void *dycCallStructVp(void *obj, dycClassV vinf, dycMethod mth, va_list args);
BGBDY_API void dycCallStructVv(void *obj, dycClassV vinf, dycMethod mth, va_list args);
BGBDY_API int dycCallStructi(void *obj, dycClassV vinf, dycMethod mth, ...);
BGBDY_API s64 dycCallStructl(void *obj, dycClassV vinf, dycMethod mth, ...);
BGBDY_API float dycCallStructf(void *obj, dycClassV vinf, dycMethod mth, ...);
BGBDY_API double dycCallStructd(void *obj, dycClassV vinf, dycMethod mth, ...);
BGBDY_API dyt dycCallStructr(void *obj, dycClassV vinf, dycMethod mth, ...);
BGBDY_API void *dycCallStructp(void *obj, dycClassV vinf, dycMethod mth, ...);
BGBDY_API void dycCallStructv(void *obj, dycClassV vinf, dycMethod mth, ...);
//AHSRC:base/dyc_dyii.c
BGBDY_API int dycDObjectP(dyt obj);
BGBDY_API void *dycDCallSigU(dyt obj, char *name, char *sig, void **args);
BGBDY_API void *dycDCallSigV(dyt obj, char *name, char *sig, va_list args);
BGBDY_API void *dycDCallSig(dyt obj, char *name, char *sig, ...);
BGBDY_API dyt dycDCallSigVr(dyt obj, char *name, char *sig, va_list lst);
BGBDY_API int dycDCallSigVi(dyt obj, char *name, char *sig, va_list lst);
BGBDY_API s64 dycDCallSigVl(dyt obj, char *name, char *sig, va_list lst);
BGBDY_API float dycDCallSigVf(dyt obj, char *name, char *sig, va_list lst);
BGBDY_API double dycDCallSigVd(dyt obj, char *name, char *sig, va_list lst);
BGBDY_API dyt dycDCallSigUr(dyt obj, char *name, char *sig, void **args);
BGBDY_API int dycDCallSigUi(dyt obj, char *name, char *sig, void **args);
BGBDY_API s64 dycDCallSigUl(dyt obj, char *name, char *sig, void **args);
BGBDY_API float dycDCallSigUf(dyt obj, char *name, char *sig, void **args);
BGBDY_API double dycDCallSigUd(dyt obj, char *name, char *sig, void **args);
BGBDY_API int dycDCallSigi(dyt obj, char *name, char *sig, ...);
BGBDY_API s64 dycDCallSigl(dyt obj, char *name, char *sig, ...);
BGBDY_API float dycDCallSigf(dyt obj, char *name, char *sig, ...);
BGBDY_API double dycDCallSigd(dyt obj, char *name, char *sig, ...);
BGBDY_API void *dycDCallU(dyt obj, dycMethod mth, void **args);
BGBDY_API void *dycDCallV(dyt obj, dycMethod mth, va_list args);
BGBDY_API void *dycDCall(dyt obj, dycMethod mth, ...);
BGBDY_API int dycDCallUi(dyt obj, dycMethod mth, void **args);
BGBDY_API s64 dycDCallUl(dyt obj, dycMethod mth, void **args);
BGBDY_API float dycDCallUf(dyt obj, dycMethod mth, void **args);
BGBDY_API double dycDCallUd(dyt obj, dycMethod mth, void **args);
BGBDY_API dyt dycDCallUr(dyt obj, dycMethod mth, void **args);
BGBDY_API void *dycDCallUp(dyt obj, dycMethod mth, void **args);
BGBDY_API void dycDCallUv(dyt obj, dycMethod mth, void **args);
BGBDY_API int dycDCallVi(dyt obj, dycMethod mth, va_list args);
BGBDY_API s64 dycDCallVl(dyt obj, dycMethod mth, va_list args);
BGBDY_API float dycDCallVf(dyt obj, dycMethod mth, va_list args);
BGBDY_API double dycDCallVd(dyt obj, dycMethod mth, va_list args);
BGBDY_API dyt dycDCallVr(dyt obj, dycMethod mth, va_list args);
BGBDY_API void *dycDCallVp(dyt obj, dycMethod mth, va_list args);
BGBDY_API void dycDCallVv(dyt obj, dycMethod mth, va_list args);
BGBDY_API int dycDCalli(dyt obj, dycMethod mth, ...);
BGBDY_API s64 dycDCalll(dyt obj, dycMethod mth, ...);
BGBDY_API float dycDCallf(dyt obj, dycMethod mth, ...);
BGBDY_API double dycDCalld(dyt obj, dycMethod mth, ...);
BGBDY_API dyt dycDCallr(dyt obj, dycMethod mth, ...);
BGBDY_API void *dycDCallp(dyt obj, dycMethod mth, ...);
BGBDY_API void dycDCallv(dyt obj, dycMethod mth, ...);
BGBDY_API dyt dycDGet(dyt obj, dycSlot idx);
BGBDY_API int dycDSet(dyt obj, dycSlot slot, dyt val);
BGBDY_API dyt dycDGetr(dyt obj, dycSlot idx);
BGBDY_API void dycDSetr(dyt obj, dycSlot idx, dyt val);
BGBDY_API int dycDGetsb(dyt obj, dycSlot idx);
BGBDY_API int dycDGetub(dyt obj, dycSlot idx);
BGBDY_API int dycDGetss(dyt obj, dycSlot idx);
BGBDY_API int dycDGetus(dyt obj, dycSlot idx);
BGBDY_API int dycDGeti(dyt obj, dycSlot idx);
BGBDY_API s64 dycDGetl(dyt obj, dycSlot idx);
BGBDY_API float dycDGetf(dyt obj, dycSlot idx);
BGBDY_API double dycDGetd(dyt obj, dycSlot idx);
BGBDY_API void *dycDGetp(dyt obj, dycSlot idx);
BGBDY_API void dycDSetsb(dyt obj, dycSlot idx, int val);
BGBDY_API void dycDSetub(dyt obj, dycSlot idx, int val);
BGBDY_API void dycDSetss(dyt obj, dycSlot idx, int val);
BGBDY_API void dycDSetus(dyt obj, dycSlot idx, int val);
BGBDY_API void dycDSeti(dyt obj, dycSlot idx, int val);
BGBDY_API void dycDSetl(dyt obj, dycSlot idx, s64 val);
BGBDY_API void dycDSetf(dyt obj, dycSlot idx, float val);
BGBDY_API void dycDSetd(dyt obj, dycSlot idx, double val);
BGBDY_API void dycDSetp(dyt obj, dycSlot idx, void *val);
BGBDY_API dycMethod dycIdxMethodArgsN(dycClass inf, char *name, dyt args);
BGBDY_API dycMethod dycIdxMethodArray(dycClass inf, char *name,dyt *args, int nargs);
BGBDY_API dyt dycCallN(dycObject obj, dycMethod minf, dyt args);
BGBDY_API dyt dycCallArray(dycObject obj, dycMethod minf,dyt *args, int nargs);
BGBDY_API dyt dycCallStaticN(dycClass inf, dycMethod minf, dyt args);
BGBDY_API dyt dycCallStaticArray(dycClass inf, dycMethod minf,dyt *args, int nargs);
BGBDY_API dyt dycLookupMethodArgsN(dycObject obj, char *name, dyt args);
BGBDY_API dyt dycLookupStaticMethodArgsN(dycClass inf, char *name, dyt args);
BGBDY_API dyt dycCallNameN(dycObject obj, char *name, dyt args);
BGBDY_API dyt dycCallNameArray(dycObject obj, char *name,dyt *args, int nargs);
BGBDY_API dyt dycCallStaticNameN(dycClass inf, char *name, dyt args);
BGBDY_API dyt dycCallStaticNameArray(dycClass inf, char *name,dyt *args, int nargs);
BGBDY_API dycObject dycNewInitN(dycClass inf, dyt args);
BGBDY_API dycObject dycNewInitArray(dycClass inf, dyt *args, int nargs);
BGBDY_API dycObject dycNewInitClassN(char *name, dyt args);
BGBDY_API dycObject dycNewInitClassArray(char *name, dyt *args, int nargs);
BGBDY_API dyt dycCallAliasNameArray(dyt obj, char *name,dyt *args, int nargs);
BGBDY_API dyt dycCallAliasNameN(dyt obj, char *name, dyt args);
BGBDY_API int dycGetObjectDelegateArray(dycObject obj, dyt *arr, int max);
BGBDY_API dycSlot dycGetProtoSlotFlags(char *name, char *sig, char *flags);
BGBDY_API dycMethod dycGetProtoMethodFlags(char *name, char *sig, char *flags);
//AHSRC:base/dyc_jni_fcn.c
//AHSRC:base/dyc_jni_iface.c
BGBDY_API void *dycJniGetEnv();
BGBDY_API void *dycJniGetJavaVM();
//AHSRC:base/dyc_jvmti_fcn.c
//AHSRC:base/dyc_jvmti_iface.c
//AHSRC:base/dy_opr.c
BGBDY_API dyt dyUnaryS(char *opr, dyt a);
BGBDY_API dyt dyBinaryS(char *opr, dyt a, dyt b);
BGBDY_API int dyIndexOperatorName(char *opr);
BGBDY_API char *dyOperatorNameForIndex(int opr);
BGBDY_API dyt dyadd(dyt a, dyt b);
BGBDY_API dyt dysub(dyt a, dyt b);
BGBDY_API dyt dymul(dyt a, dyt b);
BGBDY_API dyt dydiv(dyt a, dyt b);
BGBDY_API dyt dymod(dyt a, dyt b);
BGBDY_API dyt dyand(dyt a, dyt b);
BGBDY_API dyt dyor(dyt a, dyt b);
BGBDY_API dyt dyxor(dyt a, dyt b);
BGBDY_API dyt dyshl(dyt a, dyt b);
BGBDY_API dyt dyshr(dyt a, dyt b);
BGBDY_API dyt dyexp(dyt a, dyt b);
BGBDY_API dyt dyATan2(dyt a, dyt b);
BGBDY_API dyt dySexp(dyt a, dyt b);
BGBDY_API dyt dyneg(dyt a);
BGBDY_API dyt dynot(dyt a);
BGBDY_API dyt dylnot(dyt a);
BGBDY_API dyt dyumul(dyt a);
BGBDY_API dyt dyudiv(dyt a);
BGBDY_API dyt dyumod(dyt a);
BGBDY_API dyt dyuand(dyt a);
BGBDY_API dyt dyuor(dyt a);
BGBDY_API dyt dyuxor(dyt a);
BGBDY_API dyt dyinc(dyt a);
BGBDY_API dyt dydec(dyt a);
BGBDY_API int dyeqp(dyt a, dyt b);
BGBDY_API int dyneqp(dyt a, dyt b);
BGBDY_API int dyltp(dyt a, dyt b);
BGBDY_API int dygtp(dyt a, dyt b);
BGBDY_API int dylep(dyt a, dyt b);
BGBDY_API int dygep(dyt a, dyt b);
BGBDY_API int dyunp(dyt a, dyt b);
BGBDY_API int dyeqvp(dyt a, dyt b);
BGBDY_API int dytruep(dyt a);
BGBDY_API int dyfalsep(dyt a);
BGBDY_API dyt dysqr(dyt a);
BGBDY_API dyt dysqrt(dyt a);
BGBDY_API dyt dyssqr(dyt a);
BGBDY_API dyt dyssqrt(dyt a);
BGBDY_API dyt dySin(dyt a);
BGBDY_API dyt dyCos(dyt a);
BGBDY_API dyt dyTan(dyt a);
BGBDY_API dyt dyASin(dyt a);
BGBDY_API dyt dyACos(dyt a);
BGBDY_API dyt dyATan(dyt a);
BGBDY_API dyt dyEqv(dyt a, dyt b);
BGBDY_API dyt dyNeqv(dyt a, dyt b);
BGBDY_API dyt dyEq(dyt a, dyt b);
BGBDY_API dyt dyNeq(dyt a, dyt b);
BGBDY_API dyt dyLt(dyt a, dyt b);
BGBDY_API dyt dyGt(dyt a, dyt b);
BGBDY_API dyt dyLe(dyt a, dyt b);
BGBDY_API dyt dyGe(dyt a, dyt b);
//AHSRC:base/dy_cons.c
BGBDY_API dyt dycons(dyt a, dyt b);
BGBDY_API int dyconsp(dyt p);
BGBDY_API dyt dycar(dyt p);
BGBDY_API dyt dycdr(dyt p);
BGBDY_API dyt dycars(dyt p);
BGBDY_API dyt dycdrs(dyt p);
BGBDY_API void dysetcar(dyt p, dyt v);
BGBDY_API void dysetcdr(dyt p, dyt v);
BGBDY_API dyt BGBDY_CarF(dyt p);
BGBDY_API dyt BGBDY_CdrF(dyt p);
BGBDY_API void BGBDY_SetCarF(dyt p, dyt v);
BGBDY_API void BGBDY_SetCdrF(dyt p, dyt v);
BGBDY_API dyt dycons(dyt a, dyt b);
BGBDY_API int dyconsp(dyt p);
BGBDY_API dyt dycar(dyt p);
BGBDY_API dyt dycdr(dyt p);
BGBDY_API dyt dycars(dyt p);
BGBDY_API dyt dycdrs(dyt p);
BGBDY_API void dysetcar(dyt p, dyt v);
BGBDY_API void dysetcdr(dyt p, dyt v);
BGBDY_API dyt BGBDY_CarF(dyt p);
BGBDY_API dyt BGBDY_CdrF(dyt p);
BGBDY_API void BGBDY_SetCarF(dyt p, dyt v);
BGBDY_API void BGBDY_SetCdrF(dyt p, dyt v);
BGBDY_API int dylistp(dyt lst);
BGBDY_API int dylistlen(dyt lst);
BGBDY_API int dyListLength(dyt lst);
BGBDY_API void dyFreeCons(dyt p);
BGBDY_API void dyFreeList(dyt p);
BGBDY_API void dyFreeListF(dyt p);
BGBDY_API void dyFreeListR(dyt p);
BGBDY_API int dyFormIsP(dyt lst, char *str);
BGBDY_API dyt dylist1(dyt a);
BGBDY_API dyt dylist2(dyt a, dyt b);
BGBDY_API dyt dylist3(dyt a, dyt b, dyt c);
BGBDY_API dyt dylist4(dyt a, dyt b, dyt c, dyt d);
BGBDY_API dyt dylist5(dyt a, dyt b, dyt c, dyt d, dyt e);
BGBDY_API dyt dylist6(dyt a, dyt b, dyt c, dyt d, dyt e, dyt f);
BGBDY_API dyt dylist7(dyt a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g);
BGBDY_API dyt dylist8(dyt a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g, dyt h);
BGBDY_API dyt dylist9(dyt a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g, dyt h, dyt i);
BGBDY_API dyt dylist1s(char *a);
BGBDY_API dyt dylist2s(char *a, dyt b);
BGBDY_API dyt dylist3s(char *a, dyt b, dyt c);
BGBDY_API dyt dylist4s(char *a, dyt b, dyt c, dyt d);
BGBDY_API dyt dylist5s(char *a, dyt b, dyt c, dyt d, dyt e);
BGBDY_API dyt dylist6s(char *a, dyt b, dyt c, dyt d, dyt e, dyt f);
BGBDY_API dyt dylist7s(char *a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g);
BGBDY_API dyt dylist8s(char *a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g, dyt h);
BGBDY_API dyt dycons2(dyt a, dyt b, dyt c);
BGBDY_API dyt dycons3(dyt a, dyt b, dyt c, dyt d);
BGBDY_API dyt dycons4(dyt a, dyt b, dyt c, dyt d, dyt e);
BGBDY_API dyt dycons5(dyt a, dyt b, dyt c, dyt d, dyt e, dyt f);
BGBDY_API dyt dycons6(dyt a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g);
BGBDY_API dyt dycons7(dyt a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g, dyt h);
BGBDY_API dyt dycons8(dyt a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g, dyt h, dyt i);
BGBDY_API dyt dycons9(dyt a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g, dyt h, dyt i, dyt j);
BGBDY_API dyt dyconss(char *a, dyt b);
BGBDY_API dyt dycons2s(char *a, dyt b, dyt c);
BGBDY_API dyt dycons3s(char *a, dyt b, dyt c, dyt d);
BGBDY_API dyt dycons4s(char *a, dyt b, dyt c, dyt d, dyt e);
BGBDY_API dyt dycons5s(char *a, dyt b, dyt c, dyt d, dyt e, dyt f);
BGBDY_API dyt dycons6s(char *a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g);
BGBDY_API dyt dycons7s(char *a, dyt b, dyt c, dyt d, dyt e, dyt f, dyt g, dyt h);
BGBDY_API dyt dycaar(dyt p);
BGBDY_API dyt dycdar(dyt p);
BGBDY_API dyt dycadr(dyt p);
BGBDY_API dyt dycddr(dyt p);
BGBDY_API dyt dycaaar(dyt p);
BGBDY_API dyt dycdaar(dyt p);
BGBDY_API dyt dycadar(dyt p);
BGBDY_API dyt dycddar(dyt p);
BGBDY_API dyt dycaadr(dyt p);
BGBDY_API dyt dycdadr(dyt p);
BGBDY_API dyt dycaddr(dyt p);
BGBDY_API dyt dycdddr(dyt p);
BGBDY_API dyt dycaaaar(dyt p);
BGBDY_API dyt dycdaaar(dyt p);
BGBDY_API dyt dycadaar(dyt p);
BGBDY_API dyt dycddaar(dyt p);
BGBDY_API dyt dycaadar(dyt p);
BGBDY_API dyt dycdadar(dyt p);
BGBDY_API dyt dycaddar(dyt p);
BGBDY_API dyt dycdddar(dyt p);
BGBDY_API dyt dycaaadr(dyt p);
BGBDY_API dyt dycdaadr(dyt p);
BGBDY_API dyt dycadadr(dyt p);
BGBDY_API dyt dycddadr(dyt p);
BGBDY_API dyt dycaaddr(dyt p);
BGBDY_API dyt dycdaddr(dyt p);
BGBDY_API dyt dycadddr(dyt p);
BGBDY_API dyt dycddddr(dyt p);
BGBDY_API dyt dycaddddr(dyt p);
BGBDY_API dyt dycdddddr(dyt p);
BGBDY_API dyt dycadddddr(dyt p);
BGBDY_API dyt dycddddddr(dyt p);
BGBDY_API dyt dycaddddddr(dyt p);
BGBDY_API dyt dycdddddddr(dyt p);
BGBDY_API dyt dycadddddddr(dyt p);
BGBDY_API dyt dycddddddddr(dyt p);
BGBDY_API dyt dycaars(dyt p);
BGBDY_API dyt dycdars(dyt p);
BGBDY_API dyt dycadrs(dyt p);
BGBDY_API dyt dycddrs(dyt p);
BGBDY_API dyt dycaaars(dyt p);
BGBDY_API dyt dycdaars(dyt p);
BGBDY_API dyt dycadars(dyt p);
BGBDY_API dyt dycddars(dyt p);
BGBDY_API dyt dycaadrs(dyt p);
BGBDY_API dyt dycdadrs(dyt p);
BGBDY_API dyt dycaddrs(dyt p);
BGBDY_API dyt dycdddrs(dyt p);
BGBDY_API dyt dycaaaars(dyt p);
BGBDY_API dyt dycdaaars(dyt p);
BGBDY_API dyt dycadaars(dyt p);
BGBDY_API dyt dycddaars(dyt p);
BGBDY_API dyt dycaadars(dyt p);
BGBDY_API dyt dycdadars(dyt p);
BGBDY_API dyt dycaddars(dyt p);
BGBDY_API dyt dycdddars(dyt p);
BGBDY_API dyt dycaaadrs(dyt p);
BGBDY_API dyt dycdaadrs(dyt p);
BGBDY_API dyt dycadadrs(dyt p);
BGBDY_API dyt dycddadrs(dyt p);
BGBDY_API dyt dycaaddrs(dyt p);
BGBDY_API dyt dycdaddrs(dyt p);
BGBDY_API dyt dycadddrs(dyt p);
BGBDY_API dyt dycddddrs(dyt p);
BGBDY_API dyt dycaaaaars(dyt p);
BGBDY_API dyt dycdaaaars(dyt p);
BGBDY_API dyt dycadaaars(dyt p);
BGBDY_API dyt dycddaaars(dyt p);
BGBDY_API dyt dycaadaars(dyt p);
BGBDY_API dyt dycdadaars(dyt p);
BGBDY_API dyt dycaddaars(dyt p);
BGBDY_API dyt dycdddaars(dyt p);
BGBDY_API dyt dycaaadars(dyt p);
BGBDY_API dyt dycdaadars(dyt p);
BGBDY_API dyt dycadadars(dyt p);
BGBDY_API dyt dycddadars(dyt p);
BGBDY_API dyt dycaaddars(dyt p);
BGBDY_API dyt dycdaddars(dyt p);
BGBDY_API dyt dycadddars(dyt p);
BGBDY_API dyt dycddddars(dyt p);
BGBDY_API dyt dycaaaadrs(dyt p);
BGBDY_API dyt dycdaaadrs(dyt p);
BGBDY_API dyt dycadaadrs(dyt p);
BGBDY_API dyt dycddaadrs(dyt p);
BGBDY_API dyt dycaadadrs(dyt p);
BGBDY_API dyt dycdadadrs(dyt p);
BGBDY_API dyt dycaddadrs(dyt p);
BGBDY_API dyt dycdddadrs(dyt p);
BGBDY_API dyt dycaaaddrs(dyt p);
BGBDY_API dyt dycdaaddrs(dyt p);
BGBDY_API dyt dycadaddrs(dyt p);
BGBDY_API dyt dycddaddrs(dyt p);
BGBDY_API dyt dycaadddrs(dyt p);
BGBDY_API dyt dycdadddrs(dyt p);
BGBDY_API dyt dycaddddrs(dyt p);
BGBDY_API dyt dycdddddrs(dyt p);
BGBDY_API dyt dycadddddrs(dyt p);
BGBDY_API dyt dycddddddrs(dyt p);
BGBDY_API dyt dycaddddddrs(dyt p);
BGBDY_API dyt dycdddddddrs(dyt p);
BGBDY_API dyt dycadddddddrs(dyt p);
BGBDY_API dyt dycddddddddrs(dyt p);
BGBDY_API dyt dyreverse(dyt lst);
BGBDY_API dyt dynreverse(dyt lst);
BGBDY_API dyt dynappend(dyt la, dyt lb);
BGBDY_API dyt dyListToArray(dyt lst);
BGBDY_API dyt dylistcopy(dyt lst);
BGBDY_API dyt dyListCopyR(dyt lst);
BGBDY_API dyt dyappend(dyt la, dyt lb);
BGBDY_API int dyListEqualP(dyt la, dyt lb);
BGBDY_API int dyListEqvP(dyt la, dyt lb);
//AHSRC:base/dy_sparse.c
//AHSRC:base/dy_smxl.c
//AHSRC:base/dy_array.c
BGBDY_API dyt dyarray(int cnt);
BGBDY_API int dyarrayp(dyt p);
BGBDY_API dyt dyarrayidx(dyt p, int idx);
BGBDY_API void dyarraysetidx(dyt p, int idx, dyt q);
BGBDY_API dyt dyarrayidxref(dyt p, int idx);
BGBDY_API dyt *dyarrayv(dyt p);
BGBDY_API int dyarraysz(dyt p);
BGBDY_API dyt dyArrayIdx(dyt p, int idx);
BGBDY_API void dyArraySetIdx(dyt p, int idx, dyt q);
BGBDY_API dytf dytfArrayIdx(dytf p, int idx);
BGBDY_API void dytfArraySetIdx(dytf p, int idx, dytf q);
BGBDY_API dyt dyWrapArray(dyt *args, int cnt);
BGBDY_API int dyByteArrayP(dyt p);
BGBDY_API int dyByteArraySize(dyt p);
BGBDY_API byte *dyByteArrayData(dyt p);
BGBDY_API dyt dyByteArrayFromBuffer(byte *buf, int sz);
//AHSRC:base/dy_string.c
BGBDY_API char **dyStableSplit(char *str);
//AHSRC:base/dytf_cons.c
BGBDY_API dytf dytfCons(dytf a, dytf b);
BGBDY_API bool dytfConsP(dytf p);
BGBDY_API dytf dytfCar(dytf p);
BGBDY_API dytf dytfCdr(dytf p);
BGBDY_API dytf dytfCarF(dytf p);
BGBDY_API dytf dytfCdrF(dytf p);
BGBDY_API void dytfSetCar(dytf p, dytf v);
BGBDY_API void dytfSetCdr(dytf p, dytf v);
BGBDY_API void dytfSetCarF(dytf p, dytf v);
BGBDY_API void dytfSetCdrF(dytf p, dytf v);
BGBDY_API bool dytfListP(dytf lst);
BGBDY_API int dytfListLength(dytf lst);
BGBDY_API void dytfFreeCons(dytf p);
BGBDY_API void dytfFreeList(dytf p);
BGBDY_API void dytfFreeListF(dytf p);
BGBDY_API void dytfFreeListR(dytf p);
BGBDY_API bool dytfFormIsP(dytf lst, char *str);
BGBDY_API dytf dytfCaar(dytf p);
BGBDY_API dytf dytfCdar(dytf p);
BGBDY_API dytf dytfCadr(dytf p);
BGBDY_API dytf dytfCddr(dytf p);
BGBDY_API dytf dytfCaaar(dytf p);
BGBDY_API dytf dytfCdaar(dytf p);
BGBDY_API dytf dytfCadar(dytf p);
BGBDY_API dytf dytfCddar(dytf p);
BGBDY_API dytf dytfCaadr(dytf p);
BGBDY_API dytf dytfCdadr(dytf p);
BGBDY_API dytf dytfCaddr(dytf p);
BGBDY_API dytf dytfCdddr(dytf p);
BGBDY_API dytf dytfCaaaar(dytf p);
BGBDY_API dytf dytfCdaaar(dytf p);
BGBDY_API dytf dytfCadaar(dytf p);
BGBDY_API dytf dytfCddaar(dytf p);
BGBDY_API dytf dytfCaadar(dytf p);
BGBDY_API dytf dytfCdadar(dytf p);
BGBDY_API dytf dytfCaddar(dytf p);
BGBDY_API dytf dytfCdddar(dytf p);
BGBDY_API dytf dytfCaaadr(dytf p);
BGBDY_API dytf dytfCdaadr(dytf p);
BGBDY_API dytf dytfCadadr(dytf p);
BGBDY_API dytf dytfCddadr(dytf p);
BGBDY_API dytf dytfCaaddr(dytf p);
BGBDY_API dytf dytfCdaddr(dytf p);
BGBDY_API dytf dytfCadddr(dytf p);
BGBDY_API dytf dytfCddddr(dytf p);
BGBDY_API dytf dytfCaaaaar(dytf p);
BGBDY_API dytf dytfCdaaaar(dytf p);
BGBDY_API dytf dytfCadaaar(dytf p);
BGBDY_API dytf dytfCddaaar(dytf p);
BGBDY_API dytf dytfCaadaar(dytf p);
BGBDY_API dytf dytfCdadaar(dytf p);
BGBDY_API dytf dytfCaddaar(dytf p);
BGBDY_API dytf dytfCdddaar(dytf p);
BGBDY_API dytf dytfCaaadar(dytf p);
BGBDY_API dytf dytfCdaadar(dytf p);
BGBDY_API dytf dytfCadadar(dytf p);
BGBDY_API dytf dytfCddadar(dytf p);
BGBDY_API dytf dytfCaaddar(dytf p);
BGBDY_API dytf dytfCdaddar(dytf p);
BGBDY_API dytf dytfCadddar(dytf p);
BGBDY_API dytf dytfCddddar(dytf p);
BGBDY_API dytf dytfCaaaadr(dytf p);
BGBDY_API dytf dytfCdaaadr(dytf p);
BGBDY_API dytf dytfCadaadr(dytf p);
BGBDY_API dytf dytfCddaadr(dytf p);
BGBDY_API dytf dytfCaadadr(dytf p);
BGBDY_API dytf dytfCdadadr(dytf p);
BGBDY_API dytf dytfCaddadr(dytf p);
BGBDY_API dytf dytfCdddadr(dytf p);
BGBDY_API dytf dytfCaaaddr(dytf p);
BGBDY_API dytf dytfCdaaddr(dytf p);
BGBDY_API dytf dytfCadaddr(dytf p);
BGBDY_API dytf dytfCddaddr(dytf p);
BGBDY_API dytf dytfCaadddr(dytf p);
BGBDY_API dytf dytfCdadddr(dytf p);
BGBDY_API dytf dytfCaddddr(dytf p);
BGBDY_API dytf dytfCdddddr(dytf p);
BGBDY_API dytf dytfList1(dytf a);
BGBDY_API dytf dytfList2(dytf a, dytf b);
BGBDY_API dytf dytfList3(dytf a, dytf b, dytf c);
BGBDY_API dytf dytfList4(dytf a, dytf b, dytf c, dytf d);
BGBDY_API dytf dytfList5(dytf a, dytf b, dytf c, dytf d, dytf e);
BGBDY_API dytf dytfList6(dytf a, dytf b, dytf c, dytf d, dytf e, dytf f);
BGBDY_API dytf dytfList1s(char *a);
BGBDY_API dytf dytfList2s(char *a, dytf b);
BGBDY_API dytf dytfList3s(char *a, dytf b, dytf c);
BGBDY_API dytf dytfList4s(char *a, dytf b, dytf c, dytf d);
BGBDY_API dytf dytfList5s(char *a, dytf b, dytf c, dytf d, dytf e);
BGBDY_API dytf dytfList6s(char *a, dytf b, dytf c, dytf d, dytf e, dytf f);
BGBDY_API dytf dytfCons2(dytf a, dytf b, dytf c);
BGBDY_API dytf dytfCons3(dytf a, dytf b, dytf c, dytf d);
BGBDY_API dytf dytfCons4(dytf a, dytf b, dytf c, dytf d, dytf e);
BGBDY_API dytf dytfConss(char *a, dytf b);
BGBDY_API dytf dytfCons2s(char *a, dytf b, dytf c);
BGBDY_API dytf dytfReverse(dytf lst);
BGBDY_API dytf dytfNReverse(dytf lst);
BGBDY_API dytf dytfNAppend(dytf la, dytf lb);
BGBDY_API dytf dytfListToArray(dytf lst);
BGBDY_API dytf dytfListCopy(dytf lst);
BGBDY_API dytf dytfListCopyR(dytf lst);
BGBDY_API dytf dytfAppend(dytf la, dytf lb);
BGBDY_API bool dytfListEqualP(dytf la, dytf lb);
BGBDY_API bool dytfListEqvP(dytf la, dytf lb);
//AHSRC:base/dytf_oo.c
BGBDY_API dytf dytfCopyValue(dytf a);
BGBDY_API bool dytfDropValue(dytf p);
BGBDY_API dytf dytfClone(dytf a);
BGBDY_API char *dytfToString(dytf a);
BGBDY_API bool dytfDelete(dytf a);
BGBDY_API dytf dytfObject();
BGBDY_API bool dytfObjectP(dytf obj);
BGBDY_API dytf dytfBind(dytf obj, char *var, dytf val);
BGBDY_API dytf dytfBindInfo(dytf obj, dycSlot var, dytf val);
BGBDY_API dytf dytfTrySet(dytf obj, char *var, dytf val);
BGBDY_API dytf dytfGet(dytf obj, char *var);
BGBDY_API dytf dytfSet(dytf obj, char *var, dytf val);
BGBDY_API dytf dytfTryGetRef(dytf obj, char *var);
BGBDY_API dytf dytfTryGetInfo(dytf obj, char *var);
BGBDY_API dytf dytfGetIdx(dytf obj, int idx);
BGBDY_API dytf dytfSetIdx(dytf obj, int idx, dytf val);
BGBDY_API dytf dytfGetIdxRef(dytf obj, int idx);
BGBDY_API dytf dytfGetKey(dytf obj, dytf key);
BGBDY_API dytf dytfSetKey(dytf obj, dytf key, dytf val);
BGBDY_API dytf dytfGetKeyRef(dytf obj, dytf key);
BGBDY_API dytf dytfGetDelegate(dytf obj, char *var);
BGBDY_API void dytfSetDelegate(dytf obj, char *var, dytf val);
BGBDY_API dytf dytfCall(dytf obj, char *sym, dytf *args, int nargs);
BGBDY_API dytf dytfCallN(dytf obj, char *sym, dytf args);
BGBDY_API dytf dytfLookupMethodSig(dytf obj, char *name, char *sig);
BGBDY_API dytf dytfNewN(char *name, dytf args);
BGBDY_API dytf dytfNewA(char *name, dytf *args, int nargs);
BGBDY_API dytf dytfSigCastVariantSig(char *sig, dytf val);
BGBDY_API dycArray dytfDycArrayvF(dytf a);
BGBDY_API dycObject dytfDycObjectvF(dytf a);
BGBDY_API dycClass dytfDycClassvF(dytf a);
BGBDY_API bool dytfDycArrayP(dytf a);
BGBDY_API bool dytfDycObjectP(dytf a);
BGBDY_API bool dytfDycClassP(dytf a);
BGBDY_API bool dytfDycSlotP(dytf a);
BGBDY_API bool dytfDycMethodP(dytf a);
BGBDY_API dytf dytfDycArrayGetIdx(dytf obj, int idx);
BGBDY_API void dytfDycArraySetIdx(dytf obj, int idx, dytf val);
BGBDY_API dytf dytfApplyMethod(dytf obj, dytf mth,dytf *args, int nargs);
BGBDY_API dytf dytfApplyMethodLst(dytf obj, dytf mth, dytf args);
//AHSRC:base/dytf_opr.c
BGBDY_API dytf dytfAdd(dytf a, dytf b);
BGBDY_API dytf dytfSub(dytf a, dytf b);
BGBDY_API dytf dytfMul(dytf a, dytf b);
BGBDY_API dytf dytfDiv(dytf a, dytf b);
BGBDY_API dytf dytfMod(dytf a, dytf b);
BGBDY_API dytf dytfAnd(dytf a, dytf b);
BGBDY_API dytf dytfOr(dytf a, dytf b);
BGBDY_API dytf dytfXor(dytf a, dytf b);
BGBDY_API dytf dytfShl(dytf a, dytf b);
BGBDY_API dytf dytfShr(dytf a, dytf b);
BGBDY_API dytf dytfExp(dytf a, dytf b);
BGBDY_API dytf dytfNeg(dytf a);
BGBDY_API dytf dytfNot(dytf a);
BGBDY_API dytf dytfLNot(dytf a);
BGBDY_API dytf dytfUMul(dytf a);
BGBDY_API dytf dytfUDiv(dytf a);
BGBDY_API dytf dytfUMod(dytf a);
BGBDY_API dytf dytfUAnd(dytf a);
BGBDY_API dytf dytfUOr(dytf a);
BGBDY_API dytf dytfUXor(dytf a);
BGBDY_API dytf dytfSin(dytf a);
BGBDY_API dytf dytfCos(dytf a);
BGBDY_API dytf dytfTan(dytf a);
BGBDY_API dytf dytfASin(dytf a);
BGBDY_API dytf dytfACos(dytf a);
BGBDY_API dytf dytfATan(dytf a);
BGBDY_API dytf dytfATan2(dytf a, dytf b);
BGBDY_API bool dytfEqP(dytf a, dytf b);
BGBDY_API bool dytfNEqP(dytf a, dytf b);
BGBDY_API bool dytfEqvP(dytf a, dytf b);
BGBDY_API bool dytfNEqvP(dytf a, dytf b);
BGBDY_API bool dytfLtP(dytf a, dytf b);
BGBDY_API bool dytfGtP(dytf a, dytf b);
BGBDY_API bool dytfLeP(dytf a, dytf b);
BGBDY_API bool dytfGeP(dytf a, dytf b);
BGBDY_API bool dytfUnP(dytf a, dytf b);
BGBDY_API dytf dytfSqr(dytf a);
BGBDY_API dytf dytfSqrt(dytf a);
BGBDY_API dytf dytfSSqr(dytf a);
BGBDY_API dytf dytfSSqrt(dytf a);
BGBDY_API dytf dytfInc(dytf a);
BGBDY_API dytf dytfDec(dytf a);
BGBDY_API int dytfTrueP(dytf a);
BGBDY_API int dytfFalseP(dytf a);
BGBDY_API dytf dytfBool(int a);
BGBDY_API dytf dytfChar(int a);
BGBDY_API dytf dytfUnaryS(char *opr, dytf a);
BGBDY_API dytf dytfBinaryS(char *opr, dytf a, dytf b);
//AHSRC:base/dytf_packvec.c
BGBDY_API dytf dytfPackVec2(float x, float y);
BGBDY_API dytf dytfPackVec3(float x, float y, float z);
BGBDY_API dytf dytfPackVec4(float x, float y, float z, float w);
BGBDY_API dytf dytfPackQuat(float w, float x, float y, float z);
BGBDY_API dytf dytfPackVec2fv(float *v);
BGBDY_API dytf dytfPackVec3fv(float *v);
BGBDY_API dytf dytfPackVec4fv(float *v);
BGBDY_API dytf dytfPackQuatfv(float *v);
BGBDY_API dytf dytfPackVec2w(vec2 v);
BGBDY_API dytf dytfPackVec3w(vec3 v);
BGBDY_API dytf dytfPackVec4w(vec4 v);
BGBDY_API dytf dytfPackQuatw(quat v);
BGBDY_API void dytfPackVec2vfv(dytf p, float *fv);
BGBDY_API void dytfPackVec3vfv(dytf p, float *fv);
BGBDY_API void dytfPackVec4vfv(dytf p, float *fv);
BGBDY_API void dytfPackQuatvfv(dytf p, float *fv);
BGBDY_API vec2 dytfPackVec2v(dytf p);
BGBDY_API vec3 dytfPackVec3v(dytf p);
BGBDY_API vec4 dytfPackVec4v(dytf p);
BGBDY_API quat dytfPackQuatv(dytf p);
BGBDY_API bool dytfPackVec2p(dytf p);
BGBDY_API bool dytfPackVec3p(dytf p);
BGBDY_API bool dytfPackVec4p(dytf p);
BGBDY_API bool dytfPackQuatp(dytf p);
//AHSRC:base/dy_xml.c
BGBDY_API dyxAttr *dyxLookupAttr(dyxNode *n, char *var);
BGBDY_API dyxAttr *dyxLookupAttrNS(dyxNode *n, char *ns, char *var);
BGBDY_API dyxAttr *dyxFetchAttr(dyxNode *n, char *var);
BGBDY_API dyxAttr *dyxFetchAttrNS(dyxNode *n, char *ns, char *var);
BGBDY_API dyxAttr *dyxNewAttr();
BGBDY_API char *dyxGet(dyxNode *n, char *var);
BGBDY_API int dyxGetInt(dyxNode *n, char *var);
BGBDY_API double dyxGetFloat(dyxNode *n, char *var);
BGBDY_API char *dyxGetNS(dyxNode *n, char *ns, char *var);
BGBDY_API int dyxGetIntNS(dyxNode *n, char *ns, char *var);
BGBDY_API double dyxGetFloatNS(dyxNode *n, char *ns, char *var);
BGBDY_API void dyxSet(dyxNode *n, char *var, char *val);
BGBDY_API void dyxSetInt(dyxNode *n, char *var, int val);
BGBDY_API void dyxSetFloat(dyxNode *n, char *var, double val);
BGBDY_API void dyxSetNS(dyxNode *n, char *ns, char *var, char *val);
BGBDY_API void dyxSetIntNS(dyxNode *n, char *ns, char *var, int val);
BGBDY_API void dyxSetFloatNS(dyxNode *n, char *ns, char *var, double val);
BGBDY_API char *dyxNSURI(dyxNode *n, char *ns);
BGBDY_API char *dyxURINS(dyxNode *n, char *uri);
BGBDY_API char *dyxGetURI(dyxNode *n, char *uri, char *var);
BGBDY_API int dyxGetIntURI(dyxNode *n, char *uri, char *var);
BGBDY_API double dyxGetFloatURI(dyxNode *n, char *uri, char *var);
BGBDY_API void dyxSetURI(dyxNode *n, char *uri, char *var, char *val);
BGBDY_API void dyxSetIntURI(dyxNode *n, char *uri, char *var, int val);
BGBDY_API void dyxSetFloatURI(dyxNode *n, char *uri, char *var, double val);
BGBDY_API dyxNode *dyxNew(char *tag);
BGBDY_API dyxNode *dyxNewNS(char *ns, char *tag);
BGBDY_API dyxNode *dyxNewText(char *text);
BGBDY_API void dyxAdd(dyxNode *parent, dyxNode *child);
BGBDY_API dyxNode *dyxAddEnd(dyxNode *lst, dyxNode *n);
BGBDY_API dyxNode *dyxNew1(char *tag, dyxNode *a);
BGBDY_API dyxNode *dyxNew2(char *tag, dyxNode *a, dyxNode *b);
BGBDY_API dyxNode *dyxNew3(char *tag, dyxNode *a, dyxNode *b, dyxNode *c);
BGBDY_API dyxNode *dyxNew4(char *tag, dyxNode *a, dyxNode *b, dyxNode *c, dyxNode *d);
BGBDY_API dyxNode *dyxNew1NS(char *ns, char *tag, dyxNode *a);
BGBDY_API dyxNode *dyxNew2NS(char *ns, char *tag, dyxNode *a, dyxNode *b);
BGBDY_API dyxNode *dyxNew3NS(char *ns, char *tag, dyxNode *a, dyxNode *b, dyxNode *c);
BGBDY_API dyxNode *dyxNew4NS(char *ns, char *tag,dyxNode *a, dyxNode *b, dyxNode *c, dyxNode *d);
BGBDY_API int dyxNodeP(dyxNode *n);
BGBDY_API int dyxTextP(dyxNode *n);
BGBDY_API int dyxLeafP(dyxNode *n);
BGBDY_API int dyxChildP(dyxNode *n);
BGBDY_API dyxNode *dyxNext(dyxNode *n);
BGBDY_API dyxNode *dyxPrev(dyxNode *n);
BGBDY_API dyxNode *dyxParent(dyxNode *n);
BGBDY_API dyxNode *dyxChild(dyxNode *n);
BGBDY_API char *dyxNS(dyxNode *n);
BGBDY_API char *dyxURI(dyxNode *n);
BGBDY_API char *dyxTag(dyxNode *n);
BGBDY_API char *dyxText(dyxNode *n);
BGBDY_API void dyxSetTag(dyxNode *n, char *s);
BGBDY_API int dyxTagIsP(dyxNode *n, char *str);
BGBDY_API int dyxAttrIsP(dyxNode *n, char *var, char *val);
BGBDY_API int dyxTagAttrIsP(dyxNode *n, char *tag, char *var, char *val);
BGBDY_API dyxNode *dyxFindNextTag(dyxNode *last, char *tag);
BGBDY_API dyxNode *dyxFindNextAttr(dyxNode *last, char *var, char *val);
BGBDY_API dyxNode *dyxFindNextTagAttr(dyxNode *last,char *tag, char *var, char *val);
BGBDY_API dyxNode *dyxFindTag(dyxNode *parent, char *tag);
BGBDY_API dyxNode *dyxFindAttr(dyxNode *parent, char *var, char *val);
BGBDY_API dyxNode *dyxFindTagAttr(dyxNode *parent, char *tag, char *var, char *val);
BGBDY_API dyxNode *dyxFetch(dyxNode *parent, char *tag);
BGBDY_API dyxNode *dyxClone(dyxNode *n);
BGBDY_API dyxNode *dyxCloneList(dyxNode *n);
BGBDY_API void dyxUnlink(dyxNode *n);
BGBDY_API void dyxFree(dyxNode *n);
BGBDY_API void dyxFreeList(dyxNode *n);
//AHSRC:base/dy_print.c
BGBDY_API void dyPrintDycObject(dycObject obj, int ind,void (*pb)(void *p, char *b), void *ob);
BGBDY_API void dyPrintBuf(dyt n, int ind,void (*pb)(void *p, char *b), void *ob);
BGBDY_API void dyDumpFD(FILE *fd, dyt n);
BGBDY_API void dyPrintFD(FILE *fd, dyt n);
BGBDY_API void dyDumpGCP(dyt n);
BGBDY_API void dyPrintGCP(dyt n);
BGBDY_API void dyDumpLGCP(dyt n);
BGBDY_API void dyPrintLGCP(dyt n);
BGBDY_API char *dyDumpStr(char *buf, dyt n);
BGBDY_API char *dyPrintStr(char *buf, dyt n);
BGBDY_API void dyPrint(dyt n);
BGBDY_API void dyDPrint(dyt n);
//AHSRC:base/dy_vli.c
BGBDY_API int BGBDY_PeekChar(char **str);
BGBDY_API int BGBDY_ParseChar(char **str);
BGBDY_API int BGBDY_EmitChar(char **str, int j);
BGBDY_API char *BGBDY_NextChar(char *str);
BGBDY_API char *BGBDY_PriorChar(char *str);
BGBDY_API byte *BGBDY_EncodeOpcode(byte *ip, int n);
BGBDY_API byte *BGBDY_EncVLI(byte *ip, s64 i);
BGBDY_API byte *BGBDY_EncSVLI(byte *ip, s64 i);
BGBDY_API s64 BGBDY_DecVLI(byte **rip);
BGBDY_API s64 BGBDY_DecSVLI(byte **rip);
BGBDY_API byte *BGBDY_EncS16(byte *ip, s16 i);
BGBDY_API byte *BGBDY_EncS32(byte *ip, s32 i);
BGBDY_API byte *BGBDY_EncS64(byte *ip, s64 i);
BGBDY_API byte *BGBDY_EncU16(byte *ip, u16 i);
BGBDY_API byte *BGBDY_EncU32(byte *ip, u32 i);
BGBDY_API byte *BGBDY_EncU64(byte *ip, u64 i);
BGBDY_API byte *BGBDY_EncF32(byte *ip, f32 i);
BGBDY_API byte *BGBDY_EncF64(byte *ip, f64 i);
BGBDY_API byte BGBDY_Transpose4(byte val);
BGBDY_API byte BGBDY_Transpose8(byte val);
BGBDY_API u16 BGBDY_Transpose16(u16 val);
BGBDY_API u32 BGBDY_Transpose32(u32 val);
BGBDY_API u64 BGBDY_Transpose64(u64 val);
BGBDY_API byte *BGBDY_EncVLF(byte *ip, f64 val);
BGBDY_API u32 BGBDY_DecU32(byte **rip);
BGBDY_API s32 BGBDY_DecS32(byte **rip);
BGBDY_API u64 BGBDY_DecU64(byte **rip);
BGBDY_API s64 BGBDY_DecS64(byte **rip);
BGBDY_API s128 BGBDY_DecS128(byte **rip);
BGBDY_API f32 BGBDY_DecFloat32(byte **rip);
BGBDY_API f64 BGBDY_DecFloat64(byte **rip);
BGBDY_API f128 BGBDY_DecFloat128(byte **rip);
//AHSRC:base/dys_binenc.c
BGBDY_API void dysBinaryEncodeBytes(dysObjectStream ctx, byte *data, int sz);
BGBDY_API void dysBinaryEncodeByte(dysObjectStream ctx, int value);
BGBDY_API void dysBinaryEncodeS16(dysObjectStream ctx, int value);
BGBDY_API void dysBinaryEncodeS32(dysObjectStream ctx, int value);
BGBDY_API void dysBinaryEncodeString(dysObjectStream ctx, char *str);
BGBDY_API void dysBinaryEncodeStringZ(dysObjectStream ctx, char *str);
BGBDY_API void dysBinaryEncodeVLI(dysObjectStream ctx, s64 value);
BGBDY_API void dysBinaryEncodeSVLI(dysObjectStream ctx, s64 value);
BGBDY_API void dysBinaryEncodeVLF(dysObjectStream ctx, f64 value);
BGBDY_API void dysBinaryEncodeValue(dysObjectStream ctx, dyt value);
BGBDY_API void dysBinaryEncodeInt(dysObjectStream ctx, s64 value);
BGBDY_API void dysBinaryEncodeUInt(dysObjectStream ctx, s64 value);
BGBDY_API void dysBinaryEncodeF32(dysObjectStream ctx, float value);
BGBDY_API void dysBinaryEncodeF64(dysObjectStream ctx, double value);
BGBDY_API dysObjectStream dysNewObjectStream();
BGBDY_API void dysFreeObjectStream(dysObjectStream ctx);
BGBDY_API int dysEncodeBinaryBuffer(byte *buf, int msz, dyt value);
//AHSRC:base/dys_bindec.c
BGBDY_API dyt dysBinaryGetValue(dysObjectStream ctx);
BGBDY_API char *dysBinaryGetType(dysObjectStream ctx);
BGBDY_API int dysBinaryGetSize(dysObjectStream ctx);
BGBDY_API int dysBinaryDecodeByte(dysObjectStream ctx);
BGBDY_API int dysBinaryDecodeBytes(dysObjectStream ctx, byte *buf, int sz);
BGBDY_API int dysBinaryDecodeS16(dysObjectStream ctx);
BGBDY_API int dysBinaryDecodeS32(dysObjectStream ctx);
BGBDY_API s64 dysBinaryDecodeVLI(dysObjectStream ctx);
BGBDY_API s64 dysBinaryDecodeSVLI(dysObjectStream ctx);
BGBDY_API f32 dysBinaryDecodeF32(dysObjectStream ctx);
BGBDY_API f64 dysBinaryDecodeF64(dysObjectStream ctx);
BGBDY_API dyt dysBinaryDecodeValue(dysObjectStream ctx);
BGBDY_API dyt dysDecodeBinaryBuffer(byte *buf, int sz);
//AHSRC:base/dys_parse.c
BGBDY_API dysReadStream dysNewReadStreamBuf(char *buf);
BGBDY_API void dysFreeReadStream(dysReadStream strm);
BGBDY_API dysReadPos dysGetPos(dysReadStream strm);
BGBDY_API void dysSetPos(dysReadStream strm, dysReadPos pos);
BGBDY_API int dysPeekChar(dysReadStream strm);
BGBDY_API int dysReadChar(dysReadStream strm);
BGBDY_API int dysPeekCharIdx(dysReadStream strm, int idx);
BGBDY_API int dysPeekNibble(dysReadStream strm);
BGBDY_API int dysReadNibble(dysReadStream strm);
BGBDY_API int dysReadHex(dysReadStream strm);
BGBDY_API int dysReadHex8(dysReadStream strm);
BGBDY_API int dysReadHex16(dysReadStream strm);
BGBDY_API int dysReadHex32(dysReadStream strm);
BGBDY_API int dysParseEatWhite(dysReadStream strm);
BGBDY_API int dysParseSpecialP(dysReadStream strm);
BGBDY_API char *dysParseToken(dysReadStream strm, int *ty);
BGBDY_API char *dysPeekToken(dysReadStream strm, int *ty);
BGBDY_API dyt dysParseList(dysReadStream strm, int ind);
BGBDY_API dyt dysParseItem(dysReadStream strm, int ind);
BGBDY_API dyt dysParseFromString(char *s);
BGBDY_API dyt dysParseMultiFromString(char *s);
//AHSRC:base/dys_print.c
BGBDY_API void dysPrintf(dysPrintStream strm, char *str, ...);
BGBDY_API void dysPrintItem(dysPrintStream strm, dyt obj);
BGBDY_API void dysPrintFlatten(dysPrintStream strm, dyt obj);
BGBDY_API dysPrintStream dysNewStreamFD(FILE *fd);
BGBDY_API dysPrintStream dysNewStreamBuf(char **buf);
BGBDY_API dysPrintStream dysNewStreamGCP();
BGBDY_API dysPrintStream dysNewStreamLGCP();
BGBDY_API void dysDestroyStream(dysPrintStream strm);
BGBDY_API dysPrintStream dysCloneStream(dysPrintStream strm);
BGBDY_API void dysDumpFD(FILE *fd, dyt n);
BGBDY_API void dysPrintFD(FILE *fd, dyt n);
BGBDY_API void dysPrintGCP(dyt n);
BGBDY_API void dysPrintLGCP(dyt n);
BGBDY_API char *dysDumpStr(char *buf, dyt n);
BGBDY_API char *dysPrintStr(char *buf, dyt n);
BGBDY_API void dysPrint(dyt n);
BGBDY_API void dysPrintln(dyt n);
//AHSRC:base/dyx_parse.c
BGBDY_API int dyxParseEatWhite(dysReadStream strm);
BGBDY_API int dyxParseSpecialP(dysReadStream strm);
BGBDY_API int dyxParseContSpecialP(dysReadStream strm);
BGBDY_API char *dyxParseToken(dysReadStream strm, int *ty);
BGBDY_API char *dyxPeekToken(dysReadStream strm, int *ty);
BGBDY_API char *dyxParseText(dysReadStream strm);
BGBDY_API dyxAttr *dyxParseOpts(dysReadStream strm);
BGBDY_API dyxNode *dyxParseTag(dysReadStream strm, int *rgrp);
BGBDY_API dyxNode *dyxParseExprR(dysReadStream strm, int *rgrp);
BGBDY_API dyxNode *dyxParseExpr(dysReadStream strm);
BGBDY_API dyxNode *dyxParseExprStr(char *str);
BGBDY_API dyxNode *dyxParseExprSBuf(char **str);
BGBDY_API dyxNode *dyxParseTagSBuf(char **str);
BGBDY_API char *dyxParseEatWhiteStr(char *str);
//AHSRC:base/dyx_print.c
BGBDY_API void dyxPrintBuf(dyxNode *node, int ind,void (*pb)(void *p, char *b), void *ob);
BGBDY_API void dyxPrintStrm(dysPrintStream strm, dyxNode *node);
BGBDY_API void dyxDumpFD(FILE *fd, dyxNode *node);
BGBDY_API void dyxPrintFD(FILE *fd, dyxNode *node);
BGBDY_API void dyxDumpVF(VFILE *fd, dyxNode *node);
BGBDY_API void dyxPrintVF(VFILE *fd, dyxNode *node);
BGBDY_API char *dyxDumpStr(char *buf, dyxNode *node);
BGBDY_API char *dyxPrintStr(char *buf, dyxNode *node);
BGBDY_API char *dyxPrintTextStr(char *buf, char *text);
BGBDY_API void dyxPrint(dyxNode *node);
//AHSRC:base/dyx_sbxe.c
BGBDY_API int DYX_SBXE_WriteNodeList(byte *buf, dyxNode *expr);
BGBDY_API dyxNode *DYX_SBXE_ReadNodeList(byte *buf, int sz);
//AHSRC:base/dyx_print_ze.c
BGBDY_API void dyxPrintZeBuf(dyxNode *node, int ind,void (*pb)(void *p, char *b), void *ob);
BGBDY_API void dyxPrintZeStrm(dysPrintStream strm, dyxNode *node);
BGBDY_API void dyxDumpZeFD(FILE *fd, dyxNode *node);
BGBDY_API void dyxPrintZeFD(FILE *fd, dyxNode *node);
BGBDY_API void dyxDumpZeVF(VFILE *fd, dyxNode *node);
BGBDY_API void dyxPrintZeVF(VFILE *fd, dyxNode *node);
BGBDY_API char *dyxDumpZeStr(char *buf, dyxNode *node);
BGBDY_API char *dyxPrintZeStr(char *buf, dyxNode *node);
BGBDY_API char *dyxPrintZeTextStr(char *buf, char *text);
BGBDY_API void dyxPrintZe(dyxNode *node);
//AHSRC:base/dysh_console.c
//AHSRC:base/dysh_shell.c
BGBDY_API int DYSH_Register(char *name, char *desc,int (*func)(dyshShell shell, char **args));
BGBDY_API int dyshRegisterCommand(char *name, char *desc,int (*func)(dyshShell shell, char **args));
BGBDY_API dyshShell dyshNewShellDefault(void);
BGBDY_API void dyshPuts(dyshShell shell, char *str);
BGBDY_API void dyshPrintv(dyshShell shell, char *str, va_list lst);
BGBDY_API void dyshPrintf(dyshShell shell, char *str, ...);
BGBDY_API void dyshAddHistory(dyshShell shell, char *str);
BGBDY_API char *dyshGetHistory(dyshShell shell, int idx);
BGBDY_API int dyshExecuteCmd(dyshShell shell, char *str);
BGBDY_API int dyshExecuteScript(dyshShell shell, char *str);
BGBDY_API char *dyshComplete(dyshShell shell, char *str);
BGBDY_API int dyshExecuteScriptFile(dyshShell shell, char *name);
//AHSRC:base/bgbdy_api.c
BGBDY_API void dy_init(void *base);
BGBDY_API void dy_init2(int (*fcn)());
BGBDY_API void dyPuts(char *str);
BGBDY_API void dyPrintf(char *str, ...);
BGBDY_API void dyDPuts(char *str);
BGBDY_API void dyDPrintf(char *str, ...);
BGBDY_API void dyAddLogHook(void (*fcn)(char *str));
BGBDY_API void dyAddTypeHook(char *(*fcn)(void *p));
BGBDY_API char *dygettype(dyt p);
BGBDY_API int dytypep(dyt p, char *ty);
BGBDY_API dyt dybool(int v);
BGBDY_API dyt dyint(int v);
BGBDY_API dyt dylong(s64 v);
BGBDY_API dyt dylonglong(s64 v);
BGBDY_API dyt dyfixint(int v);
BGBDY_API dyt dyfixlong(s64 v);
BGBDY_API dyt dychar(int v);
BGBDY_API dyt dyflonum(float v);
BGBDY_API dyt dyfloat(float v);
BGBDY_API dyt dydouble(double v);
BGBDY_API dyt dyfcomplex(fcomplex v);
BGBDY_API dyt dydcomplex(dcomplex v);
BGBDY_API dyt dycomplex2(double r, double i);
BGBDY_API dyt dystring(char *s);
BGBDY_API char *dystrdup(char *s);
BGBDY_API char *dystrsym(char *s);
BGBDY_API char *dystrkey(char *s);
BGBDY_API dyt dysymbol(char *s);
BGBDY_API dyt dykeyword(char *s);
BGBDY_API dyt dysym(char *s);
BGBDY_API dyt dyksym(char *s);
BGBDY_API dyt dyFixedSymbol(char *s);
BGBDY_API dyt dywstring(u16 *s);
BGBDY_API dyt dywstring2(char *str);
BGBDY_API dyt dyustring(char *s);
BGBDY_API dyt dyusym(char *s);
BGBDY_API int dyboolp(dyt p);
BGBDY_API int dyfixintp(dyt p);
BGBDY_API int dyintp(dyt p);
BGBDY_API int dylongp(dyt p);
BGBDY_API int dylonglongp(dyt p);
BGBDY_API int dylongx2p(dyt p);
BGBDY_API int dycharp(dyt p);
BGBDY_API int dyflonump(dyt p);
BGBDY_API int dyfloatp(dyt p);
BGBDY_API int dydoublep(dyt p);
BGBDY_API int dyfixrealp(dyt p);
BGBDY_API int dyrealp(dyt p);
BGBDY_API int dyrealx2p(dyt p);
BGBDY_API int dyfcomplexp(dyt p);
BGBDY_API int dydcomplexp(dyt p);
BGBDY_API int dycomplexp(dyt p);
BGBDY_API int dySmallComplexp(dyt p);
BGBDY_API int dySmallQuatp(dyt p);
BGBDY_API int dystringp(dyt p);
BGBDY_API int dysymbolp(dyt p);
BGBDY_API int dykeywordp(dyt p);
BGBDY_API int dywstringp(dyt p);
BGBDY_API int dyustringp(dyt p);
BGBDY_API int dyusymp(dyt p);
BGBDY_API char *dystringv(dyt p);
BGBDY_API char *dysymbolv(dyt p);
BGBDY_API char *dysymv(dyt p);
BGBDY_API u16 *dywstringv(dyt p);
BGBDY_API int dyintv(dyt p);
BGBDY_API s64 dylongv(dyt p);
BGBDY_API s64 dylonglongv(dyt p);
BGBDY_API float dyfloatv(dyt p);
BGBDY_API double dydoublev(dyt p);
BGBDY_API double dyrealv(dyt p);
BGBDY_API dcomplex dycomplexv(dyt p);
BGBDY_API fcomplex dyfcomplexv(dyt p);
BGBDY_API dcomplex dydcomplexv(dyt p);
BGBDY_API double dycreal(dyt p);
BGBDY_API double dycimag(dyt p);
BGBDY_API dyt dyvec2(float x, float y);
BGBDY_API dyt dyvec3(float x, float y, float z);
BGBDY_API dyt dyvec4(float x, float y, float z, float w);
BGBDY_API dyt dyquat(float w, float x, float y, float z);
BGBDY_API dyt dyvec2d(double x, double y);
BGBDY_API dyt dyvec3d(double x, double y, double z);
BGBDY_API dyt dyvec4d(double x, double y, double z, double w);
BGBDY_API dyt dyquatd(double w, double x, double y, double z);
BGBDY_API dyt dyvec2fv(float *v);
BGBDY_API dyt dyvec3fv(float *v);
BGBDY_API dyt dyvec4fv(float *v);
BGBDY_API dyt dyquatfv(float *v);
BGBDY_API dyt dyvec2dv(double *v);
BGBDY_API dyt dyvec3dv(double *v);
BGBDY_API dyt dyvec4dv(double *v);
BGBDY_API dyt dyquatdv(double *v);
BGBDY_API dyt dywvec2(vec2 v);
BGBDY_API dyt dywvec3(vec3 v);
BGBDY_API dyt dywvec4(vec4 v);
BGBDY_API dyt dywquat(quat v);
BGBDY_API dyt dywvec2d(vec2d v);
BGBDY_API dyt dywvec3d(vec3d v);
BGBDY_API dyt dywvec4d(vec4d v);
BGBDY_API dyt dywquatd(quatd v);
BGBDY_API int dyvec2p(dyt p);
BGBDY_API int dyvec3p(dyt p);
BGBDY_API int dyvec4p(dyt p);
BGBDY_API int dyquatp(dyt p);
BGBDY_API int dyvec2dp(dyt p);
BGBDY_API int dyvec3dp(dyt p);
BGBDY_API int dyvec4dp(dyt p);
BGBDY_API int dyquatdp(dyt p);
BGBDY_API int dyvec2sdp(dyt p);
BGBDY_API int dyvec3sdp(dyt p);
BGBDY_API int dyvec4sdp(dyt p);
BGBDY_API int dyquatsdp(dyt p);
BGBDY_API void dyvecv2fv(dyt p, float *v);
BGBDY_API void dyvecv3fv(dyt p, float *v);
BGBDY_API void dyvecv4fv(dyt p, float *v);
BGBDY_API void dyquatvfv(dyt p, float *v);
BGBDY_API void dyvecv2dv(dyt p, double *v);
BGBDY_API void dyvecv3dv(dyt p, double *v);
BGBDY_API void dyvecv4dv(dyt p, double *v);
BGBDY_API void dyquatvdv(dyt p, double *v);
BGBDY_API vec2 dyvec2v(dyt p);
BGBDY_API vec3 dyvec3v(dyt p);
BGBDY_API vec4 dyvec4v(dyt p);
BGBDY_API quat dyquatv(dyt p);
BGBDY_API vec2d dyvec2vd(dyt p);
BGBDY_API vec3d dyvec3vd(dyt p);
BGBDY_API vec4d dyvec4vd(dyt p);
BGBDY_API quatd dyquatvd(dyt p);
BGBDY_API dyt dyattr(dyt var, dyt val);
BGBDY_API int dyattrp(dyt p);
BGBDY_API dyt dyattrvar(dyt p);
BGBDY_API dyt dyattrval(dyt p);
BGBDY_API dyt dyhash(int cnt);
BGBDY_API int dyhashp(dyt p);
BGBDY_API dyt dyhashget(dyt p, char *str);
BGBDY_API dyt dyhashset(dyt obj, char *var, dyt val);
//AHSRC:bgal/bgal_main.c
BGBDY_API bgalMember *bgalBreed(bgalMember *obja, bgalMember *objb);
BGBDY_API double bgalTest(bgalMember *obj, void *data);
BGBDY_API void bgalStepTest(bgalContext *ctx, void *data);
BGBDY_API void bgalStepSelect(bgalContext *ctx);
BGBDY_API void bgalStepBreed(bgalContext *ctx);
BGBDY_API void bgalStepStatus(bgalContext *ctx);
BGBDY_API void bgalStep(bgalContext *ctx);
BGBDY_API void bgalSetup(bgalContext *ctx, void *data);
BGBDY_API void bgalEvolve(bgalContext *ctx, void *data);
BGBDY_API bgalMember *bgalAllocMember(bgalContext *ctx);
BGBDY_API void bgalFreeMember(bgalMember *obj);
BGBDY_API void bgalSterilize(bgalContext *ctx);
BGBDY_API bgalMember *bgalPickMember(bgalContext *ctx, bgalMember *skip);
BGBDY_API void bgalAddData(bgalContext *ctx, void *data);
BGBDY_API bgalMember *bgal_alloc_default(bgalContext *ctx);
BGBDY_API bgalContext *bgalNewGenCtx(int n_gen, int sz_pop, int n_keep);
BGBDY_API bgalContext *bgalNewGenMinCtx(int sz_vec, int n_gen, int sz_pop, int n_keep);
BGBDY_API bgalContext *bgalNewGenMaxCtx(int sz_vec, int n_gen, int sz_pop, int n_keep);
BGBDY_API bgalContext *bgalNewGenBitsMinCtx(int sz_bits,int n_gen, int sz_pop, int n_keep);
BGBDY_API bgalContext *bgalNewGenBitsMaxCtx(int sz_bits,int n_gen, int sz_pop, int n_keep);
BGBDY_API bgalContext *bgalNewGenProgMinCtx(int sz_vec, int sz_bits, int sz_prog,int n_gen, int sz_pop, int n_keep);
BGBDY_API bgalContext *bgalNewGenProgMaxCtx(int sz_vec, int sz_bits, int sz_prog,int n_gen, int sz_pop, int n_keep);
//AHSRC:bgal/bgal_interp.c
BGBDY_API int BGAL_Gray(int i);
BGBDY_API int BGAL_UnGray(int i);
BGBDY_API int bgalEval(bgalMember *obj, float *iv, int ni, float *ov, int *rno);
//AHSRC:bgal/bgal_neuron.c
BGBDY_API bgalNeuronType *bgalLookupNeuronType(char *name);
BGBDY_API bgalNeuronType *bgalGetNeuronType(char *name);
BGBDY_API bgalNeuron *bgalAllocNeuron(char *type);
BGBDY_API bgalNeuronLink *bgalLookupNeuronLink(bgalNeuron *from, bgalNeuron *to);
BGBDY_API bgalNeuronLink *bgalLinkNeurons(bgalNeuron *src, bgalNeuron *dst);
BGBDY_API void bgalNeuronFire(bgalNeuron *node);
