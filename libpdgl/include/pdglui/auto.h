//AHSRC:gui2/build.c
PDGLUI_API void PDGLUI_FgColor3I(int r, int g, int b);
PDGLUI_API void PDGLUI_BgColor3I(int r, int g, int b);
PDGLUI_API void PDGLUI_WbgColor3I(int r, int g, int b);
PDGLUI_API char *PDGLUI_BeginForm(char *type, char *id);
PDGLUI_API void PDGLUI_EndForm();
PDGLUI_API void PDGLUI_FormPropertyS(char *name, char *value);
PDGLUI_API void PDGLUI_FormPropertyI(char *name, int value);
PDGLUI_API void PDGLUI_FormProperty2I(char *name, int x, int y);
PDGLUI_API char *PDGLUI_BeginWidget(char *type, char *id);
PDGLUI_API void PDGLUI_EndWidget();
PDGLUI_API void PDGLUI_WidgetPropertyS(char *name, char *value);
PDGLUI_API void PDGLUI_WidgetPropertyI(char *name, int value);
PDGLUI_API void PDGLUI_WidgetProperty2I(char *name, int x, int y);
PDGLUI_API void PDGLUI_WidgetProperty3I(char *name, int x, int y, int z);
PDGLUI_API void PDGLUI_Item(char *name, char *value);
//AHSRC:gui2/forms.c
PDGLUI_API PDGLUI_Event *PDGLUI_NewEvent();
PDGLUI_API void PDGLUI_ReleaseEvent(PDGLUI_Event *ev);
PDGLUI_API PDGLUI_Event *PDGLUI_Forms_AddEvent(PDGLUI_Form *form,char *widget, char *event);
PDGLUI_API PDGLUI_Form *PDGLUI_Forms_Lookup(char *name);
PDGLUI_API PDGLUI_Form *PDGLUI_Forms_Unlink(char *name);
PDGLUI_API int PDGLUI_Forms_HandleInput(PDGLUI_InputState *state);
PDGLUI_API int PDGLUI_Forms_RenderColor(int c, int a);
PDGLUI_API int PDGLUI_Forms_RenderDarkColor(int c, int a);
PDGLUI_API int PDGLUI_Forms_RenderLightColor(int c, int a);
PDGLUI_API int PDGLUI_Forms_CalcColor(int c, int *rr, int *gr, int *br);
PDGLUI_API int PDGLUI_Forms_CalcDarkColor(int c, int *rr, int *gr, int *br);
PDGLUI_API int PDGLUI_Forms_CalcLightColor(int c, int *rr, int *gr, int *br);
PDGLUI_API int PDGLUI_Forms_Render(PDGLUI_InputState *state);
PDGLUI_API int PDGLUI_Forms_UpdateState(PDGLUI_InputState *state,int mx, int my, int mb, unsigned short *keys);
PDGLUI_API int PDGLUI_KeyDown(int key);
PDGLUI_API PDGLUI_InputState *PDGLUI_GetState();
PDGLUI_API int PDGLUI_Forms_Init();
PDGLUI_API void PDGLUI_Frame();
PDGLUI_API int PDGLUI_HasFocus();
PDGLUI_API void PDGLUI_NextEvent(char *form);
PDGLUI_API int PDGLUI_HasEvent(char *form);
PDGLUI_API int PDGLUI_GetEventType(char *form);
PDGLUI_API char *PDGLUI_GetEventName(char *form);
PDGLUI_API char *PDGLUI_GetEventWidget(char *form);
PDGLUI_API int PDGLUI_GetEventIVal(char *form);
PDGLUI_API char *PDGLUI_GetEventSVal(char *form);
PDGLUI_API char *PDGLUI_GetWidgetPropertyS(char *form, char *id, char *var);
PDGLUI_API int PDGLUI_GetWidgetPropertyI(char *form, char *id, char *var);
PDGLUI_API void PDGLUI_SetWidgetPropertyS(char *form, char *id, char *var, char *val);
PDGLUI_API void PDGLUI_SetWidgetPropertyI(char *form, char *id, char *var, int val);
PDGLUI_API void PDGLUI_SetWidgetProperty2I(char *form, char *id, char *var, int x, int y);
PDGLUI_API void PDGLUI_AddItem(char *form, char *id, char *var, char *val);
PDGLUI_API void PDGLUI_SetItem(char *form, char *id, char *var, char *val);
PDGLUI_API void PDGLUI_ClearItems(char *form, char *id);
PDGLUI_API void PDGLUI_Init();
//AHSRC:gui2/menus.c
PDGLUI_API int PDGLUI_BeginMenu(char *name);
PDGLUI_API void PDGLUI_EndMenu();
PDGLUI_API int PDGLUI_BeginSubMenu(char *name);
PDGLUI_API void PDGLUI_EndSubMenu();
PDGLUI_API void PDGLUI_MenuItem(char *id, char *name);
PDGLUI_API void PDGLUI_MenuUpdateItems(PDGLUI_Menu *menu);
PDGLUI_API PDGLUI_MenuItemT *PDGLUI_MenuAddItem(PDGLUI_Menu *menu, char *id, char *name);
PDGLUI_API void PDGLUI_Menus_ShowSubMenu(PDGLUI_Menu *tmp, int ox, int oy);
PDGLUI_API void PDGLUI_ShowMenu(char *name, int ox, int oy);
PDGLUI_API int PDGLUI_Menus_IsSubMenu(PDGLUI_Menu *tmp, PDGLUI_Menu *tmp2);
PDGLUI_API int PDGLUI_Menus_IsMenuShown(PDGLUI_Menu *tmp);
PDGLUI_API int PDGLUI_MenuShowP(char *name);
PDGLUI_API void PDGLUI_SetMenuSelection(char *name, char *id);
PDGLUI_API char *PDGLUI_GetMenuSelection(char *name);
PDGLUI_API void PDGLUI_MenuMakeHidden(PDGLUI_Menu *menu);
PDGLUI_API void PDGLUI_HideMenu(char *name);
PDGLUI_API void PDGLUI_SetMenuItemName(char *name, char *id, char *title);
PDGLUI_API void PDGLUI_Menus_Render(PDGLUI_InputState *state);
//AHSRC:gui2/textarea.c
char *PDGLUI_TextArea_Flatten(PDGLUI_Widget *obj);
char *PDGLUI_TextArea_FlattenSelection(PDGLUI_Widget *obj);
int PDGLUI_TextArea_DeleteSelection(PDGLUI_Widget *obj);
int PDGLUI_TextArea_Insert(PDGLUI_Widget *obj, int *px, int *py, char *ks);
int PDGLUI_TextArea_HandleSelect(PDGLUI_Widget *obj);
int PDGLUI_TextArea_HandleInput2(int ox, int oy,PDGLUI_InputState *state, PDGLUI_Form *form, PDGLUI_Widget *obj);
int PDGLUI_TextArea_HandleInput(PDGLUI_Widget *obj,PDGLUI_InputState *state, int ox, int oy);
int PDGLUI_TextArea_Render(PDGLUI_Widget *obj, int ox, int oy);
PDGLUI_Widget *PDGLUI_TextArea_Begin(char *type, char *id);
int PDGLUI_TextArea_End(PDGLUI_Widget *tmp);
char *PDGLUI_TextArea_GetPropertyS(PDGLUI_Widget *obj, char *var);
int PDGLUI_TextArea_SetPropertyS(PDGLUI_Widget *obj, char *var, char *val);
int PDGLUI_TextArea_GetPropertyI(PDGLUI_Widget *obj, char *var);
int PDGLUI_TextArea_SetPropertyI(PDGLUI_Widget *obj, char *var, int val);
int PDGLUI_TextArea_Init();
//AHSRC:gui2/message.c
PDGLUI_API PDGLUI_Widget *PDGLUI_Forms_GetWidget(char *form, char *widget);
PDGLUI_API char *PDGLUI_Forms_GetPropertyS(char *form, char *widget, char *var);
PDGLUI_API int PDGLUI_Forms_SetPropertyS(char *form, char *widget, char *var, char *val);
PDGLUI_API int PDGLUI_Forms_GetPropertyI(char *form, char *widget, char *var);
PDGLUI_API int PDGLUI_Forms_SetPropertyI(char *form, char *widget, char *var, int val);
//AHSRC:gui2/widget.c
PDGLUI_WidgetType *PDGLUI_Widget_RegisterType(PDGLUI_WidgetType *tmp);
PDGLUI_WidgetType *PDGLUI_Widget_LookupType(char *name);
PDGLUI_Event *PDGLUI_Widget_AddEvent(PDGLUI_Widget *obj, char *event);
void PDGLUI_Widget_SetEventIVal(int val);
void PDGLUI_Widget_SetEventSVal(char *val);
int PDGLUI_Widget_BindForm(PDGLUI_Widget *obj, PDGLUI_Form *form);
int PDGLUI_Widget_HandleInput(PDGLUI_Widget *obj,PDGLUI_InputState *state, int ox, int oy);
int PDGLUI_Widget_Render(PDGLUI_Widget *obj, int ox, int oy);
int PDGLUI_Widget_SizeWidget(PDGLUI_Widget *obj);
int PDGLUI_Widget_CheckFocus(int ox, int oy,PDGLUI_InputState *state, PDGLUI_Widget *obj);
int PDGLUI_Widget_CheckClick(int ox, int oy,PDGLUI_InputState *state, PDGLUI_Widget *obj);
int PDGLUI_Widget_CheckClicked(int ox, int oy,PDGLUI_InputState *state, PDGLUI_Widget *obj);
int PDGLUI_Widget_CheckClickedBox(int ox, int oy, int xs, int ys,PDGLUI_InputState *state);
int PDGLUI_Widget_CheckDragBox(int ox, int oy, int xs, int ys,PDGLUI_InputState *state);
int PDGLUI_Widget_CheckMClick(int ox, int oy,PDGLUI_InputState *state, PDGLUI_Widget *obj);
int PDGLUI_Widget_CheckMClicked(int ox, int oy,PDGLUI_InputState *state, PDGLUI_Widget *obj);
int PDGLUI_Widget_CheckMClickedBox(int ox, int oy, int xs, int ys,PDGLUI_InputState *state);
int PDGLUI_Widget_CheckMDragBox(int ox, int oy, int xs, int ys,PDGLUI_InputState *state);
int PDGLUI_Widget_CheckRClick(int ox, int oy,PDGLUI_InputState *state, PDGLUI_Widget *obj);
int PDGLUI_Widget_CheckRClicked(int ox, int oy,PDGLUI_InputState *state, PDGLUI_Widget *obj);
int PDGLUI_Widget_CheckRClickedBox(int ox, int oy, int xs, int ys,PDGLUI_InputState *state);
int PDGLUI_Widget_CheckRDragBox(int ox, int oy, int xs, int ys,PDGLUI_InputState *state);
int PDGLUI_Widget_CheckHKey(PDGLUI_InputState *state, int key);
int PDGLUI_Widget_CheckHKeyString(PDGLUI_InputState *state, char *str);
PDGLUI_Widget *PDGLUI_Widget_FindName(PDGLUI_Widget *parent, char *name);
PDGLUI_Widget *PDGLUI_Widget_LookupID(PDGLUI_Widget *parent, char *name);
int PDGLUI_Widget_Render3DBorder(int ox, int oy, int xs, int ys,int wbgcolor, int ind);
int PDGLUI_Widget_Render3DBox(int ox, int oy, int xs, int ys,int wbgcolor, int ind);
int PDGLUI_Widget_RenderLight3DBorder(int ox, int oy, int xs, int ys,int wbgcolor, int ind);
int PDGLUI_Widget_RenderContent(int ox, int oy, int xs, int ys,dyxNode *body, int fgc);
int PDGLUI_Widget_RSizeWidget(PDGLUI_Widget *obj);
int PDGLUI_Widget_SizeContent(dyxNode *body, int *xs, int *ys);
int PDGLUI_Widget_SizeText(char *str, int *xs, int *ys);
int PDGLUI_Widget_Init();
//AHSRC:gui2/widget_input.c
int PDGLUI_WidgetInput_Render(PDGLUI_Widget *obj, int ox, int oy);
int PDGLUI_WidgetInput_SizeWidget(PDGLUI_Widget *obj);
int PDGLUI_WidgetInput_HandleInput(PDGLUI_Widget *obj,PDGLUI_InputState *state, int ox, int oy);
int PDGLUI_WidgetInput_SendMessage(PDGLUI_Widget *obj, char *msg,int nargs, void **args);
int PDGLUI_WidgetInput_SetProperty(PDGLUI_Widget *obj,char *slot, void *value);
PDGLUI_Widget *PDGLUI_WidgetInput_Begin(char *type, char *id);
int PDGLUI_WidgetInput_End(PDGLUI_Widget *tmp);
char *PDGLUI_WidgetInput_GetPropertyS(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetInput_SetPropertyS(PDGLUI_Widget *obj, char *var, char *val);
int PDGLUI_WidgetInput_GetPropertyI(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetInput_SetPropertyI(PDGLUI_Widget *obj, char *var, int val);
int PDGLUI_WidgetInput_Init();
//AHSRC:gui2/widget_box.c
int PDGLUI_WidgetBox_HandleInput(PDGLUI_Widget *obj,PDGLUI_InputState *state, int ox, int oy);
int PDGLUI_WidgetBox_Render(PDGLUI_Widget *obj, int ox, int oy);
int PDGLUI_WidgetBox_SizeWidget(PDGLUI_Widget *obj);
PDGLUI_Widget *PDGLUI_WidgetBox_Begin(char *type, char *id);
int PDGLUI_WidgetBox_AddWidget(PDGLUI_Widget *tmp, PDGLUI_Widget *tmp2);
int PDGLUI_WidgetBox_End(PDGLUI_Widget *tmp);
char *PDGLUI_WidgetBox_GetPropertyS(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetBox_SetPropertyS(PDGLUI_Widget *obj, char *var, char *val);
int PDGLUI_WidgetBox_GetPropertyI(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetBox_SetPropertyI(PDGLUI_Widget *obj, char *var, int val);
int PDGLUI_WidgetBox_Init();
//AHSRC:gui2/widget_union.c
int PDGLUI_WidgetUnion_HandleInput(PDGLUI_Widget *obj,PDGLUI_InputState *state, int ox, int oy);
int PDGLUI_WidgetUnion_Render(PDGLUI_Widget *obj, int ox, int oy);
int PDGLUI_WidgetUnion_SizeWidget(PDGLUI_Widget *obj);
PDGLUI_Widget *PDGLUI_WidgetUnion_Begin(char *type, char *id);
int PDGLUI_WidgetUnion_AddWidget(PDGLUI_Widget *tmp, PDGLUI_Widget *tmp2);
int PDGLUI_WidgetUnion_End(PDGLUI_Widget *tmp);
char *PDGLUI_WidgetUnion_GetPropertyS(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetUnion_SetPropertyS(PDGLUI_Widget *obj, char *var, char *val);
int PDGLUI_WidgetUnion_GetPropertyI(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetUnion_SetPropertyI(PDGLUI_Widget *obj, char *var, int val);
int PDGLUI_WidgetUnion_Init();
//AHSRC:gui2/widget_label.c
int PDGLUI_WidgetLabel_Render(PDGLUI_Widget *obj, int ox, int oy);
int PDGLUI_WidgetLabel_HandleInput(PDGLUI_Widget *obj,PDGLUI_InputState *state, int ox, int oy);
int PDGLUI_WidgetLabel_Init();
PDGLUI_Widget *PDGLUI_WidgetLabel_Begin(char *type, char *id);
int PDGLUI_WidgetLabel_End(PDGLUI_Widget *tmp);
char *PDGLUI_WidgetLabel_GetPropertyS(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetLabel_SetPropertyS(PDGLUI_Widget *obj, char *var, char *val);
int PDGLUI_WidgetLabel_GetPropertyI(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetLabel_SetPropertyI(PDGLUI_Widget *obj, char *var, int val);
int PDGLUI_WidgetLabel_Init();
//AHSRC:gui2/widget_scroll.c
int PDGLUI_WidgetScroll_HandleInput(PDGLUI_Widget *obj,PDGLUI_InputState *state, int ox, int oy);
int PDGLUI_WidgetScroll_Render(PDGLUI_Widget *obj, int ox, int oy);
int PDGLUI_WidgetScroll_Init();
PDGLUI_Widget *PDGLUI_WidgetScroll_Begin(char *type, char *id);
int PDGLUI_WidgetScroll_End(PDGLUI_Widget *tmp);
char *PDGLUI_WidgetScroll_GetPropertyS(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetScroll_SetPropertyS(PDGLUI_Widget *obj, char *var, char *val);
int PDGLUI_WidgetScroll_GetPropertyI(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetScroll_SetPropertyI(PDGLUI_Widget *obj, char *var, int val);
int PDGLUI_WidgetScroll_Init();
//AHSRC:gui2/widget_list.c
int PDGLUI_WidgetList_Render(PDGLUI_Widget *obj, int ox, int oy);
int PDGLUI_WidgetList_HandleInput(PDGLUI_Widget *obj,PDGLUI_InputState *state, int ox, int oy);
PDGLUI_Widget *PDGLUI_WidgetList_Begin(char *type, char *id);
int PDGLUI_WidgetList_End(PDGLUI_Widget *tmp);
char *PDGLUI_WidgetList_GetPropertyS(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetList_SetPropertyS(PDGLUI_Widget *obj, char *var, char *val);
int PDGLUI_WidgetList_GetPropertyI(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetList_SetPropertyI(PDGLUI_Widget *obj, char *var, int val);
int PDGLUI_WidgetList_AddItem(PDGLUI_Widget *obj, char *name, char *value);
int PDGLUI_WidgetList_SetItem(PDGLUI_Widget *obj, char *name, char *value);
int PDGLUI_WidgetList_ClearItems(PDGLUI_Widget *obj);
int PDGLUI_WidgetList_Init();
//AHSRC:gui2/widget_tree.c
int PDGLUI_WidgetTree_HandleInput(PDGLUI_Widget *obj,PDGLUI_InputState *state, int ox, int oy);
int PDGLUI_WidgetTree_Render(PDGLUI_Widget *obj, int ox, int oy);
int PDGLUI_WidgetTree_SizeWidget(PDGLUI_Widget *obj);
int PDGLUI_WidgetTree_Init();
PDGLUI_Widget *PDGLUI_WidgetTree_Begin(char *type, char *id);
int PDGLUI_WidgetTree_End(PDGLUI_Widget *tmp);
int PDGLUI_WidgetTree_AddWidget(PDGLUI_Widget *tmp, PDGLUI_Widget *tmp2);
char *PDGLUI_WidgetTree_GetPropertyS(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetTree_SetPropertyS(PDGLUI_Widget *obj, char *var, char *val);
int PDGLUI_WidgetTree_GetPropertyI(PDGLUI_Widget *obj, char *var);
int PDGLUI_WidgetTree_SetPropertyI(PDGLUI_Widget *obj, char *var, int val);
int PDGLUI_WidgetTree_Init();
//AHSRC:ui/ui_loadsave.c
PDGLUI_API void UI_LoadSave_CheckDrives();
PDGLUI_API void UI_LoadSave_ReloadPath();
PDGLUI_API void UI_LoadSave_ReloadPath();
PDGLUI_API void UI_LoadSave_SetTitle(char *name, char *ext);
PDGLUI_API char *UI_LoadSave_GetName();
void UI_LoadSave_HandleName(char *name);
PDGLUI_API void UI_LoadSave_Draw();
//AHSRC:ui/ui_texfinder.c
PDGLUI_API char *UI_TexFinder_GenAbs(char *tn);
void UI_TexFinder_ReloadPath();
void UI_TexFinder_ReloadPath();
PDGLUI_API void UI_TexFinder_SetTitle(char *name);
PDGLUI_API char *UI_TexFinder_GetName();
void UI_TexFinder_HandleName(char *name);
void UI_TexFinder_HandleName(char *name);
PDGLUI_API void UI_TexFinder_Draw();
//AHSRC:ui/ui_camera.c
PDGLUI_API void UI_Camera_GetOrgFV(float *org);
PDGLUI_API void UI_Camera_SetOrgFV(float *org);
PDGLUI_API void UI_Camera_GetAngFV(float *ang);
PDGLUI_API void UI_Camera_SetAngFV(float *ang);
PDGLUI_API int UI_Camera_GetKill();
PDGLUI_API int UI_Camera_GetDoShot();
PDGLUI_API void UI_Camera_SetDoShot(int v);
PDGLUI_API void UI_Camera_BeginRecord(void);
PDGLUI_API void UI_Camera_EndRecord(void);
PDGLUI_API void UI_Camera_RecordDoShot(void);
PDGLUI_API void UI_Camera_BeginRecordFixed(void);
PDGLUI_API void UI_Camera_RecordHideUI(bool state);
PDGLUI_API int UI_Camera_GetHideUI(void);
PDGLUI_API PDGLUI_Camera *PDGLUI_GetCamera();
PDGLUI_API void UI_Camera_Init();
PDGLUI_API void UI_Camera_Update();
PDGLUI_API void UI_Camera_GetZNearFar(float *rznear, float *rzfar);
PDGLUI_API void UI_Camera_SetupViewAtPersp3D(int xo, int yo, int xs, int ys, float aspect, float fov, float *vorg, float *vrot);
PDGLUI_API void UI_Camera_SetupView3D(int xo, int yo, int xs, int ys);
PDGLUI_API void UI_Camera_Setup3D();
PDGLUI_API void UI_Camera_Setup2D();
PDGLUI_API int UI_Camera_4ViewsP();
PDGLUI_API int UI_Camera_2ViewsP();
PDGLUI_API void UI_Camera_Setup3D_A();
PDGLUI_API void UI_Camera_Setup3D_B();
PDGLUI_API void UI_Camera_Setup3D_C();
PDGLUI_API void UI_Camera_Setup3D_D();
PDGLUI_API void UI_Camera_Project4D(float *qv, float *v);
PDGLUI_API void UI_Camera_ProjectNormal4D(float *qv, float *v);
PDGLUI_API void UI_Camera_XFormMat4D(float *qv, float *mat, float *v);
PDGLUI_API void UI_Camera_XFormMatNormal4D(float *qv, float *mat, float *v);
PDGLUI_API void UI_Camera_XForm4D(float *qv, float *v);
PDGLUI_API void UI_Camera_XFormNormal4D(float *qv, float *v);
PDGLUI_API void UI_Camera_Project4D_3D(float *qv, float *v);
PDGLUI_API void UI_Camera_Project4D_3D_2(float *qv, float *v);
PDGLUI_API void UI_Camera_ProjectWorldToScreen(float *sv, float *dv);
//AHSRC:ui/ui_metaui.c
PDGLUI_API void UI_MetaUI_SetActive(bool active);
PDGLUI_API bool UI_MetaUI_IsActive(void);
PDGLUI_API PDGLUI_ProgramInfo *UI_MetaUI_CreateProgramInfo(char *title);
PDGLUI_API void UI_MetaUI_DestroyProgramInfo(PDGLUI_ProgramInfo *prog);
PDGLUI_API void UI_MetaUI_Draw();
PDGLUI_API int UI_MetaUI_HandleInput(void);
PDGLUI_API int UI_MetaUI_HandleKey(int num, int down);
PDGLUI_API void UI_MetaUI_Init(void);
int MetaUI_ProgTest_Render2D(PDGLUI_ProgramInfo *prog);
PDGLUI_API PDGLUI_ProgramInfo *UI_MetaUI_CreateProgramInfoTest(void);
//AHSRC:rift/ovr_glue.cpp
PDGLUI_API void PDGLUI_InitRift();
PDGLUI_API void PDGLUI_GetRiftOrientation(float *ang);
PDGLUI_API void PDGLUI_GetRiftDeltaOrientation(float *ang);
PDGLUI_API void PDGLUI_GetRiftOrientation(float *ang);
