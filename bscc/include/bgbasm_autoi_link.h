//AHSRC:link/link_context.c
BLNK_Object *BLNK_NewContext();
int BLNK_DestroyContext(BLNK_Object *ctx);
void BLNK_EmitLabelPos(BLNK_Object *ctx, char *name, int pos);
void BLNK_EmitGotoPos(BLNK_Object *ctx, char *name, int ty, int pos);
//AHSRC:link/link_core.c
void BLNK_ScanRange(void **p, int cnt);
void *BLNK_gcAlloc(int sz);
void *BLNK_gcExec(int sz);
void *BLNK_gcAtomic(int sz);
void *BLNK_gcTAlloc(char *ty, int sz);
void *BLNK_gcTExec(char *ty, int sz);
void *BLNK_gcTAtomic(char *ty, int sz);
void BLNK_gcFree(void *obj);
void *BLNK_gcReAlloc(void *obj, int sz);
int BLNK_gcAllocTls(char *name, int sz);
int BLNK_gcGetTlsTls();
int BLNK_ObjAllocTextP(byte *obj);
void BLNK_AddExeSection(char *name, s64 va, s64 sz, int fl);
char *BLNK_LookupExeSectionPtrName(void *ptr);
char *BLNK_LookupModulePtrName(void *ptr);
byte *BLNK_AllocChunkBuffer(int sz);
void BLNK_AllocTextChunk(int sz);
void BLNK_AllocDataChunk(int sz);
byte *BLNK_AllocTextSz(int sz);
byte *BLNK_AllocDataSz(int sz);
void BLNK_InitLink();
char *blnk_strdup(char *str);
int blnk_strdup_i(char *str);
char *blnk_strtab_i(int str);
char *blnk_strdup(char *str);
int blnk_strdup_i(char *str);
char *blnk_strtab_i(int str);
char *blnk_blacklist(char *str);
int blnk_blacklist_i(char *str);
char *blnk_blakcktab_i(int str);
int blnk_lookup_blacklist(char *str);
void BLNK_LinkReference(byte *ref, byte *ptr, int ty);
void BLNK_UnlinkReference(byte *ref, byte *ptr, int ty);
void BLNK_RelinkReference(byte *ref, byte *oldptr, byte *newptr, int ty);
void BLNK_LinkRefChain(int idx, byte *ptr);
void BLNK_UnlinkRefChain(int idx, byte *ptr);
void BLNK_RelinkRefChain(int idx, byte *oldptr, byte *newptr);
void BLNK_AddSymRef(char *name, byte *ref, int ty);
char *BLNK_UnmangleName(char *str);
void BLNK_AddSym(char *name, void *ptr);
void BLNK_AddSym(char *name, void *ptr);
void *BLNK_FetchSymHash(char *name);
void *BLNK_FetchSym(char *name);
void *BLNK_FetchSymPrefix(char *name);
int BLNK_FetchSymIndexPrefix(char *name);
char *BLNK_FetchSymPrefixName(char *name);
int BLNK_FetchSymIndex2(char *name);
int BLNK_FetchSymIndex(char *name);
int BLNK_GetSymIndex(char *name);
int BLNK_QuickHashName(char *name);
int BLNK_LookupQuickHash(char *name, void **rptr);
int BLNK_AssignQuickHash(char *name, void *ptr);
int BLNK_FlushQuickHash(void);
void *BLNK_LookupLabel(char *name);
int BLNK_CheckPtrBigSpace(void *ptr);
byte *BLNK_LinkModule(BLNK_Object *ctx);
byte *BLNK_LinkModuleObj(char *name, void *buf, int sz);
void BLNK_LinkModuleQueue(BLNK_Object *ctx);
void BLNK_LinkModuleObjQueue(char *name, void *buf, int sz);
void BLNK_UnlinkModuleQueue(BLNK_Object *ctx);
BLNK_Object *BLNK_LookupSymbolQueue(char *sym);
void *BLNK_ResolveSymbolQueue(char *sym);
int BLNK_LookupModule(char *name);
void *BLNK_LookupModuleText(char *name, int *rsz);
void *BLNK_LookupModuleData(char *name, int *rsz);
char *BLNK_GetNamePtr(void *ptr);
char *BLNK_GetLastNamePtr(void *ptr, void **rbp);
int BLNK_EnumUndefSyms(char **lst, int max);
void BLNK_AddSymArray(char **name, void **ptr, int cnt);
//AHSRC:link/link_thunk.c
//AHSRC:link/link_lnx.c
int BLNK_InitDllsOS();
char *BLNK_LookupAddrNameOS(void *addr, void **addr2);
int BLNK_LoadDynamicOS(char *name);
void BLNK_UpdateProxyOS(char *name, void *ptr);
void *BLNK_LookupLabelOS(char *name);
int BLNK_ProcessEXE(char *name);
void *BLNK_LoadFileRawOS(char *name, int *rsz);
//AHSRC:link/link_nacl.c
int BLNK_InitDllsOS();
char *BLNK_LookupAddrNameOS(void *addr, void **addr2);
int BLNK_LoadDynamicOS(char *name);
void BLNK_UpdateProxyOS(char *name, void *ptr);
void *BLNK_LookupLabelOS(char *name);
int BLNK_ProcessEXE(char *name);
void *BLNK_LoadFileRawOS(char *name, int *rsz);
//AHSRC:link/link_w32.c
void BLNK_ProbeTst(byte *buf, int sz);
void BLNK_UpdateDllsOS(void *hmod);
int BLNK_InitDllsOS();
int BLNK_LoadDynamicOS(char *name);
void BLNK_UpdateProxyOS(char *name, void *ptr);
void *BLNK_LookupLabelOS_1(char *name);
void *BLNK_LookupLabelOS_2(char *name, int *rfl);
void *BLNK_LookupLabelOS(char *name);
int BLNK_InitDbgHelpOS();
char *BLNK_LookupAddrNameOS(void *addr, void **addr2);
int BLNK_ProcessMAP(char *name);
int BLNK_ProcessEXE(char *name);
//AHSRC:link/link_vfs.c
s64 blnk_tell_tmp(void *fd);
int blnk_seek_tmp(void *fd, s64 pos, int rel);
BLNK_IOFuncs_t *blnk_getio();
void blnk_initvfs();
void *blnk_fopen(char *name, char *mode);
void blnk_fclose(void *fd);
int blnk_fread(void *buf, int m, int n, void *fd);
int blnk_fwrite(void *buf, int m, int n, void *fd);
int blnk_feof(void *fd);
s64 blnk_ftell(void *fd);
int blnk_fseek(void *fd, s64 pos, int rel);
int blnk_fgetc(void *fd);
void blnk_fputc(int c, void *fd);
void *blnk_loadfile(char *name, int *rsz);
int blnk_storefile(char *name, void *buf, int sz);
int blnk_storetextfile(char *name, char *buf);
//AHSRC:link/bldr_coff.c
int BLNK_COFF_ResolveRelocs(BLNK_Object *ctx, BLNK_COFF_Info *inf, int sec,int offs, int cnt);
BLNK_Object *BLNK_COFF_LoadObjectBuf(char *name, byte *buf, int sz);
BLNK_Object *BLNK_COFF_LoadObject(char *name);
int BLNK_COFF_LoadLibraryBuf(char *name, byte *buf, int sz);
int BLNK_COFF_LoadLibrary(char *name);
int BLNK_COFF_LoadLibrary(char *name);
void blnk_coff_set16(byte *ptr, int i);
void blnk_coff_set32(byte *ptr, int i);
int blnk_coff_get16(byte *ptr);
int blnk_coff_get32(byte *ptr);
int blnk_coff_idxstr(char *strs, char *str);
int blnk_coff_idxstr2(char *strs, char *str, int fl);
int BLNK_COFF_StoreObjectBuf(BLNK_Object *ctx, byte *buf, int msz);
int BLNK_COFF_StoreObject(char *name, BLNK_Object *ctx);
byte *BLNK_COFF_EncodeObject(BLNK_Object *ctx, int *rsz);
//AHSRC:link/bldr_elf.c
BLNK_Object *BLNK_ELF_LoadObjectBuf(char *name, byte *buf, int sz);
