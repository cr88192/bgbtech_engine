package bsvm.lang;

public final class Math extends Object
{
public static double E = 2.7182818284590452354;
public static double PI = 3.14159265358979323846;

private static long curSeed=0x55AA55AA55AA55AAL;

public static double abs(double a)
	{ return((a<0)?(-a):a); }
public static float abs(float a)
	{ return((a<0)?(-a):a); }
public static int abs(int a)
	{ return((a<0)?(-a):a); }
public static long abs(long a)
	{ return((a<0)?(-a):a); }

public static double acos(double a)
	{ return 0; }
public static double asin(double a)
	{ return 0; }
public static double atan(double a)
	{ return 0; }
public static double atan2(double a, double b)
	{ return 0; }
public static double ceil(double a)
	{ long l; l=(long)(a+0.99999999999999); return (double)l; }
public static double cos(double a)
	{ return 0; }
public static double exp(double a)
	{ return pow(E, a); }
public static double floor(double a)
	{ long l; l=(long)a; return (double)l; }
public static double IEEEremainder(double f1, double f2)
	{ return 0; }
public static double log(double a)
	{ return 0; }

public static double max(double a, double b)
	{return (a>=b)?a:b; }
public static float max(float a, float b)
	{return (a>=b)?a:b; }
public static int max(int a, int b)
	{return (a>=b)?a:b; }
public static long max(long a, long b)
	{return (a>=b)?a:b; }

public static double min(double a, double b)
	{return (a<=b)?a:b; }
public static float min(float a, float b)
	{return (a<=b)?a:b; }
public static int min(int a, int b)
	{return (a<=b)?a:b; }
public static long min(long a, long b)
	{return (a<=b)?a:b; }

public static double pow(double a, double b)
	{ return 0; }

public static double random()
{
	curSeed *= 281474976710597L;
	return (curSeed>>>48)/65536.0;
}

public static double rint(double a)
	{return floor(a+0.5); }
public static long round(double a)
	{return (long)(floor(a+0.5)); }
public static int round(float a)
	{return (int)(floor(a+0.5)); }

public static double sin(double a)
	{ return 0; }
public static double sqrt(double a)
	{ return 0; }
public static double tan(double a)
	{ return 0; }

}
