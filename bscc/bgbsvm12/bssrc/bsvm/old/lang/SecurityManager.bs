package bsvm.lang;
import bsvm.io.*;

public abstract class SecurityManager extends Object
{
protected boolean inCheck;

protected SecurityManager()
	{ }

public void checkAccept(String host, int port)
	{ }
public void checkAccess(Thread g)
	{ }
public void checkAccess(ThreadGroup g)
	{ }
public void checkConnect(String host, int port)
	{ }
public void checkConnect(String host, int port, Object context)
	{ }
public void checkCreateClassLoader()
	{ }
public void checkDelete(String file)
	{ }
public void checkExec(String cmd)
	{ }
public void checkExit(int status)
	{ }
public void checkLink(String lib)
	{ }
public void checkListen(int port)
	{ }
public void checkPackageAccess(String pkg)
	{ }
public void checkPackageDefinition(String pkg)
	{ }
public void checkPropertiesAccess()
	{ }
public void checkPropertyAccess(String key)
	{ }
public void checkPropertyAccess(String key, String def)
	{ }
public void checkRead(FileDescriptor fd)
	{ }
public void checkRead(String file)
	{ }
public void checkRead(String file, Object context)
	{ }
public void checkSetFactory()
	{ }
public boolean checkTopLevelWindow(Object window)
	{ return false; }
public void checkWrite(FileDescriptor fd)
	{ }
public void checkWrite(String file)
	{ }

protected int classDepth(String name)
	{ return 0; }
protected int classLoaderDepth()
	{ return 0; }
   
protected ClassLoader currentClassLoader()
	{ return null; }
protected Class[] getClassContext()
	{ return null; }
public boolean getInCheck()
	{ return false; }
public Object getSecurityContext()
	{ return null; }
protected boolean inClass(String name)
	{ return false; }
protected boolean inClassLoader()
	{ return false; }

}

