package bsvm.lang;

public final class Boolean extends Object
{
	private final boolean value;

	public static final Boolean TRUE = new Boolean(true);
	public static final Boolean FALSE = new Boolean(false);
	public static final Class TYPE = boolean.class;

	public Boolean(boolean value)
		{ this.value=value; }
	public Boolean(String s)
		{ this.value=getBoolean(s); }

	public boolean booleanValue()
		{ return this.value; }
	public boolean equals(Object obj)
	{
		return (obj==this) ||
			((obj instanceof Boolean) &&
				(((Boolean)obj).value==value));
	}

	public static boolean getBoolean(String name)
	{
		if((name==null) || (name.length()==0))
			return false;
		return "true".equalsIgnoreCase(name);
	}

	public int hashCode()
		{ return value?1231:1237; }
	public String toString()
		{ return value?"true":"false"; }
	public static String toString(boolean b)
		{ return b?"true":"false"; }

	public static Boolean valueOf(String s)
		{ return getBoolean(s)?TRUE:FALSE; }
}

