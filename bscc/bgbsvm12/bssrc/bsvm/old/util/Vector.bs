package bsvm.util;

public class Vector extends Object implements Cloneable
{
protected int capacityIncrement;
protected int elementCount;
protected Object[] elementData;

public Vector()
	{}
public Vector(int initialCapacity)
	{}
public Vector(int initialCapacity, int capacityIncrement)
	{}

public void addElement(Object obj)
	{}
public int capacity()
	{ return 0; }
public Object clone()
	{ return null; }
public boolean contains(Object elem)
	{ return false; }
public void copyInto(Object[] anArray)
	{}
public Object elementAt(int index)
	{ return null; }
public Enumeration elements()
	{ return null; }
public void ensureCapacity(int minCapacity)
	{}
public Object firstElement()
	{ return null; }
public int indexOf(Object elem)
	{ return 0; }
public int indexOf(Object elem, int index)
	{ return 0; }
public void insertElementAt(Object obj, int index)
	{}
public boolean isEmpty()
	{ return false; }
public Object lastElement()
	{ return null; }
public int lastIndexOf(Object elem)
	{ return 0; }
public int lastIndexOf(Object elem, int index)
	{ return 0; }
public void removeAllElements()
	{}
public boolean removeElement(Object obj)
	{ return false; }
public void removeElementAt(int index)
	{}
public void setElementAt(Object obj, int index)
	{}
public void setSize(int newSize)
	{}
public int size()
	{ return 0; }
public String toString()
	{ return null; }
public void trimToSize()
	{}

}
