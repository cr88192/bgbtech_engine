CmdLine: 'engine0'
Th 000000C8 8108 10001FFF
Th 000000CC 8080 00631500
SpaceNew(0): _flonum_t C0000000..D0000000
SpaceNew(1): _fixint_t D0000000..E0000000
SpaceNew(2): _ustring_t E0000000..E1000000
SpaceNew(3): _usymbol_t E1000000..E2000000
SpaceNew(4): _char_t E2000000..E2010000
mounting F:\bgbtech_misc\bgbtech_engine as /
mounting F:\bgbtech_misc\bgbtech_engine\resource as /
vfexwad_vfmount: No Module Data engine0.exe
DYLL_MetaPath_LoadDB2: engine0_meta.txt engine0
Load DB 'engine0_meta.txt': fail
vfexwad_vfmount: No Module Data ntdll.dll
DYLL_MetaPath_LoadDB2: ntdll_meta.txt ntdll
Load DB 'ntdll_meta.txt': fail
vfexwad_vfmount: No Module Data kernel32.dll
DYLL_MetaPath_LoadDB2: kernel32_meta.txt kernel32
Load DB 'kernel32_meta.txt': fail
vfexwad_vfmount: No Module Data KERNELBASE.dll
DYLL_MetaPath_LoadDB2: KERNELBASE_meta.txt KERNELBASE
Load DB 'KERNELBASE_meta.txt': fail
Got Module Data 097A0020 905216
DYLL_MetaPath_LoadDB2: btgecm_meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm (14295 keys, 51432 lines)
Load DB 'exwad/btgecm/meta.txt': pass
vfexwad_vfmount: No Module Data bgbbtjpg.dll
DYLL_MetaPath_LoadDB2: bgbbtjpg_meta.txt bgbbtjpg
Load DB 'bgbbtjpg_meta.txt': fail
vfexwad_vfmount: No Module Data bgbdy.dll
DYLL_MetaPath_LoadDB2: bgbdy_meta.txt bgbdy
Load DB 'bgbdy_meta.txt': fail
vfexwad_vfmount: No Module Data bgbgc.dll
DYLL_MetaPath_LoadDB2: bgbgc_meta.txt bgbgc
Load DB 'bgbgc_meta.txt': fail
vfexwad_vfmount: No Module Data bgbasm.dll
DYLL_MetaPath_LoadDB2: bgbasm_meta.txt bgbasm
Load DB 'bgbasm_meta.txt': fail
vfexwad_vfmount: No Module Data zpack.dll
DYLL_MetaPath_LoadDB2: zpack_meta.txt zpack
Load DB 'zpack_meta.txt': fail
vfexwad_vfmount: No Module Data libbgbmid.dll
DYLL_MetaPath_LoadDB2: libbgbmid_meta.txt libbgbmid
DYLL_MetaPath_LoadDB2: bgbmid_meta.txt libbgbmid
Load DB 'libbgbmid_meta.txt': fail
vfexwad_vfmount: No Module Data libvecmath.dll
DYLL_MetaPath_LoadDB2: libvecmath_meta.txt libvecmath
DYLL_MetaPath_LoadDB2: vecmath_meta.txt libvecmath
Load DB 'libvecmath_meta.txt': fail
vfexwad_vfmount: No Module Data WINMM.dll
DYLL_MetaPath_LoadDB2: WINMM_meta.txt WINMM
Load DB 'WINMM_meta.txt': fail
vfexwad_vfmount: No Module Data msvcrt.dll
DYLL_MetaPath_LoadDB2: msvcrt_meta.txt msvcrt
Load DB 'msvcrt_meta.txt': fail
vfexwad_vfmount: No Module Data USER32.dll
DYLL_MetaPath_LoadDB2: USER32_meta.txt USER32
Load DB 'USER32_meta.txt': fail
vfexwad_vfmount: No Module Data GDI32.dll
DYLL_MetaPath_LoadDB2: GDI32_meta.txt GDI32
Load DB 'GDI32_meta.txt': fail
vfexwad_vfmount: No Module Data LPK.dll
DYLL_MetaPath_LoadDB2: LPK_meta.txt LPK
Load DB 'LPK_meta.txt': fail
vfexwad_vfmount: No Module Data USP10.dll
DYLL_MetaPath_LoadDB2: USP10_meta.txt USP10
Load DB 'USP10_meta.txt': fail
vfexwad_vfmount: No Module Data ADVAPI32.dll
DYLL_MetaPath_LoadDB2: ADVAPI32_meta.txt ADVAPI32
Load DB 'ADVAPI32_meta.txt': fail
vfexwad_vfmount: No Module Data sechost.dll
DYLL_MetaPath_LoadDB2: sechost_meta.txt sechost
Load DB 'sechost_meta.txt': fail
vfexwad_vfmount: No Module Data RPCRT4.dll
DYLL_MetaPath_LoadDB2: RPCRT4_meta.txt RPCRT4
Load DB 'RPCRT4_meta.txt': fail
vfexwad_vfmount: No Module Data SspiCli.dll
DYLL_MetaPath_LoadDB2: SspiCli_meta.txt SspiCli
Load DB 'SspiCli_meta.txt': fail
vfexwad_vfmount: No Module Data CRYPTBASE.dll
DYLL_MetaPath_LoadDB2: CRYPTBASE_meta.txt CRYPTBASE
Load DB 'CRYPTBASE_meta.txt': fail
vfexwad_vfmount: No Module Data MSVFW32.dll
DYLL_MetaPath_LoadDB2: MSVFW32_meta.txt MSVFW32
Load DB 'MSVFW32_meta.txt': fail
vfexwad_vfmount: No Module Data SHELL32.dll
DYLL_MetaPath_LoadDB2: SHELL32_meta.txt SHELL32
Load DB 'SHELL32_meta.txt': fail
vfexwad_vfmount: No Module Data SHLWAPI.dll
DYLL_MetaPath_LoadDB2: SHLWAPI_meta.txt SHLWAPI
Load DB 'SHLWAPI_meta.txt': fail
vfexwad_vfmount: No Module Data COMCTL32.dll
DYLL_MetaPath_LoadDB2: COMCTL32_meta.txt COMCTL32
Load DB 'COMCTL32_meta.txt': fail
Got Module Data 09C80020 1159168
DYLL_MetaPath_LoadDB2: bgbsvm_meta.txt bgbsvm
DYLL_MetaPath_LoadDB2: exwad/bgbsvm/meta.txt bgbsvm
DYLL_MetaPath_LoadDB2: exwad/bgbsvm/meta.txt bgbsvm (10499 keys, 37580 lines)
Load DB 'exwad/bgbsvm/meta.txt': pass
vfexwad_vfmount: No Module Data bgbnet.dll
DYLL_MetaPath_LoadDB2: bgbnet_meta.txt bgbnet
Load DB 'bgbnet_meta.txt': fail
vfexwad_vfmount: No Module Data WSOCK32.dll
DYLL_MetaPath_LoadDB2: WSOCK32_meta.txt WSOCK32
Load DB 'WSOCK32_meta.txt': fail
vfexwad_vfmount: No Module Data WS2_32.dll
DYLL_MetaPath_LoadDB2: WS2_32_meta.txt WS2_32
Load DB 'WS2_32_meta.txt': fail
vfexwad_vfmount: No Module Data NSI.dll
DYLL_MetaPath_LoadDB2: NSI_meta.txt NSI
Load DB 'NSI_meta.txt': fail
vfexwad_vfmount: No Module Data ole32.dll
DYLL_MetaPath_LoadDB2: ole32_meta.txt ole32
Load DB 'ole32_meta.txt': fail
Got Module Data 09F70020 1388544
DYLL_MetaPath_LoadDB2: liblbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: lbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2 (19830 keys, 70876 lines)
Load DB 'exwad/liblbxgl2/meta.txt': pass
vfexwad_vfmount: No Module Data libpdgl.dll
DYLL_MetaPath_LoadDB2: libpdgl_meta.txt libpdgl
DYLL_MetaPath_LoadDB2: pdgl_meta.txt libpdgl
Load DB 'libpdgl_meta.txt': fail
vfexwad_vfmount: No Module Data libpdglui.dll
DYLL_MetaPath_LoadDB2: libpdglui_meta.txt libpdglui
DYLL_MetaPath_LoadDB2: pdglui_meta.txt libpdglui
Load DB 'libpdglui_meta.txt': fail
vfexwad_vfmount: No Module Data SETUPAPI.dll
DYLL_MetaPath_LoadDB2: SETUPAPI_meta.txt SETUPAPI
Load DB 'SETUPAPI_meta.txt': fail
vfexwad_vfmount: No Module Data CFGMGR32.dll
DYLL_MetaPath_LoadDB2: CFGMGR32_meta.txt CFGMGR32
Load DB 'CFGMGR32_meta.txt': fail
vfexwad_vfmount: No Module Data OLEAUT32.dll
DYLL_MetaPath_LoadDB2: OLEAUT32_meta.txt OLEAUT32
Load DB 'OLEAUT32_meta.txt': fail
vfexwad_vfmount: No Module Data DEVOBJ.dll
DYLL_MetaPath_LoadDB2: DEVOBJ_meta.txt DEVOBJ
Load DB 'DEVOBJ_meta.txt': fail
vfexwad_vfmount: No Module Data IMM32.DLL
DYLL_MetaPath_LoadDB2: IMM32_meta.txt IMM32
Load DB 'IMM32_meta.txt': fail
vfexwad_vfmount: No Module Data MSCTF.dll
DYLL_MetaPath_LoadDB2: MSCTF_meta.txt MSCTF
Load DB 'MSCTF_meta.txt': fail
DYLL_LoadLibraryI: Load game_base.dll
DYLL_LoadLibraryI: Load resource/game_base.dll
DYLL_MetaPath_LoadDB2: cc_usr/metapath.txt (null)
mounting F:\bgbtech_misc\bgbtech_engine\resource_mini as /
DYLL_LoadLibraryI: Load opengl32.dll
DYLL_LoadLibraryI: Success Loading opengl32.dll
vfexwad_vfmount: No Module Data opengl32.dll
DYLL_MetaPath_LoadDB2: opengl32_meta.txt opengl32
Load DB 'opengl32': fail
DYLL_LoadLibrary: Loaded opengl32
OpenGL Vendor=ATI Technologies Inc.
OpenGL Renderer=AMD Radeon R9 200 Series
OpenGL Version=4.5.13399 Compatibility Profile Context 15.200.1062.1004
PDGL: Startup
loading font 'unicode':'fonts/unifont.bfn'
loading font 'fixed_B':'fonts/fixed_b.bfn'
loading font 'fixed_16px':'fonts/fixed_cp437_16px.bfn'
loading font 'fixed_32px':'fonts/fixed_32px.bfn'
loading font 'fixed_64px':'fonts/fixed_64px.bfn'
loading font 'fixed':'fonts/fixed_cp437_8px.bfn'
loading font 'fixed_cp437_8px':'fonts/fixed_cp437_8px.bfn'
loading font 'gfx':'fonts/gfx.bfn'
Load Patch instruments/acpiano (0)
LBXGL_Particle_Init
PDGL: Textures Init
PDGL_InitShader
PDGL_InitShader: OK
DYLL_LoadLibraryI: Load clientx86.dll
DYLL_LoadLibraryI: Load resource/clientx86.dll
DYLL_LoadLibraryI: Success Loading resource/clientx86.dll
Got Module Data 0D660D80 512000
DYLL_MetaPath_LoadDB2: clientx86_meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86 (19828 keys, 70870 lines)
Load DB 'clientx86': pass
DYLL_LoadLibrary: Loaded clientx86
BTGE_ClientInitFunc: BTCL_NewWorld Pass 0B1112DF
stmt: (dbgmark "bsvm/init.bs" 1) -> (dbgmark "bsvm/init.bs" 1)
stmt: (flag extern (import "bsvm/init/Exceptions")) -> (flag extern (import "bsvm/init/Exceptions"))
stmt: (linenum 2) -> (linenum 2)
expr: (flag extern (import "bsvm/init/Errors")) -> (flag extern (import "bsvm/init/Errors"))
BLK (null), SA No, Capture=Yes
087C8CE0 02 0101         dbgmark "bsvm/init.bs" 1 
087C8CE3 9A 0203         import "bsvm/init/Exceptions" Ce 
087C8CE6 05 02           ln 2 
087C8CE8 9A 0403         import "bsvm/init/Errors" Ce 
087C8CEB 42              push_null 
087C8CEC 1A              clearenv 
087C8CED 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 1) -> (dbgmark "bsvm/init/Exceptions.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin)))))) -> (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin))))))
expr: (rlambda Exception () (begin)) -> (rlambda Exception () (begin))
expr: (begin) -> ()
BLK Exception, SA No, Capture=Yes
087CABB0 42              push_null 
087CABB1 1A              clearenv 
087CABB2 29              ret 

expr: (rlambda Exception (str) (begin)) -> (rlambda Exception (str) (begin))
expr: (begin) -> ()
BLK Exception, SA Yes, Capture=Yes
087CB4C0 42              push_null 
087CB4C1 1A              clearenv 
087CB4C2 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 11) -> (dbgmark "bsvm/init/Exceptions.bs" 11)
stmt: (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))))))) -> (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))))))
expr: (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))) -> (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 14) -> (dbgmark "bsvm/init/Exceptions.bs" 14)
expr: (funcall super) -> (funcall super)
BLK NullPointerException, SA No, Capture=Yes
087CBFD0 02 010E         dbgmark "bsvm/init/Exceptions.bs" 14 
087CBFD3 20              mark 
087CBFD4 C20E            call_super 
087CBFD6 1A              clearenv 
087CBFD7 29              ret 

expr: (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))) -> (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 16) -> (dbgmark "bsvm/init/Exceptions.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK NullPointerException, SA Yes, Capture=Yes
087CC9C0 02 0110         dbgmark "bsvm/init/Exceptions.bs" 16 
087CC9C3 20              mark 
087CC9C4 5A 00           lload 0 
087CC9C6 C20E            call_super 
087CC9C8 1A              clearenv 
087CC9C9 29              ret 

stmt: (linenum 19) -> (linenum 19)
stmt: (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))))))) -> (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))))))
expr: (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))) -> (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 22) -> (dbgmark "bsvm/init/Exceptions.bs" 22)
expr: (funcall super) -> (funcall super)
BLK CastFailException, SA No, Capture=Yes
087CD2B0 02 0116         dbgmark "bsvm/init/Exceptions.bs" 22 
087CD2B3 20              mark 
087CD2B4 C20E            call_super 
087CD2B6 1A              clearenv 
087CD2B7 29              ret 

expr: (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))) -> (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 24) -> (dbgmark "bsvm/init/Exceptions.bs" 24)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK CastFailException, SA Yes, Capture=Yes
087CDBA0 02 0118         dbgmark "bsvm/init/Exceptions.bs" 24 
087CDBA3 20              mark 
087CDBA4 5A 00           lload 0 
087CDBA6 C20E            call_super 
087CDBA8 1A              clearenv 
087CDBA9 29              ret 

stmt: (linenum 27) -> (linenum 27)
stmt: (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))))))) -> (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))))))
expr: (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))) -> (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 30) -> (dbgmark "bsvm/init/Exceptions.bs" 30)
expr: (funcall super) -> (funcall super)
BLK BoundsCheckException, SA No, Capture=Yes
087CE490 02 011E         dbgmark "bsvm/init/Exceptions.bs" 30 
087CE493 20              mark 
087CE494 C20E            call_super 
087CE496 1A              clearenv 
087CE497 29              ret 

expr: (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))) -> (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 32) -> (dbgmark "bsvm/init/Exceptions.bs" 32)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK BoundsCheckException, SA Yes, Capture=Yes
087CED80 02 0120         dbgmark "bsvm/init/Exceptions.bs" 32 
087CED83 20              mark 
087CED84 5A 00           lload 0 
087CED86 C20E            call_super 
087CED88 1A              clearenv 
087CED89 29              ret 

stmt: (linenum 35) -> (linenum 35)
expr: (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))))))) -> (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))))))
expr: (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))) -> (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 38) -> (dbgmark "bsvm/init/Exceptions.bs" 38)
expr: (funcall super) -> (funcall super)
BLK RightsCheckException, SA No, Capture=Yes
087CF670 02 0126         dbgmark "bsvm/init/Exceptions.bs" 38 
087CF673 20              mark 
087CF674 C20E            call_super 
087CF676 1A              clearenv 
087CF677 29              ret 

expr: (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))) -> (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 40) -> (dbgmark "bsvm/init/Exceptions.bs" 40)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK RightsCheckException, SA Yes, Capture=Yes
087CFF60 02 0128         dbgmark "bsvm/init/Exceptions.bs" 40 
087CFF63 20              mark 
087CFF64 5A 00           lload 0 
087CFF66 C20E            call_super 
087CFF68 1A              clearenv 
087CFF69 29              ret 

BLK (null), SA No, Capture=Yes
087D0080 02 0101         dbgmark "bsvm/init/Exceptions.bs" 1 
087D0083 C200 0200       begin_package bsvm/init () 
087D0087 05 03           ln 3 
087D0089 C202 030004     begin_class Exception () p 
087D008E 10 05           push #!<svm_blk_t:087CAB30> 
087D0090 97 030604       tybind Exception #"()r" p 
087D0094 10 07           push #!<svm_blk_t:087CB440> 
087D0096 97 030804       tybind Exception #"(r)r" p 
087D009A C206            end_class 
087D009C 11              pop 
087D009D 02 010B         dbgmark "bsvm/init/Exceptions.bs" 11 
087D00A0 C202 090304     begin_class NullPointerException Exception p 
087D00A5 10 0A           push #!<svm_blk_t:087CBF50> 
087D00A7 97 090604       tybind NullPointerException #"()r" p 
087D00AB 10 0B           push #!<svm_blk_t:087CC940> 
087D00AD 97 090804       tybind NullPointerException #"(r)r" p 
087D00B1 C206            end_class 
087D00B3 11              pop 
087D00B4 05 13           ln 19 
087D00B6 C202 0C0304     begin_class CastFailException Exception p 
087D00BB 10 0D           push #!<svm_blk_t:087CD230> 
087D00BD 97 0C0604       tybind CastFailException #"()r" p 
087D00C1 10 0E           push #!<svm_blk_t:087CDB20> 
087D00C3 97 0C0804       tybind CastFailException #"(r)r" p 
087D00C7 C206            end_class 
087D00C9 11              pop 
087D00CA 05 1B           ln 27 
087D00CC C202 0F0304     begin_class BoundsCheckException Exception p 
087D00D1 10 10           push #!<svm_blk_t:087CE410> 
087D00D3 97 0F0604       tybind BoundsCheckException #"()r" p 
087D00D7 10 11           push #!<svm_blk_t:087CED00> 
087D00D9 97 0F0804       tybind BoundsCheckException #"(r)r" p 
087D00DD C206            end_class 
087D00DF 11              pop 
087D00E0 05 23           ln 35 
087D00E2 C202 120304     begin_class RightsCheckException Exception p 
087D00E7 10 13           push #!<svm_blk_t:087CF5F0> 
087D00E9 97 120604       tybind RightsCheckException #"()r" p 
087D00ED 10 14           push #!<svm_blk_t:087CFEE0> 
087D00EF 97 120804       tybind RightsCheckException #"(r)r" p 
087D00F3 C206            end_class 
087D00F5 C204            end_package 
087D00F7 11              pop 
087D00F8 29              ret 

stmt: (dbgmark "bsvm/init/Errors.bs" 1) -> (dbgmark "bsvm/init/Errors.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))))))) -> (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))))))
expr: (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))) -> (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 6) -> (dbgmark "bsvm/init/Errors.bs" 6)
expr: (funcall super) -> (funcall super)
BLK Error, SA No, Capture=Yes
087D4F30 02 0106         dbgmark "bsvm/init/Errors.bs" 6 
087D4F33 20              mark 
087D4F34 C20E            call_super 
087D4F36 1A              clearenv 
087D4F37 29              ret 

expr: (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))) -> (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 8) -> (dbgmark "bsvm/init/Errors.bs" 8)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK Error, SA Yes, Capture=Yes
087D5820 02 0108         dbgmark "bsvm/init/Errors.bs" 8 
087D5823 20              mark 
087D5824 5A 00           lload 0 
087D5826 C20E            call_super 
087D5828 1A              clearenv 
087D5829 29              ret 

stmt: (linenum 11) -> (linenum 11)
expr: (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))))))) -> (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))))))
expr: (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))) -> (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 14) -> (dbgmark "bsvm/init/Errors.bs" 14)
expr: (funcall super) -> (funcall super)
BLK IllegalAccessError, SA No, Capture=Yes
087D6110 02 010E         dbgmark "bsvm/init/Errors.bs" 14 
087D6113 20              mark 
087D6114 C20E            call_super 
087D6116 1A              clearenv 
087D6117 29              ret 

expr: (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))) -> (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 16) -> (dbgmark "bsvm/init/Errors.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK IllegalAccessError, SA Yes, Capture=Yes
087D6A00 02 0110         dbgmark "bsvm/init/Errors.bs" 16 
087D6A03 20              mark 
087D6A04 5A 00           lload 0 
087D6A06 C20E            call_super 
087D6A08 1A              clearenv 
087D6A09 29              ret 

BLK (null), SA No, Capture=Yes
087D4E60 02 0101         dbgmark "bsvm/init/Errors.bs" 1 
087D4E63 C200 0200       begin_package bsvm/init () 
087D4E67 05 03           ln 3 
087D4E69 C202 030405     begin_class Error Exception p 
087D4E6E 10 06           push #!<svm_blk_t:087D4EB0> 
087D4E70 97 030705       tybind Error #"()r" p 
087D4E74 10 08           push #!<svm_blk_t:087D57A0> 
087D4E76 97 030905       tybind Error #"(r)r" p 
087D4E7A C206            end_class 
087D4E7C 11              pop 
087D4E7D 05 0B           ln 11 
087D4E7F C202 0A0305     begin_class IllegalAccessError Error p 
087D4E84 10 0B           push #!<svm_blk_t:087D6090> 
087D4E86 97 0A0705       tybind IllegalAccessError #"()r" p 
087D4E8A 10 0C           push #!<svm_blk_t:087D6980> 
087D4E8C 97 0A0905       tybind IllegalAccessError #"(r)r" p 
087D4E90 C206            end_class 
087D4E92 C204            end_package 
087D4E94 11              pop 
087D4E95 29              ret 

stmt: (dbgmark "game_cl/main.bs" 1) -> (dbgmark "game_cl/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: "BGBScript Client Start\n" -> "BGBScript Client Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))))) -> (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))) -> (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))) -> (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")) -> (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))
stmt: (dbgmark "game_cl/main.bs" 9) -> (dbgmark "game_cl/main.bs" 9)
expr: (funcall printf "BTCL_ScriptInit: Called\n") -> (funcall printf "BTCL_ScriptInit: Called\n")
expr: "BTCL_ScriptInit: Called\n" -> "BTCL_ScriptInit: Called\n"
BLK BTCL_ScriptInit, SA No, Capture=Yes
087D9290 02 0109         dbgmark "game_cl/main.bs" 9 
087D9293 2A 02           tymark #"(Cs)r" 
087D9295 10 03           push "BTCL_ScriptInit: Called\n" 
087D9297 24 04           tailcall_s gc_printf 
087D9299 1A              clearenv 
087D929A 29              ret 

stmt: (linenum 12) -> (linenum 12)
stmt: (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))) -> (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))
expr: (rlambda (cast void BTCL_ScriptDrawUI) () (begin)) -> (rlambda (cast void BTCL_ScriptDrawUI) () (begin))
expr: (begin) -> ()
BLK BTCL_ScriptDrawUI, SA No, Capture=Yes
087D9BA0 42              push_null 
087D9BA1 1A              clearenv 
087D9BA2 29              ret 

BLK (null), SA No, Capture=Yes
087D9C50 02 0101         dbgmark "game_cl/main.bs" 1 
087D9C53 9A 0203         import "C" n 
087D9C56 05 03           ln 3 
087D9C58 2A 04           tymark #"(Cs)r" 
087D9C5A 10 05           push "BGBScript Client Start\n" 
087D9C5C 23 06           call_s gc_printf 
087D9C5E 11              pop 
087D9C5F 05 05           ln 5 
087D9C61 C200 0703       begin_package C/game_cl/main n 
087D9C65 05 07           ln 7 
087D9C67 10 08           push #!<svm_blk_t:087D9200> 
087D9C69 97 090A00       tybind BTCL_ScriptInit #"()v" () 
087D9C6D 05 0C           ln 12 
087D9C6F 10 0B           push #!<svm_blk_t:087D9B20> 
087D9C71 97 0C0A00       tybind BTCL_ScriptDrawUI #"()v" () 
087D9C75 C204            end_package 
087D9C77 11              pop 
087D9C78 29              ret 

BGBScript Client Start
BSVM_Pop: Stack Underflow @ 087D9C50
BTCL_ScriptInit: Called
DYLL_LoadLibraryI: Load serverx86.dll
DYLL_LoadLibraryI: Load resource/serverx86.dll
DYLL_LoadLibraryI: Success Loading resource/serverx86.dll
Got Module Data 0EFB0020 798720
DYLL_MetaPath_LoadDB2: serverx86_meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86 (16000 keys, 57323 lines)
Load DB 'serverx86': pass
DYLL_LoadLibrary: Loaded serverx86
BTGE_ServerInitFunc: btsvBindWorld Pass 0E771EF1
BTGE_ClientInitFunc: BTCL_BindWorld Pass 0B111091
BTGE_ClientInitFunc: BTCL_BindBrushWorld Pass 0B11119A
Th 00001C38 4832 0138100F
PDGL: Main
Net Init Low (Winsock).
  hostname=GAMMA4-W7
  IPv4=192.168.1.100
TCP Initialized
Meta0_Init
BSXRP Init
Meta0: new port 18512, service bsxrp-server
BTGE_ServerInitFunc: btsvStepWorld Pass 0E771D61
BTGE_ClientInitFunc: BTCL_HandleInput Pass 0B1110DC
PDGLUI_InitRift: No Device
BTGE_ClientInitFunc: BTCL_StepWorld Pass 0B111118
BTGE_ClientInitFunc: BTCL_SetupClientFrame Pass 0B111316
BTGE_ServerInitFunc: btsvComposeUpdate Pass 0E771C71
BTGE_ServerInitFunc: btsvFinishUpdate Pass 0E7718A2
Texture: Missing-Base: textures/env/space1
LBXGL_SkyBox_LoadSky: space1
BTGE_ClientInitFunc: BTCL_Draw2D Pass 0B11116D
new frag
new frag
SoundRec: Sound overrun
Eval:  load("game/main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/main.bs") -> (funcall load "game/main.bs")
expr: "game/main.bs" -> "game/main.bs"
BLK (null), SA No, Capture=Yes
08A63EE0 02 0101         dbgmark "<eval-str>" 1 
08A63EE3 2A 02           tymark #"(Cs)r" 
08A63EE5 10 03           push "game/main.bs" 
08A63EE7 24 04           tailcall_s load 
08A63EE9 1A              clearenv 
08A63EEA 29              ret 

stmt: (dbgmark "game/main.bs" 6) -> (dbgmark "game/main.bs" 6)
stmt: (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)) -> (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))
stmt: (dbgmark "game/main.bs" 8) -> (dbgmark "game/main.bs" 8)
stmt: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: "menu" -> "menu"
stmt: (linenum 10) -> (linenum 10)
stmt: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: "&New Game" -> "&New Game"
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: "ng_peaceful" -> "ng_peaceful"
expr: "Peaceful" -> "Peaceful"
stmt: (linenum 12) -> (linenum 12)
stmt: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: "ng_easy" -> "ng_easy"
expr: "Easy" -> "Easy"
stmt: (linenum 13) -> (linenum 13)
stmt: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: "ng_medium" -> "ng_medium"
expr: "Medium" -> "Medium"
stmt: (linenum 14) -> (linenum 14)
stmt: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: "ng_hard" -> "ng_hard"
expr: "Hard" -> "Hard"
stmt: (linenum 15) -> (linenum 15)
stmt: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: "ng_nightmare" -> "ng_nightmare"
expr: "Nightmare" -> "Nightmare"
stmt: (linenum 16) -> (linenum 16)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 18) -> (linenum 18)
stmt: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: "&Load Game" -> "&Load Game"
stmt: (linenum 19) -> (linenum 19)
stmt: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: "sv_load1" -> "sv_load1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 20) -> (linenum 20)
stmt: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: "sv_load2" -> "sv_load2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 21) -> (linenum 21)
stmt: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: "sv_load3" -> "sv_load3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 22) -> (linenum 22)
stmt: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: "sv_load4" -> "sv_load4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 23) -> (linenum 23)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 25) -> (linenum 25)
stmt: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: "&Save Game" -> "&Save Game"
stmt: (linenum 26) -> (linenum 26)
stmt: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: "sv_save1" -> "sv_save1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 27) -> (linenum 27)
stmt: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: "sv_save2" -> "sv_save2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 28) -> (linenum 28)
stmt: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: "sv_save3" -> "sv_save3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 29) -> (linenum 29)
stmt: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: "sv_save4" -> "sv_save4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 30) -> (linenum 30)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: "Help" -> "Help"
stmt: (linenum 34) -> (linenum 34)
stmt: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: "help_generic" -> "help_generic"
expr: "General" -> "General"
stmt: (linenum 35) -> (linenum 35)
stmt: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: "help_about" -> "help_about"
expr: "About" -> "About"
stmt: (linenum 36) -> (linenum 36)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 38) -> (linenum 38)
expr: (funcall PDGLUI_EndMenu) -> (funcall PDGLUI_EndMenu)
BLK Game_CreateMainMenu, SA No, Capture=Yes
08A65F30 02 0108         dbgmark "game/main.bs" 8 
08A65F33 2A 02           tymark #"(Cs)r" 
08A65F35 10 03           push "menu" 
08A65F37 23 04           call_s PDGLUI_BeginMenu 
08A65F39 11              pop 
08A65F3A 05 0A           ln 10 
08A65F3C 2A 02           tymark #"(Cs)r" 
08A65F3E 10 05           push "&New Game" 
08A65F40 23 06           call_s PDGLUI_BeginSubMenu 
08A65F42 11              pop 
08A65F43 05 0B           ln 11 
08A65F45 2A 07           tymark #"(CsCs)r" 
08A65F47 10 08           push "ng_peaceful" 
08A65F49 10 09           push "Peaceful" 
08A65F4B 23 0A           call_s PDGLUI_MenuItem 
08A65F4D 11              pop 
08A65F4E 05 0C           ln 12 
08A65F50 2A 07           tymark #"(CsCs)r" 
08A65F52 10 0B           push "ng_easy" 
08A65F54 10 0C           push "Easy" 
08A65F56 23 0A           call_s PDGLUI_MenuItem 
08A65F58 11              pop 
08A65F59 05 0D           ln 13 
08A65F5B 2A 07           tymark #"(CsCs)r" 
08A65F5D 10 0D           push "ng_medium" 
08A65F5F 10 0E           push "Medium" 
08A65F61 23 0A           call_s PDGLUI_MenuItem 
08A65F63 11              pop 
08A65F64 05 0E           ln 14 
08A65F66 2A 07           tymark #"(CsCs)r" 
08A65F68 10 0F           push "ng_hard" 
08A65F6A 10 10           push "Hard" 
08A65F6C 23 0A           call_s PDGLUI_MenuItem 
08A65F6E 11              pop 
08A65F6F 05 0F           ln 15 
08A65F71 2A 07           tymark #"(CsCs)r" 
08A65F73 10 11           push "ng_nightmare" 
08A65F75 10 12           push "Nightmare" 
08A65F77 23 0A           call_s PDGLUI_MenuItem 
08A65F79 11              pop 
08A65F7A 05 10           ln 16 
08A65F7C 2A 13           tymark #"()r" 
08A65F7E 23 14           call_s PDGLUI_EndSubMenu 
08A65F80 11              pop 
08A65F81 05 12           ln 18 
08A65F83 2A 02           tymark #"(Cs)r" 
08A65F85 10 15           push "&Load Game" 
08A65F87 23 06           call_s PDGLUI_BeginSubMenu 
08A65F89 11              pop 
08A65F8A 05 13           ln 19 
08A65F8C 2A 07           tymark #"(CsCs)r" 
08A65F8E 10 16           push "sv_load1" 
08A65F90 10 17           push "Game 1" 
08A65F92 23 0A           call_s PDGLUI_MenuItem 
08A65F94 11              pop 
08A65F95 05 14           ln 20 
08A65F97 2A 07           tymark #"(CsCs)r" 
08A65F99 10 18           push "sv_load2" 
08A65F9B 10 19           push "Game 2" 
08A65F9D 23 0A           call_s PDGLUI_MenuItem 
08A65F9F 11              pop 
08A65FA0 05 15           ln 21 
08A65FA2 2A 07           tymark #"(CsCs)r" 
08A65FA4 10 1A           push "sv_load3" 
08A65FA6 10 1B           push "Game 3" 
08A65FA8 23 0A           call_s PDGLUI_MenuItem 
08A65FAA 11              pop 
08A65FAB 05 16           ln 22 
08A65FAD 2A 07           tymark #"(CsCs)r" 
08A65FAF 10 1C           push "sv_load4" 
08A65FB1 10 1D           push "Game 4" 
08A65FB3 23 0A           call_s PDGLUI_MenuItem 
08A65FB5 11              pop 
08A65FB6 05 17           ln 23 
08A65FB8 2A 13           tymark #"()r" 
08A65FBA 23 14           call_s PDGLUI_EndSubMenu 
08A65FBC 11              pop 
08A65FBD 05 19           ln 25 
08A65FBF 2A 02           tymark #"(Cs)r" 
08A65FC1 10 1E           push "&Save Game" 
08A65FC3 23 06           call_s PDGLUI_BeginSubMenu 
08A65FC5 11              pop 
08A65FC6 05 1A           ln 26 
08A65FC8 2A 07           tymark #"(CsCs)r" 
08A65FCA 10 1F           push "sv_save1" 
08A65FCC 10 17           push "Game 1" 
08A65FCE 23 0A           call_s PDGLUI_MenuItem 
08A65FD0 11              pop 
08A65FD1 05 1B           ln 27 
08A65FD3 2A 07           tymark #"(CsCs)r" 
08A65FD5 10 20           push "sv_save2" 
08A65FD7 10 19           push "Game 2" 
08A65FD9 23 0A           call_s PDGLUI_MenuItem 
08A65FDB 11              pop 
08A65FDC 05 1C           ln 28 
08A65FDE 2A 07           tymark #"(CsCs)r" 
08A65FE0 10 21           push "sv_save3" 
08A65FE2 10 1B           push "Game 3" 
08A65FE4 23 0A           call_s PDGLUI_MenuItem 
08A65FE6 11              pop 
08A65FE7 05 1D           ln 29 
08A65FE9 2A 07           tymark #"(CsCs)r" 
08A65FEB 10 22           push "sv_save4" 
08A65FED 10 1D           push "Game 4" 
08A65FEF 23 0A           call_s PDGLUI_MenuItem 
08A65FF1 11              pop 
08A65FF2 05 1E           ln 30 
08A65FF4 2A 13           tymark #"()r" 
08A65FF6 23 14           call_s PDGLUI_EndSubMenu 
08A65FF8 11              pop 
08A65FF9 05 21           ln 33 
08A65FFB 2A 02           tymark #"(Cs)r" 
08A65FFD 10 23           push "Help" 
08A65FFF 23 06           call_s PDGLUI_BeginSubMenu 
08A66001 11              pop 
08A66002 05 22           ln 34 
08A66004 2A 07           tymark #"(CsCs)r" 
08A66006 10 24           push "help_generic" 
08A66008 10 25           push "General" 
08A6600A 23 0A           call_s PDGLUI_MenuItem 
08A6600C 11              pop 
08A6600D 05 23           ln 35 
08A6600F 2A 07           tymark #"(CsCs)r" 
08A66011 10 26           push "help_about" 
08A66013 10 27           push "About" 
08A66015 23 0A           call_s PDGLUI_MenuItem 
08A66017 11              pop 
08A66018 05 24           ln 36 
08A6601A 2A 13           tymark #"()r" 
08A6601C 23 14           call_s PDGLUI_EndSubMenu 
08A6601E 11              pop 
08A6601F 05 26           ln 38 
08A66021 2A 13           tymark #"()r" 
08A66023 24 28           tailcall_s PDGLUI_EndMenu 
08A66025 1A              clearenv 
08A66026 29              ret 

stmt: (linenum 41) -> (linenum 41)
stmt: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: "BGBScript Main Start\n" -> "BGBScript Main Start\n"
stmt: (linenum 43) -> (linenum 43)
stmt: (flag extern (import "game_cl/main")) -> (flag extern (import "game_cl/main"))
stmt: (linenum 45) -> (linenum 45)
stmt: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
expr: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
stmt: (linenum 47) -> (linenum 47)
expr: (funcall printf "BGBScript Main End\n") -> (funcall printf "BGBScript Main End\n")
expr: "BGBScript Main End\n" -> "BGBScript Main End\n"
BLK (null), SA No, Capture=Yes
08A66110 02 0106         dbgmark "game/main.bs" 6 
08A66113 10 02           push #!<svm_blk_t:08A65E10> 
08A66115 97 030400       tybind Game_CreateMainMenu #"()r" () 
08A66119 05 29           ln 41 
08A6611B 2A 05           tymark #"(Cs)r" 
08A6611D 10 06           push "BGBScript Main Start\n" 
08A6611F 23 07           call_s gc_printf 
08A66121 11              pop 
08A66122 05 2B           ln 43 
08A66124 9A 0809         import "game_cl/main" Ce 
08A66127 05 2D           ln 45 
08A66129 2A 04           tymark #"()r" 
08A6612B 23 03           call_s Game_CreateMainMenu 
08A6612D 11              pop 
08A6612E 05 2F           ln 47 
08A66130 2A 05           tymark #"(Cs)r" 
08A66132 10 0A           push "BGBScript Main End\n" 
08A66134 24 07           tailcall_s gc_printf 
08A66136 29              ret 

BGBScript Main Start
BGBScript Main End
()
new frag
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x08A62950
call @0x009D18D9
mov [esp+4], eax
call @0x009D16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x009D2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BTGE_ClientInitFunc: BTCL_FlushWorld Pass 0B1112CB
BTGE_ServerInitFunc: BTGE_WorldTeardown Pass 0E7721D0
BTGE_ClientInitFunc: BTCL_LoadMapFile Pass 0B111136
BTGE_ServerInitFunc: BTSV_LoadMapFile Pass 0E771F82
Map Loaded: 0 brushes, 4 ents, 1 lights
BTGE_ServerInitFunc: btsvSpawnWorld Pass 0E771DC0
BT_SpawnWorld 0D5E0BC0
stmt: (dbgmark "game_sv/main.bs" 1) -> (dbgmark "game_sv/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: "BGBScript Server Start\n" -> "BGBScript Server Start\n"
stmt: (linenum 5) -> (linenum 5)
stmt: (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))))) -> (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))) -> (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))) -> (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")) -> (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))
stmt: (dbgmark "game_sv/main.bs" 9) -> (dbgmark "game_sv/main.bs" 9)
expr: (funcall printf "BTSV_ScriptInit: Called\n") -> (funcall printf "BTSV_ScriptInit: Called\n")
expr: "BTSV_ScriptInit: Called\n" -> "BTSV_ScriptInit: Called\n"
BLK BTSV_ScriptInit, SA No, Capture=Yes
08A6E720 02 0109         dbgmark "game_sv/main.bs" 9 
08A6E723 2A 02           tymark #"(Cs)r" 
08A6E725 10 03           push "BTSV_ScriptInit: Called\n" 
08A6E727 24 04           tailcall_s gc_printf 
08A6E729 1A              clearenv 
08A6E72A 29              ret 

stmt: (linenum 13) -> (linenum 13)
stmt: (flag extern (import "game_sv/EntityBase")) -> (flag extern (import "game_sv/EntityBase"))
stmt: (linenum 14) -> (linenum 14)
expr: (flag extern (import "game_sv/MonsterGeneric")) -> (flag extern (import "game_sv/MonsterGeneric"))
BLK (null), SA No, Capture=Yes
08A6E7D0 02 0101         dbgmark "game_sv/main.bs" 1 
08A6E7D3 9A 0203         import "C" n 
08A6E7D6 05 03           ln 3 
08A6E7D8 2A 04           tymark #"(Cs)r" 
08A6E7DA 10 05           push "BGBScript Server Start\n" 
08A6E7DC 23 06           call_s gc_printf 
08A6E7DE 11              pop 
08A6E7DF 05 05           ln 5 
08A6E7E1 C200 0703       begin_package C/game_sv/main n 
08A6E7E5 05 07           ln 7 
08A6E7E7 10 08           push #!<svm_blk_t:08A6E690> 
08A6E7E9 97 090A00       tybind BTSV_ScriptInit #"()v" () 
08A6E7ED C204            end_package 
08A6E7EF 11              pop 
08A6E7F0 05 0D           ln 13 
08A6E7F2 9A 0B0C         import "game_sv/EntityBase" Ce 
08A6E7F5 05 0E           ln 14 
08A6E7F7 9A 0D0C         import "game_sv/MonsterGeneric" Ce 
08A6E7FA 42              push_null 
08A6E7FB 29              ret 

BGBScript Server Start
stmt: (dbgmark "game_sv/EntityBase.bs" 1) -> (dbgmark "game_sv/EntityBase.bs" 1)
stmt: (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin)))))) -> (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin))))))
expr: () -> ()
expr: () -> ()
expr: (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))) -> (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 9) -> (dbgmark "game_sv/EntityBase.bs" 9)
stmt: (set! entity ent) -> (set! entity ent)
expr: ent -> ent
stmt: (linenum 10) -> (linenum 10)
expr: (set! spawnEntity sent) -> (set! spawnEntity sent)
expr: sent -> sent
BLK EntityBase, SA Yes, Capture=Yes
08A70FF0 02 0109         dbgmark "game_sv/EntityBase.bs" 9 
08A70FF3 5A 01           lload 1 
08A70FF5 13 02           store entity 
08A70FF7 05 0A           ln 10 
08A70FF9 5A 00           lload 0 
08A70FFB 30              dup 
08A70FFC 13 03           store spawnEntity 
08A70FFE 1A              clearenv 
08A70FFF 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
08A71900 42              push_null 
08A71901 1A              clearenv 
08A71902 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
08A721F0 42              push_null 
08A721F1 1A              clearenv 
08A721F2 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
08A72AE0 42              push_null 
08A72AE1 1A              clearenv 
08A72AE2 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
08A733D0 42              push_null 
08A733D1 1A              clearenv 
08A733D2 29              ret 

expr: (rlambda die (self other damage) (begin)) -> (rlambda die (self other damage) (begin))
expr: (begin) -> ()
BLK die, SA Yes, Capture=Yes
08A73CE0 42              push_null 
08A73CE1 1A              clearenv 
08A73CE2 29              ret 

expr: (rlambda prethink (self) (begin)) -> (rlambda prethink (self) (begin))
expr: (begin) -> ()
BLK prethink, SA Yes, Capture=Yes
08A745D0 42              push_null 
08A745D1 1A              clearenv 
08A745D2 29              ret 

stmt: (dbgmark "game_sv/EntityBase.bs" 21) -> (dbgmark "game_sv/EntityBase.bs" 21)
expr: (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin)))))) -> (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin))))))
expr: (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))) -> (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 26) -> (dbgmark "game_sv/EntityBase.bs" 26)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK ActorBase, SA Yes, Capture=Yes
08A74EC0 02 011A         dbgmark "game_sv/EntityBase.bs" 26 
08A74EC3 20              mark 
08A74EC4 5A 01           lload 1 
08A74EC6 5A 00           lload 0 
08A74EC8 C20E            call_super 
08A74ECA 1A              clearenv 
08A74ECB 29              ret 

expr: (rlambda stand (self) (begin)) -> (rlambda stand (self) (begin))
expr: (begin) -> ()
BLK stand, SA Yes, Capture=Yes
08A757B0 42              push_null 
08A757B1 1A              clearenv 
08A757B2 29              ret 

expr: (rlambda walk (self) (begin)) -> (rlambda walk (self) (begin))
expr: (begin) -> ()
BLK walk, SA Yes, Capture=Yes
08A760A0 42              push_null 
08A760A1 1A              clearenv 
08A760A2 29              ret 

expr: (rlambda run (self) (begin)) -> (rlambda run (self) (begin))
expr: (begin) -> ()
BLK run, SA Yes, Capture=Yes
08A76990 42              push_null 
08A76991 1A              clearenv 
08A76992 29              ret 

expr: (rlambda missile (self) (begin)) -> (rlambda missile (self) (begin))
expr: (begin) -> ()
BLK missile, SA Yes, Capture=Yes
08A77280 42              push_null 
08A77281 1A              clearenv 
08A77282 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
08A77B70 42              push_null 
08A77B71 1A              clearenv 
08A77B72 29              ret 

BLK (null), SA No, Capture=Yes
08A77CC0 02 0101         dbgmark "game_sv/EntityBase.bs" 1 
08A77CC3 C202 020003     begin_class EntityBase () p 
08A77CC8 42              push_null 
08A77CC9 97 040003       tybind entity () p 
08A77CCD 42              push_null 
08A77CCE 97 050003       tybind spawnEntity () p 
08A77CD2 10 06           push #!<svm_blk_t:08A70F60> 
08A77CD4 97 020703       tybind EntityBase #"(rr)r" p 
08A77CD8 10 08           push #!<svm_blk_t:08A71880> 
08A77CDA 97 090703       tybind use #"(rr)r" p 
08A77CDE 10 0A           push #!<svm_blk_t:08A72170> 
08A77CE0 97 0B0703       tybind touch #"(rr)r" p 
08A77CE4 10 0C           push #!<svm_blk_t:08A72A60> 
08A77CE6 97 0D0703       tybind blocked #"(rr)r" p 
08A77CEA 10 0E           push #!<svm_blk_t:08A73350> 
08A77CEC 97 0F1003       tybind pain #"(rrr)r" p 
08A77CF0 10 11           push #!<svm_blk_t:08A73C60> 
08A77CF2 97 121003       tybind die #"(rrr)r" p 
08A77CF6 10 13           push #!<svm_blk_t:08A74550> 
08A77CF8 97 141503       tybind prethink #"(r)r" p 
08A77CFC C206            end_class 
08A77CFE 11              pop 
08A77CFF 02 0115         dbgmark "game_sv/EntityBase.bs" 21 
08A77D02 C202 160203     begin_class ActorBase EntityBase p 
08A77D07 10 17           push #!<svm_blk_t:08A74E40> 
08A77D09 97 160703       tybind ActorBase #"(rr)r" p 
08A77D0D 10 18           push #!<svm_blk_t:08A75730> 
08A77D0F 97 191503       tybind stand #"(r)r" p 
08A77D13 10 1A           push #!<svm_blk_t:08A76020> 
08A77D15 97 1B1503       tybind walk #"(r)r" p 
08A77D19 10 1C           push #!<svm_blk_t:08A76910> 
08A77D1B 97 1D1503       tybind run #"(r)r" p 
08A77D1F 10 1E           push #!<svm_blk_t:08A77200> 
08A77D21 97 1F1503       tybind missile #"(r)r" p 
08A77D25 10 20           push #!<svm_blk_t:08A77AF0> 
08A77D27 97 211503       tybind melee #"(r)r" p 
08A77D2B C206            end_class 
08A77D2D 29              ret 

Add Slot 08A78E30 entity r
Add Slot 08A78FD0 spawnEntity r
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 2) -> (dbgmark "game_sv/MonsterGeneric.bs" 2)
stmt: (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))))))) -> (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))))))
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 19) -> (dbgmark "game_sv/MonsterGeneric.bs" 19)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 21) -> (linenum 21)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
08A7C0A0 02 0113         dbgmark "game_sv/MonsterGeneric.bs" 19 
08A7C0A3 2A 02           tymark #"()r" 
08A7C0A5 23 03           call_s btRandom 
08A7C0A7 10 04           push 0.100000 
08A7C0A9 7A 111300       jmp_cond_b ge 08A7C0C0 
08A7C0AD 05 15           ln 21 
08A7C0AF 2A 05           tymark #"(rrrrr)r" 
08A7C0B1 5A 00           lload 0 
08A7C0B3 48              push_2 
08A7C0B4 5A 00           lload 0 
08A7C0B6 64 06           loadindex_s snd_idle 
08A7C0B8 59 6400         push_sv_f 1 
08A7C0BB 47              push_1 
08A7C0BC 23 07           call_s btSound 
08A7C0BE 1A              clearenv 
08A7C0BF 29              ret 
08A7C0C0 42              push_null 
08A7C0C1 1A              clearenv 
08A7C0C2 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 30) -> (dbgmark "game_sv/MonsterGeneric.bs" 30)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 31) -> (linenum 31)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: self -> self
expr: "models/monsters/soldier/soldier.model" -> "models/monsters/soldier/soldier.model"
stmt: (linenum 34) -> (linenum 34)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 35) -> (linenum 35)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 37) -> (linenum 37)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (vector (unary - 16) (unary - 16) (unary - 24)) -> (vector (unary - 16) (unary - 16) (unary - 24))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 24) -> -24
expr: self -> self
stmt: (linenum 38) -> (linenum 38)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 39) -> (linenum 39)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 43) -> (linenum 43)
expr: (funcall btWalkmonsterStart self) -> (funcall btWalkmonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
08A7CAB0 02 011E         dbgmark "game_sv/MonsterGeneric.bs" 30 
08A7CAB3 49              push_3 
08A7CAB4 36              dup_f 
08A7CAB5 5A 00           lload 0 
08A7CAB7 65 02           storeindex_s solidtype 
08A7CAB9 11              pop 
08A7CABA 05 1F           ln 31 
08A7CABC 48              push_2 
08A7CABD 36              dup_f 
08A7CABE 5A 00           lload 0 
08A7CAC0 65 03           storeindex_s movetype 
08A7CAC2 11              pop 
08A7CAC3 05 21           ln 33 
08A7CAC5 2A 04           tymark #"(rCs)r" 
08A7CAC7 5A 00           lload 0 
08A7CAC9 10 05           push "models/monsters/soldier/soldier.model" 
08A7CACB 23 06           call_s btSetModel 
08A7CACD 11              pop 
08A7CACE 05 22           ln 34 
08A7CAD0 10 07           push "sound/soldier/solsght1" 
08A7CAD2 30              dup 
08A7CAD3 5A 00           lload 0 
08A7CAD5 65 08           storeindex_s snd_sight 
08A7CAD7 11              pop 
08A7CAD8 05 23           ln 35 
08A7CADA 10 09           push "sound/soldier/solidle1" 
08A7CADC 30              dup 
08A7CADD 5A 00           lload 0 
08A7CADF 65 0A           storeindex_s snd_idle 
08A7CAE1 11              pop 
08A7CAE2 05 25           ln 37 
08A7CAE4 20              mark 
08A7CAE5 58 10           push_sv_n 16 
08A7CAE7 58 10           push_sv_n 16 
08A7CAE9 58 18           push_sv_n 24 
08A7CAEB 84              vector 
08A7CAEC 30              dup 
08A7CAED 5A 00           lload 0 
08A7CAEF 65 0B           storeindex_s mins 
08A7CAF1 11              pop 
08A7CAF2 05 26           ln 38 
08A7CAF4 20              mark 
08A7CAF5 57 10           push_sv_p 16 
08A7CAF7 57 10           push_sv_p 16 
08A7CAF9 57 28           push_sv_p 40 
08A7CAFB 84              vector 
08A7CAFC 30              dup 
08A7CAFD 5A 00           lload 0 
08A7CAFF 65 0C           storeindex_s maxs 
08A7CB01 11              pop 
08A7CB02 05 27           ln 39 
08A7CB04 57 1E           push_sv_p 30 
08A7CB06 36              dup_f 
08A7CB07 5A 00           lload 0 
08A7CB09 65 0D           storeindex_s health 
08A7CB0B 11              pop 
08A7CB0C 05 2B           ln 43 
08A7CB0E 2A 0E           tymark #"(r)r" 
08A7CB10 5A 00           lload 0 
08A7CB12 24 0F           tailcall_s btWalkmonsterStart 
08A7CB14 1A              clearenv 
08A7CB15 29              ret 

expr: (rlambda deinit (self) (begin)) -> (rlambda deinit (self) (begin))
expr: (begin) -> ()
BLK deinit, SA Yes, Capture=Yes
08A7D400 42              push_null 
08A7D401 1A              clearenv 
08A7D402 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
08A7DCF0 42              push_null 
08A7DCF1 1A              clearenv 
08A7DCF2 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
08A7E5E0 42              push_null 
08A7E5E1 1A              clearenv 
08A7E5E2 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
08A7EED0 42              push_null 
08A7EED1 1A              clearenv 
08A7EED2 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
08A7F7C0 42              push_null 
08A7F7C1 1A              clearenv 
08A7F7C2 29              ret 

expr: (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) -> (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 65) -> (dbgmark "game_sv/MonsterGeneric.bs" 65)
expr: (funcall BT_EntityRobotExplode self) -> (funcall BT_EntityRobotExplode self)
expr: self -> self
BLK die, SA Yes, Capture=Yes
08A800C0 02 0141         dbgmark "game_sv/MonsterGeneric.bs" 65 
08A800C3 2A 02           tymark #"(r)r" 
08A800C5 5A 02           lload 2 
08A800C7 24 03           tailcall_s BT_EntityRobotExplode 
08A800C9 1A              clearenv 
08A800CA 29              ret 

expr: (rlambda cmdmsg (self other str) (begin)) -> (rlambda cmdmsg (self other str) (begin))
expr: (begin) -> ()
BLK cmdmsg, SA Yes, Capture=Yes
08A809B0 42              push_null 
08A809B1 1A              clearenv 
08A809B2 29              ret 

expr: (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) -> (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 73) -> (dbgmark "game_sv/MonsterGeneric.bs" 73)
expr: (funcall btSetMove self stand1_mfi) -> (funcall btSetMove self stand1_mfi)
expr: self -> self
expr: stand1_mfi -> stand1_mfi
BLK stand, SA Yes, Capture=Yes
08A812B0 02 0149         dbgmark "game_sv/MonsterGeneric.bs" 73 
08A812B3 2A 02           tymark #"(rr)r" 
08A812B5 5A 00           lload 0 
08A812B7 12 03           load stand1_mfi 
08A812B9 24 04           tailcall_s btSetMove 
08A812BB 1A              clearenv 
08A812BC 29              ret 

expr: (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) -> (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 78) -> (dbgmark "game_sv/MonsterGeneric.bs" 78)
expr: (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)) -> (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
BLK walk1_random, SA Yes, Capture=Yes
08A81BE0 02 014E         dbgmark "game_sv/MonsterGeneric.bs" 78 
08A81BE3 2A 02           tymark #"()r" 
08A81BE5 23 03           call_s btRandom 
08A81BE7 10 04           push 0.100000 
08A81BE9 7A 100800       jmp_cond_b le 08A81BF5 
08A81BED 2A 05           tymark #"(rr)r" 
08A81BEF 5A 00           lload 0 
08A81BF1 12 06           load walk1_mfi 
08A81BF3 24 07           tailcall_s btSetMove 
08A81BF5 42              push_null 
08A81BF6 1A              clearenv 
08A81BF7 29              ret 

expr: (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) -> (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 84) -> (dbgmark "game_sv/MonsterGeneric.bs" 84)
expr: (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)) -> (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.500000 -> 0.500000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
expr: (funcall btSetMove self walk2_mfi) -> (funcall btSetMove self walk2_mfi)
expr: self -> self
expr: walk2_mfi -> walk2_mfi
BLK walk, SA Yes, Capture=Yes
08A82520 02 0154         dbgmark "game_sv/MonsterGeneric.bs" 84 
08A82523 2A 02           tymark #"()r" 
08A82525 23 03           call_s btRandom 
08A82527 59 3200         push_sv_f 0.5 
08A8252A 7A 100800       jmp_cond_b le 08A82536 
08A8252E 2A 04           tymark #"(rr)r" 
08A82530 5A 00           lload 0 
08A82532 12 05           load walk1_mfi 
08A82534 24 06           tailcall_s btSetMove 
08A82536 2A 04           tymark #"(rr)r" 
08A82538 5A 00           lload 0 
08A8253A 12 07           load walk2_mfi 
08A8253C 24 06           tailcall_s btSetMove 
08A8253E 1A              clearenv 
08A8253F 29              ret 

expr: (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) -> (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 91) -> (dbgmark "game_sv/MonsterGeneric.bs" 91)
expr: (funcall btSetMove self run_mfi) -> (funcall btSetMove self run_mfi)
expr: self -> self
expr: run_mfi -> run_mfi
BLK run, SA Yes, Capture=Yes
08A82E30 02 015B         dbgmark "game_sv/MonsterGeneric.bs" 91 
08A82E33 2A 02           tymark #"(rr)r" 
08A82E35 5A 00           lload 0 
08A82E37 12 03           load run_mfi 
08A82E39 24 04           tailcall_s btSetMove 
08A82E3B 1A              clearenv 
08A82E3C 29              ret 

expr: (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) -> (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 93) -> (dbgmark "game_sv/MonsterGeneric.bs" 93)
expr: (funcall btSetMove self attack1_mfi) -> (funcall btSetMove self attack1_mfi)
expr: self -> self
expr: attack1_mfi -> attack1_mfi
BLK missile, SA Yes, Capture=Yes
08A83730 02 015D         dbgmark "game_sv/MonsterGeneric.bs" 93 
08A83733 2A 02           tymark #"(rr)r" 
08A83735 5A 00           lload 0 
08A83737 12 03           load attack1_mfi 
08A83739 24 04           tailcall_s btSetMove 
08A8373B 1A              clearenv 
08A8373C 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 97) -> (dbgmark "game_sv/MonsterGeneric.bs" 97)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 101) -> (linenum 101)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 102) -> (linenum 102)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 105) -> (linenum 105)
expr: (funcall BT_FireBlaster self org dir 25 600 32) -> (funcall BT_FireBlaster self org dir 25 600 32)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 25 -> 25
expr: 600 -> 600
expr: 32 -> 32
BLK think_fire, SA Yes, Capture=Yes
08A84060 02 0161         dbgmark "game_sv/MonsterGeneric.bs" 97 
08A84063 42              push_null 
08A84064 16 02           lexbind org 
08A84066 42              push_null 
08A84067 16 03           lexbind dir 
08A84069 05 65           ln 101 
08A8406B 2A 04           tymark #"(r)r" 
08A8406D 5A 02           lload 2 
08A8406F 23 05           call_s BT_AimOrigin 
08A84071 5B 01           lstore 1 
08A84073 05 66           ln 102 
08A84075 2A 06           tymark #"(rrr)r" 
08A84077 5A 02           lload 2 
08A84079 5A 02           lload 2 
08A8407B 64 07           loadindex_s enemy 
08A8407D 45 5802         push_sv 600 
08A84080 23 08           call_s BT_AimDirection 
08A84082 5B 00           lstore 0 
08A84084 05 69           ln 105 
08A84086 2A 09           tymark #"(rrrrrr)r" 
08A84088 5A 02           lload 2 
08A8408A 5A 01           lload 1 
08A8408C 5A 00           lload 0 
08A8408E 57 19           push_sv_p 25 
08A84090 45 5802         push_sv 600 
08A84093 57 20           push_sv_p 32 
08A84095 24 0A           tailcall_s BT_FireBlaster 
08A84097 1A              clearenv 
08A84098 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
08A84980 42              push_null 
08A84981 1A              clearenv 
08A84982 29              ret 

expr: (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))) -> (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 115) -> (dbgmark "game_sv/MonsterGeneric.bs" 115)
stmt: (funcall super ent sent) -> (funcall super ent sent)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
stmt: (linenum 118) -> (linenum 118)
expr: (methodcall this init ent) -> (methodcall this init ent)
expr: ent -> ent
expr: this -> this
BLK monster_generic2, SA Yes, Capture=Yes
08A852A0 02 0173         dbgmark "game_sv/MonsterGeneric.bs" 115 
08A852A3 20              mark 
08A852A4 5A 01           lload 1 
08A852A6 5A 00           lload 0 
08A852A8 C20E            call_super 
08A852AA 11              pop 
08A852AB 05 76           ln 118 
08A852AD 2A 02           tymark #"(r)r" 
08A852AF 5A 01           lload 1 
08A852B1 19              push_self 
08A852B2 28 03           methodtailcall_s init 
08A852B4 1A              clearenv 
08A852B5 29              ret 

expr: (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))) -> (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))
stmt: (linenum 125) -> (linenum 125)
stmt: (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) -> (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)))
expr: (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)) -> (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))
expr: (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) -> (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self))))
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 128) (funcall think_idle self))) -> (lambda (self) (begin (linenum 128) (funcall think_idle self)))
expr: (begin (linenum 128) (funcall think_idle self)) -> (begin (linenum 128) (funcall think_idle self))
stmt: (linenum 128) -> (linenum 128)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08A86520 05 8080         ln 128 
08A86523 2A 01           tymark #"(r)r" 
08A86525 5A 00           lload 0 
08A86527 24 02           tailcall_s think_idle 
08A86529 1A              clearenv 
08A8652A 29              ret 

expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
stmt: (linenum 147) -> (linenum 147)
stmt: (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) -> (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 150) (funcall think_idle self))) -> (lambda (self) (begin (linenum 150) (funcall think_idle self)))
expr: (begin (linenum 150) (funcall think_idle self)) -> (begin (linenum 150) (funcall think_idle self))
stmt: (linenum 150) -> (linenum 150)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08A86E10 05 8096         ln 150 
08A86E13 2A 01           tymark #"(r)r" 
08A86E15 5A 00           lload 0 
08A86E17 24 02           tailcall_s think_idle 
08A86E19 1A              clearenv 
08A86E1A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 walk1_random) -> (array btaiWalk 0 walk1_random)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: walk1_random -> walk1_random
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 169) -> (linenum 169)
stmt: (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) -> (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 172) (funcall think_idle self))) -> (lambda (self) (begin (linenum 172) (funcall think_idle self)))
expr: (begin (linenum 172) (funcall think_idle self)) -> (begin (linenum 172) (funcall think_idle self))
stmt: (linenum 172) -> (linenum 172)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08A87700 05 80AC         ln 172 
08A87703 2A 01           tymark #"(r)r" 
08A87705 5A 00           lload 0 
08A87707 24 02           tailcall_s think_idle 
08A87709 1A              clearenv 
08A8770A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 180) -> (linenum 180)
stmt: (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) -> (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)))
expr: (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)) -> (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))
expr: (array btaiRun 10 null) -> (array btaiRun 10 null)
expr: btaiRun -> btaiRun
expr: 10 -> 10
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
stmt: (linenum 188) -> (linenum 188)
stmt: (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) -> (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)))
expr: (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)) -> (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))
expr: (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) -> (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self))))
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 191) (funcall think_fire self))) -> (lambda (self) (begin (linenum 191) (funcall think_fire self)))
expr: (begin (linenum 191) (funcall think_fire self)) -> (begin (linenum 191) (funcall think_fire self))
stmt: (linenum 191) -> (linenum 191)
expr: (funcall think_fire self) -> (funcall think_fire self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08A87FF0 05 80BF         ln 191 
08A87FF3 2A 01           tymark #"(r)r" 
08A87FF5 5A 00           lload 0 
08A87FF7 24 02           tailcall_s think_fire 
08A87FF9 1A              clearenv 
08A87FFA 29              ret 

expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
stmt: (linenum 200) -> (linenum 200)
stmt: (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) -> (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand))
expr: (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand) -> (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)
expr: "stand1" -> "stand1"
expr: 0 -> 0
expr: 30 -> 30
expr: stand1_mf -> stand1_mf
expr: stand -> stand
stmt: (linenum 203) -> (linenum 203)
stmt: (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) -> (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk))
expr: (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk) -> (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)
expr: "walk1" -> "walk1"
expr: 0 -> 0
expr: 32 -> 32
expr: walk1_mf -> walk1_mf
expr: walk -> walk
stmt: (linenum 206) -> (linenum 206)
stmt: (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) -> (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk))
expr: (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk) -> (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)
expr: "walk2" -> "walk2"
expr: 0 -> 0
expr: 10 -> 10
expr: walk2_mf -> walk2_mf
expr: walk -> walk
stmt: (linenum 209) -> (linenum 209)
stmt: (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) -> (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run))
expr: (funcall btDyBuildMove "run" 2 8 run_mf run) -> (funcall btDyBuildMove "run" 2 8 run_mf run)
expr: "run" -> "run"
expr: 2 -> 2
expr: 8 -> 8
expr: run_mf -> run_mf
expr: run -> run
stmt: (linenum 212) -> (linenum 212)
stmt: (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) -> (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run))
expr: (funcall btDyBuildMove "attack1" 2 8 attack1_mf run) -> (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)
expr: "attack1" -> "attack1"
expr: 2 -> 2
expr: 8 -> 8
expr: attack1_mf -> attack1_mf
expr: run -> run
stmt: (linenum 216) -> (linenum 216)
expr: (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)) -> (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))
expr: "This A = %p, run=%p, this.run=%p\n" -> "This A = %p, run=%p, this.run=%p\n"
expr: this -> this
expr: run -> run
expr: (objref this run) -> (objref this run)
expr: this -> this
BLK (null), SA No, Capture=Yes
08A88180 05 7D           ln 125 
08A88182 20              mark 
08A88183 20              mark 
08A88184 12 01           load btaiStand 
08A88186 46              push_0 
08A88187 10 02           push #!<svm_blk_t:08A864A0> 
08A88189 80              array 
08A8818A 20              mark 
08A8818B 12 01           load btaiStand 
08A8818D 46              push_0 
08A8818E 42              push_null 
08A8818F 80              array 
08A88190 20              mark 
08A88191 12 01           load btaiStand 
08A88193 46              push_0 
08A88194 42              push_null 
08A88195 80              array 
08A88196 20              mark 
08A88197 12 01           load btaiStand 
08A88199 46              push_0 
08A8819A 42              push_null 
08A8819B 80              array 
08A8819C 20              mark 
08A8819D 12 01           load btaiStand 
08A8819F 46              push_0 
08A881A0 42              push_null 
08A881A1 80              array 
08A881A2 20              mark 
08A881A3 12 01           load btaiStand 
08A881A5 46              push_0 
08A881A6 42              push_null 
08A881A7 80              array 
08A881A8 20              mark 
08A881A9 12 01           load btaiStand 
08A881AB 46              push_0 
08A881AC 42              push_null 
08A881AD 80              array 
08A881AE 20              mark 
08A881AF 12 01           load btaiStand 
08A881B1 46              push_0 
08A881B2 42              push_null 
08A881B3 80              array 
08A881B4 20              mark 
08A881B5 12 01           load btaiStand 
08A881B7 46              push_0 
08A881B8 42              push_null 
08A881B9 80              array 
08A881BA 20              mark 
08A881BB 12 01           load btaiStand 
08A881BD 46              push_0 
08A881BE 42              push_null 
08A881BF 80              array 
08A881C0 20              mark 
08A881C1 12 01           load btaiStand 
08A881C3 46              push_0 
08A881C4 42              push_null 
08A881C5 80              array 
08A881C6 20              mark 
08A881C7 12 01           load btaiStand 
08A881C9 46              push_0 
08A881CA 42              push_null 
08A881CB 80              array 
08A881CC 20              mark 
08A881CD 12 01           load btaiStand 
08A881CF 46              push_0 
08A881D0 42              push_null 
08A881D1 80              array 
08A881D2 20              mark 
08A881D3 12 01           load btaiStand 
08A881D5 46              push_0 
08A881D6 42              push_null 
08A881D7 80              array 
08A881D8 20              mark 
08A881D9 12 01           load btaiStand 
08A881DB 46              push_0 
08A881DC 42              push_null 
08A881DD 80              array 
08A881DE 20              mark 
08A881DF 12 01           load btaiStand 
08A881E1 46              push_0 
08A881E2 42              push_null 
08A881E3 80              array 
08A881E4 20              mark 
08A881E5 12 01           load btaiStand 
08A881E7 46              push_0 
08A881E8 42              push_null 
08A881E9 80              array 
08A881EA 20              mark 
08A881EB 12 01           load btaiStand 
08A881ED 46              push_0 
08A881EE 42              push_null 
08A881EF 80              array 
08A881F0 20              mark 
08A881F1 12 01           load btaiStand 
08A881F3 46              push_0 
08A881F4 42              push_null 
08A881F5 80              array 
08A881F6 20              mark 
08A881F7 12 01           load btaiStand 
08A881F9 46              push_0 
08A881FA 42              push_null 
08A881FB 80              array 
08A881FC 20              mark 
08A881FD 12 01           load btaiStand 
08A881FF 46              push_0 
08A88200 42              push_null 
08A88201 80              array 
08A88202 20              mark 
08A88203 12 01           load btaiStand 
08A88205 46              push_0 
08A88206 42              push_null 
08A88207 80              array 
08A88208 20              mark 
08A88209 12 01           load btaiStand 
08A8820B 46              push_0 
08A8820C 42              push_null 
08A8820D 80              array 
08A8820E 20              mark 
08A8820F 12 01           load btaiStand 
08A88211 46              push_0 
08A88212 42              push_null 
08A88213 80              array 
08A88214 20              mark 
08A88215 12 01           load btaiStand 
08A88217 46              push_0 
08A88218 42              push_null 
08A88219 80              array 
08A8821A 20              mark 
08A8821B 12 01           load btaiStand 
08A8821D 46              push_0 
08A8821E 42              push_null 
08A8821F 80              array 
08A88220 20              mark 
08A88221 12 01           load btaiStand 
08A88223 46              push_0 
08A88224 42              push_null 
08A88225 80              array 
08A88226 20              mark 
08A88227 12 01           load btaiStand 
08A88229 46              push_0 
08A8822A 42              push_null 
08A8822B 80              array 
08A8822C 20              mark 
08A8822D 12 01           load btaiStand 
08A8822F 46              push_0 
08A88230 42              push_null 
08A88231 80              array 
08A88232 20              mark 
08A88233 12 01           load btaiStand 
08A88235 46              push_0 
08A88236 42              push_null 
08A88237 80              array 
08A88238 20              mark 
08A88239 12 01           load btaiStand 
08A8823B 46              push_0 
08A8823C 42              push_null 
08A8823D 80              array 
08A8823E 80              array 
08A8823F 13 03           store stand1_mf 
08A88241 05 8093         ln 147 
08A88244 20              mark 
08A88245 20              mark 
08A88246 12 04           load btaiWalk 
08A88248 49              push_3 
08A88249 10 05           push #!<svm_blk_t:08A86D90> 
08A8824B 80              array 
08A8824C 20              mark 
08A8824D 12 04           load btaiWalk 
08A8824F 4B              push_5 
08A88250 42              push_null 
08A88251 80              array 
08A88252 20              mark 
08A88253 12 04           load btaiWalk 
08A88255 49              push_3 
08A88256 42              push_null 
08A88257 80              array 
08A88258 20              mark 
08A88259 12 04           load btaiWalk 
08A8825B 48              push_2 
08A8825C 42              push_null 
08A8825D 80              array 
08A8825E 20              mark 
08A8825F 12 04           load btaiWalk 
08A88261 48              push_2 
08A88262 42              push_null 
08A88263 80              array 
08A88264 20              mark 
08A88265 12 04           load btaiWalk 
08A88267 48              push_2 
08A88268 42              push_null 
08A88269 80              array 
08A8826A 20              mark 
08A8826B 12 04           load btaiWalk 
08A8826D 4B              push_5 
08A8826E 42              push_null 
08A8826F 80              array 
08A88270 20              mark 
08A88271 12 04           load btaiWalk 
08A88273 4B              push_5 
08A88274 42              push_null 
08A88275 80              array 
08A88276 20              mark 
08A88277 12 04           load btaiWalk 
08A88279 48              push_2 
08A8827A 42              push_null 
08A8827B 80              array 
08A8827C 20              mark 
08A8827D 12 04           load btaiWalk 
08A8827F 46              push_0 
08A88280 12 06           load walk1_random 
08A88282 80              array 
08A88283 20              mark 
08A88284 12 04           load btaiWalk 
08A88286 46              push_0 
08A88287 42              push_null 
08A88288 80              array 
08A88289 20              mark 
08A8828A 12 04           load btaiWalk 
08A8828C 46              push_0 
08A8828D 42              push_null 
08A8828E 80              array 
08A8828F 20              mark 
08A88290 12 04           load btaiWalk 
08A88292 46              push_0 
08A88293 42              push_null 
08A88294 80              array 
08A88295 20              mark 
08A88296 12 04           load btaiWalk 
08A88298 46              push_0 
08A88299 42              push_null 
08A8829A 80              array 
08A8829B 20              mark 
08A8829C 12 04           load btaiWalk 
08A8829E 46              push_0 
08A8829F 42              push_null 
08A882A0 80              array 
08A882A1 20              mark 
08A882A2 12 04           load btaiWalk 
08A882A4 46              push_0 
08A882A5 42              push_null 
08A882A6 80              array 
08A882A7 20              mark 
08A882A8 12 04           load btaiWalk 
08A882AA 46              push_0 
08A882AB 42              push_null 
08A882AC 80              array 
08A882AD 20              mark 
08A882AE 12 04           load btaiWalk 
08A882B0 46              push_0 
08A882B1 42              push_null 
08A882B2 80              array 
08A882B3 20              mark 
08A882B4 12 04           load btaiWalk 
08A882B6 46              push_0 
08A882B7 42              push_null 
08A882B8 80              array 
08A882B9 20              mark 
08A882BA 12 04           load btaiWalk 
08A882BC 46              push_0 
08A882BD 42              push_null 
08A882BE 80              array 
08A882BF 20              mark 
08A882C0 12 04           load btaiWalk 
08A882C2 46              push_0 
08A882C3 42              push_null 
08A882C4 80              array 
08A882C5 20              mark 
08A882C6 12 04           load btaiWalk 
08A882C8 46              push_0 
08A882C9 42              push_null 
08A882CA 80              array 
08A882CB 20              mark 
08A882CC 12 04           load btaiWalk 
08A882CE 46              push_0 
08A882CF 42              push_null 
08A882D0 80              array 
08A882D1 20              mark 
08A882D2 12 04           load btaiWalk 
08A882D4 46              push_0 
08A882D5 42              push_null 
08A882D6 80              array 
08A882D7 20              mark 
08A882D8 12 04           load btaiWalk 
08A882DA 46              push_0 
08A882DB 42              push_null 
08A882DC 80              array 
08A882DD 20              mark 
08A882DE 12 04           load btaiWalk 
08A882E0 46              push_0 
08A882E1 42              push_null 
08A882E2 80              array 
08A882E3 20              mark 
08A882E4 12 04           load btaiWalk 
08A882E6 46              push_0 
08A882E7 42              push_null 
08A882E8 80              array 
08A882E9 20              mark 
08A882EA 12 04           load btaiWalk 
08A882EC 46              push_0 
08A882ED 42              push_null 
08A882EE 80              array 
08A882EF 20              mark 
08A882F0 12 04           load btaiWalk 
08A882F2 46              push_0 
08A882F3 42              push_null 
08A882F4 80              array 
08A882F5 20              mark 
08A882F6 12 04           load btaiWalk 
08A882F8 46              push_0 
08A882F9 42              push_null 
08A882FA 80              array 
08A882FB 20              mark 
08A882FC 12 04           load btaiWalk 
08A882FE 46              push_0 
08A882FF 42              push_null 
08A88300 80              array 
08A88301 20              mark 
08A88302 12 04           load btaiWalk 
08A88304 46              push_0 
08A88305 42              push_null 
08A88306 80              array 
08A88307 80              array 
08A88308 13 07           store walk1_mf 
08A8830A 05 80A9         ln 169 
08A8830D 20              mark 
08A8830E 20              mark 
08A8830F 12 04           load btaiWalk 
08A88311 49              push_3 
08A88312 10 08           push #!<svm_blk_t:08A87680> 
08A88314 80              array 
08A88315 20              mark 
08A88316 12 04           load btaiWalk 
08A88318 4B              push_5 
08A88319 42              push_null 
08A8831A 80              array 
08A8831B 20              mark 
08A8831C 12 04           load btaiWalk 
08A8831E 49              push_3 
08A8831F 42              push_null 
08A88320 80              array 
08A88321 20              mark 
08A88322 12 04           load btaiWalk 
08A88324 48              push_2 
08A88325 42              push_null 
08A88326 80              array 
08A88327 20              mark 
08A88328 12 04           load btaiWalk 
08A8832A 48              push_2 
08A8832B 42              push_null 
08A8832C 80              array 
08A8832D 20              mark 
08A8832E 12 04           load btaiWalk 
08A88330 48              push_2 
08A88331 42              push_null 
08A88332 80              array 
08A88333 20              mark 
08A88334 12 04           load btaiWalk 
08A88336 4B              push_5 
08A88337 42              push_null 
08A88338 80              array 
08A88339 20              mark 
08A8833A 12 04           load btaiWalk 
08A8833C 4B              push_5 
08A8833D 42              push_null 
08A8833E 80              array 
08A8833F 20              mark 
08A88340 12 04           load btaiWalk 
08A88342 48              push_2 
08A88343 42              push_null 
08A88344 80              array 
08A88345 20              mark 
08A88346 12 04           load btaiWalk 
08A88348 46              push_0 
08A88349 42              push_null 
08A8834A 80              array 
08A8834B 80              array 
08A8834C 13 09           store walk2_mf 
08A8834E 05 80B4         ln 180 
08A88351 20              mark 
08A88352 20              mark 
08A88353 12 0A           load btaiRun 
08A88355 57 0A           push_sv_p 10 
08A88357 42              push_null 
08A88358 80              array 
08A88359 20              mark 
08A8835A 12 0A           load btaiRun 
08A8835C 57 0B           push_sv_p 11 
08A8835E 42              push_null 
08A8835F 80              array 
08A88360 20              mark 
08A88361 12 0A           load btaiRun 
08A88363 57 0B           push_sv_p 11 
08A88365 42              push_null 
08A88366 80              array 
08A88367 20              mark 
08A88368 12 0A           load btaiRun 
08A8836A 57 0F           push_sv_p 15 
08A8836C 42              push_null 
08A8836D 80              array 
08A8836E 20              mark 
08A8836F 12 0A           load btaiRun 
08A88371 57 0B           push_sv_p 11 
08A88373 42              push_null 
08A88374 80              array 
08A88375 20              mark 
08A88376 12 0A           load btaiRun 
08A88378 57 0F           push_sv_p 15 
08A8837A 42              push_null 
08A8837B 80              array 
08A8837C 20              mark 
08A8837D 12 0A           load btaiRun 
08A8837F 57 0F           push_sv_p 15 
08A88381 42              push_null 
08A88382 80              array 
08A88383 80              array 
08A88384 13 0B           store run_mf 
08A88386 05 80BC         ln 188 
08A88389 20              mark 
08A8838A 20              mark 
08A8838B 12 0C           load btaiCharge 
08A8838D 46              push_0 
08A8838E 10 0D           push #!<svm_blk_t:08A87F70> 
08A88390 80              array 
08A88391 20              mark 
08A88392 12 0C           load btaiCharge 
08A88394 46              push_0 
08A88395 42              push_null 
08A88396 80              array 
08A88397 20              mark 
08A88398 12 0C           load btaiCharge 
08A8839A 46              push_0 
08A8839B 42              push_null 
08A8839C 80              array 
08A8839D 20              mark 
08A8839E 12 0C           load btaiCharge 
08A883A0 46              push_0 
08A883A1 42              push_null 
08A883A2 80              array 
08A883A3 20              mark 
08A883A4 12 0C           load btaiCharge 
08A883A6 46              push_0 
08A883A7 42              push_null 
08A883A8 80              array 
08A883A9 20              mark 
08A883AA 12 0C           load btaiCharge 
08A883AC 46              push_0 
08A883AD 42              push_null 
08A883AE 80              array 
08A883AF 20              mark 
08A883B0 12 0C           load btaiCharge 
08A883B2 46              push_0 
08A883B3 42              push_null 
08A883B4 80              array 
08A883B5 20              mark 
08A883B6 12 0C           load btaiCharge 
08A883B8 46              push_0 
08A883B9 42              push_null 
08A883BA 80              array 
08A883BB 20              mark 
08A883BC 12 0C           load btaiCharge 
08A883BE 46              push_0 
08A883BF 42              push_null 
08A883C0 80              array 
08A883C1 20              mark 
08A883C2 12 0C           load btaiCharge 
08A883C4 46              push_0 
08A883C5 42              push_null 
08A883C6 80              array 
08A883C7 20              mark 
08A883C8 12 0C           load btaiCharge 
08A883CA 46              push_0 
08A883CB 42              push_null 
08A883CC 80              array 
08A883CD 20              mark 
08A883CE 12 0C           load btaiCharge 
08A883D0 46              push_0 
08A883D1 42              push_null 
08A883D2 80              array 
08A883D3 80              array 
08A883D4 13 0E           store attack1_mf 
08A883D6 05 80C8         ln 200 
08A883D9 2A 0F           tymark #"(Csrrrr)r" 
08A883DB 10 10           push "stand1" 
08A883DD 46              push_0 
08A883DE 57 1E           push_sv_p 30 
08A883E0 12 03           load stand1_mf 
08A883E2 12 11           load stand 
08A883E4 23 12           call_s btDyBuildMove 
08A883E6 13 13           store stand1_mfi 
08A883E8 05 80CB         ln 203 
08A883EB 2A 0F           tymark #"(Csrrrr)r" 
08A883ED 10 14           push "walk1" 
08A883EF 46              push_0 
08A883F0 57 20           push_sv_p 32 
08A883F2 12 07           load walk1_mf 
08A883F4 12 15           load walk 
08A883F6 23 12           call_s btDyBuildMove 
08A883F8 13 16           store walk1_mfi 
08A883FA 05 80CE         ln 206 
08A883FD 2A 0F           tymark #"(Csrrrr)r" 
08A883FF 10 17           push "walk2" 
08A88401 46              push_0 
08A88402 57 0A           push_sv_p 10 
08A88404 12 09           load walk2_mf 
08A88406 12 15           load walk 
08A88408 23 12           call_s btDyBuildMove 
08A8840A 13 18           store walk2_mfi 
08A8840C 05 80D1         ln 209 
08A8840F 2A 0F           tymark #"(Csrrrr)r" 
08A88411 10 19           push "run" 
08A88413 48              push_2 
08A88414 57 08           push_sv_p 8 
08A88416 12 0B           load run_mf 
08A88418 12 1A           load run 
08A8841A 23 12           call_s btDyBuildMove 
08A8841C 13 1B           store run_mfi 
08A8841E 05 80D4         ln 212 
08A88421 2A 0F           tymark #"(Csrrrr)r" 
08A88423 10 1C           push "attack1" 
08A88425 48              push_2 
08A88426 57 08           push_sv_p 8 
08A88428 12 0E           load attack1_mf 
08A8842A 12 1A           load run 
08A8842C 23 12           call_s btDyBuildMove 
08A8842E 13 1D           store attack1_mfi 
08A88430 05 80D8         ln 216 
08A88433 2A 1E           tymark #"(Csrrr)r" 
08A88435 10 1F           push "This A = %p, run=%p, this.run=%p\n" 
08A88437 19              push_self 
08A88438 12 1A           load run 
08A8843A 19              push_self 
08A8843B 64 1A           loadindex_s run 
08A8843D 24 20           tailcall_s gc_printf 
08A8843F 29              ret 

stmt: (linenum 222) -> (linenum 222)
stmt: (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))) -> (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 226) -> (dbgmark "game_sv/MonsterGeneric.bs" 226)
stmt: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: "passive_sheep: ctor\n" -> "passive_sheep: ctor\n"
stmt: (linenum 227) -> (linenum 227)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_sheep, SA Yes, Capture=Yes
08A88D30 02 0180E2       dbgmark "game_sv/MonsterGeneric.bs" 226 
08A88D34 2A 02           tymark #"(Cs)r" 
08A88D36 10 03           push "passive_sheep: ctor\n" 
08A88D38 23 04           call_s gc_printf 
08A88D3A 11              pop 
08A88D3B 05 80E3         ln 227 
08A88D3E 20              mark 
08A88D3F 5A 01           lload 1 
08A88D41 5A 00           lload 0 
08A88D43 C20E            call_super 
08A88D45 1A              clearenv 
08A88D46 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 232) -> (dbgmark "game_sv/MonsterGeneric.bs" 232)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 234) -> (linenum 234)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
08A89670 02 0180E8       dbgmark "game_sv/MonsterGeneric.bs" 232 
08A89674 2A 02           tymark #"()r" 
08A89676 23 03           call_s btRandom 
08A89678 10 04           push 0.100000 
08A8967A 7A 111400       jmp_cond_b ge 08A89692 
08A8967E 05 80EA         ln 234 
08A89681 2A 05           tymark #"(rrrrr)r" 
08A89683 5A 00           lload 0 
08A89685 48              push_2 
08A89686 5A 00           lload 0 
08A89688 64 06           loadindex_s snd_idle 
08A8968A 59 6400         push_sv_f 1 
08A8968D 47              push_1 
08A8968E 23 07           call_s btSound 
08A89690 1A              clearenv 
08A89691 29              ret 
08A89692 42              push_null 
08A89693 1A              clearenv 
08A89694 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 241) -> (dbgmark "game_sv/MonsterGeneric.bs" 241)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 243) -> (linenum 243)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 244) -> (linenum 244)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 246) -> (linenum 246)
stmt: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: self -> self
expr: "models/monsters/sheep/sheep.model" -> "models/monsters/sheep/sheep.model"
stmt: (linenum 247) -> (linenum 247)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 248) -> (linenum 248)
stmt: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: "sound/animal/sheep_idle1" -> "sound/animal/sheep_idle1"
expr: self -> self
stmt: (linenum 250) -> (linenum 250)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 251) -> (linenum 251)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 252) -> (linenum 252)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 256) -> (linenum 256)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
08A89FE0 02 0180F1       dbgmark "game_sv/MonsterGeneric.bs" 241 
08A89FE4 2A 02           tymark #"(Csr)r" 
08A89FE6 10 03           push "monster_sheep: init A self=%p\n" 
08A89FE8 5A 00           lload 0 
08A89FEA 23 04           call_s gc_printf 
08A89FEC 11              pop 
08A89FED 05 80F3         ln 243 
08A89FF0 49              push_3 
08A89FF1 36              dup_f 
08A89FF2 5A 00           lload 0 
08A89FF4 65 05           storeindex_s solidtype 
08A89FF6 11              pop 
08A89FF7 05 80F4         ln 244 
08A89FFA 48              push_2 
08A89FFB 36              dup_f 
08A89FFC 5A 00           lload 0 
08A89FFE 65 06           storeindex_s movetype 
08A8A000 11              pop 
08A8A001 05 80F6         ln 246 
08A8A004 2A 07           tymark #"(rCs)r" 
08A8A006 5A 00           lload 0 
08A8A008 10 08           push "models/monsters/sheep/sheep.model" 
08A8A00A 23 09           call_s btSetModel 
08A8A00C 11              pop 
08A8A00D 05 80F7         ln 247 
08A8A010 10 0A           push "sound/soldier/solsght1" 
08A8A012 30              dup 
08A8A013 5A 00           lload 0 
08A8A015 65 0B           storeindex_s snd_sight 
08A8A017 11              pop 
08A8A018 05 80F8         ln 248 
08A8A01B 10 0C           push "sound/animal/sheep_idle1" 
08A8A01D 30              dup 
08A8A01E 5A 00           lload 0 
08A8A020 65 0D           storeindex_s snd_idle 
08A8A022 11              pop 
08A8A023 05 80FA         ln 250 
08A8A026 20              mark 
08A8A027 58 10           push_sv_n 16 
08A8A029 58 10           push_sv_n 16 
08A8A02B 58 10           push_sv_n 16 
08A8A02D 84              vector 
08A8A02E 30              dup 
08A8A02F 5A 00           lload 0 
08A8A031 65 0E           storeindex_s mins 
08A8A033 11              pop 
08A8A034 05 80FB         ln 251 
08A8A037 20              mark 
08A8A038 57 10           push_sv_p 16 
08A8A03A 57 10           push_sv_p 16 
08A8A03C 57 28           push_sv_p 40 
08A8A03E 84              vector 
08A8A03F 30              dup 
08A8A040 5A 00           lload 0 
08A8A042 65 0F           storeindex_s maxs 
08A8A044 11              pop 
08A8A045 05 80FC         ln 252 
08A8A048 57 1E           push_sv_p 30 
08A8A04A 36              dup_f 
08A8A04B 5A 00           lload 0 
08A8A04D 65 10           storeindex_s health 
08A8A04F 11              pop 
08A8A050 05 8100         ln 256 
08A8A053 2A 11           tymark #"(r)r" 
08A8A055 5A 00           lload 0 
08A8A057 24 12           tailcall_s btWalkPassiveStart 
08A8A059 1A              clearenv 
08A8A05A 29              ret 

stmt: (linenum 260) -> (linenum 260)
stmt: (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))) -> (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 264) -> (dbgmark "game_sv/MonsterGeneric.bs" 264)
stmt: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: "passive_pig: ctor\n" -> "passive_pig: ctor\n"
stmt: (linenum 265) -> (linenum 265)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_pig, SA Yes, Capture=Yes
08A8A950 02 018108       dbgmark "game_sv/MonsterGeneric.bs" 264 
08A8A954 2A 02           tymark #"(Cs)r" 
08A8A956 10 03           push "passive_pig: ctor\n" 
08A8A958 23 04           call_s gc_printf 
08A8A95A 11              pop 
08A8A95B 05 8109         ln 265 
08A8A95E 20              mark 
08A8A95F 5A 01           lload 1 
08A8A961 5A 00           lload 0 
08A8A963 C20E            call_super 
08A8A965 1A              clearenv 
08A8A966 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 270) -> (dbgmark "game_sv/MonsterGeneric.bs" 270)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 272) -> (linenum 272)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
08A8B290 02 01810E       dbgmark "game_sv/MonsterGeneric.bs" 270 
08A8B294 2A 02           tymark #"()r" 
08A8B296 23 03           call_s btRandom 
08A8B298 10 04           push 0.100000 
08A8B29A 7A 111400       jmp_cond_b ge 08A8B2B2 
08A8B29E 05 8110         ln 272 
08A8B2A1 2A 05           tymark #"(rrrrr)r" 
08A8B2A3 5A 00           lload 0 
08A8B2A5 48              push_2 
08A8B2A6 5A 00           lload 0 
08A8B2A8 64 06           loadindex_s snd_idle 
08A8B2AA 59 6400         push_sv_f 1 
08A8B2AD 47              push_1 
08A8B2AE 23 07           call_s btSound 
08A8B2B0 1A              clearenv 
08A8B2B1 29              ret 
08A8B2B2 42              push_null 
08A8B2B3 1A              clearenv 
08A8B2B4 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 279) -> (dbgmark "game_sv/MonsterGeneric.bs" 279)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 281) -> (linenum 281)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 282) -> (linenum 282)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 284) -> (linenum 284)
stmt: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: self -> self
expr: "models/monsters/pig/pig.model" -> "models/monsters/pig/pig.model"
stmt: (linenum 285) -> (linenum 285)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 286) -> (linenum 286)
stmt: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: "sound/animal/pig0" -> "sound/animal/pig0"
expr: self -> self
stmt: (linenum 288) -> (linenum 288)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 289) -> (linenum 289)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 290) -> (linenum 290)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 294) -> (linenum 294)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
08A8BBE0 02 018117       dbgmark "game_sv/MonsterGeneric.bs" 279 
08A8BBE4 2A 02           tymark #"(Csr)r" 
08A8BBE6 10 03           push "monster_sheep: init A self=%p\n" 
08A8BBE8 5A 00           lload 0 
08A8BBEA 23 04           call_s gc_printf 
08A8BBEC 11              pop 
08A8BBED 05 8119         ln 281 
08A8BBF0 49              push_3 
08A8BBF1 36              dup_f 
08A8BBF2 5A 00           lload 0 
08A8BBF4 65 05           storeindex_s solidtype 
08A8BBF6 11              pop 
08A8BBF7 05 811A         ln 282 
08A8BBFA 48              push_2 
08A8BBFB 36              dup_f 
08A8BBFC 5A 00           lload 0 
08A8BBFE 65 06           storeindex_s movetype 
08A8BC00 11              pop 
08A8BC01 05 811C         ln 284 
08A8BC04 2A 07           tymark #"(rCs)r" 
08A8BC06 5A 00           lload 0 
08A8BC08 10 08           push "models/monsters/pig/pig.model" 
08A8BC0A 23 09           call_s btSetModel 
08A8BC0C 11              pop 
08A8BC0D 05 811D         ln 285 
08A8BC10 10 0A           push "sound/soldier/solsght1" 
08A8BC12 30              dup 
08A8BC13 5A 00           lload 0 
08A8BC15 65 0B           storeindex_s snd_sight 
08A8BC17 11              pop 
08A8BC18 05 811E         ln 286 
08A8BC1B 10 0C           push "sound/animal/pig0" 
08A8BC1D 30              dup 
08A8BC1E 5A 00           lload 0 
08A8BC20 65 0D           storeindex_s snd_idle 
08A8BC22 11              pop 
08A8BC23 05 8120         ln 288 
08A8BC26 20              mark 
08A8BC27 58 10           push_sv_n 16 
08A8BC29 58 10           push_sv_n 16 
08A8BC2B 58 10           push_sv_n 16 
08A8BC2D 84              vector 
08A8BC2E 30              dup 
08A8BC2F 5A 00           lload 0 
08A8BC31 65 0E           storeindex_s mins 
08A8BC33 11              pop 
08A8BC34 05 8121         ln 289 
08A8BC37 20              mark 
08A8BC38 57 10           push_sv_p 16 
08A8BC3A 57 10           push_sv_p 16 
08A8BC3C 57 28           push_sv_p 40 
08A8BC3E 84              vector 
08A8BC3F 30              dup 
08A8BC40 5A 00           lload 0 
08A8BC42 65 0F           storeindex_s maxs 
08A8BC44 11              pop 
08A8BC45 05 8122         ln 290 
08A8BC48 57 1E           push_sv_p 30 
08A8BC4A 36              dup_f 
08A8BC4B 5A 00           lload 0 
08A8BC4D 65 10           storeindex_s health 
08A8BC4F 11              pop 
08A8BC50 05 8126         ln 294 
08A8BC53 2A 11           tymark #"(r)r" 
08A8BC55 5A 00           lload 0 
08A8BC57 24 12           tailcall_s btWalkPassiveStart 
08A8BC59 1A              clearenv 
08A8BC5A 29              ret 

stmt: (linenum 298) -> (linenum 298)
stmt: (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))))))) -> (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))))))
expr: (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))) -> (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 303) -> (dbgmark "game_sv/MonsterGeneric.bs" 303)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_army, SA Yes, Capture=Yes
08A8C540 02 01812F       dbgmark "game_sv/MonsterGeneric.bs" 303 
08A8C544 20              mark 
08A8C545 5A 01           lload 1 
08A8C547 5A 00           lload 0 
08A8C549 C20E            call_super 
08A8C54B 1A              clearenv 
08A8C54C 29              ret 

stmt: (linenum 308) -> (linenum 308)
expr: (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))))) -> (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))))))
expr: (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))) -> (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 312) -> (dbgmark "game_sv/MonsterGeneric.bs" 312)
stmt: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: "monster_enemyhead: ctor\n" -> "monster_enemyhead: ctor\n"
stmt: (linenum 313) -> (linenum 313)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_enemyhead, SA Yes, Capture=Yes
08A8CE40 02 018138       dbgmark "game_sv/MonsterGeneric.bs" 312 
08A8CE44 2A 02           tymark #"(Cs)r" 
08A8CE46 10 03           push "monster_enemyhead: ctor\n" 
08A8CE48 23 04           call_s gc_printf 
08A8CE4A 11              pop 
08A8CE4B 05 8139         ln 313 
08A8CE4E 20              mark 
08A8CE4F 5A 01           lload 1 
08A8CE51 5A 00           lload 0 
08A8CE53 C20E            call_super 
08A8CE55 1A              clearenv 
08A8CE56 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 318) -> (dbgmark "game_sv/MonsterGeneric.bs" 318)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 320) -> (linenum 320)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
08A8D780 02 01813E       dbgmark "game_sv/MonsterGeneric.bs" 318 
08A8D784 2A 02           tymark #"()r" 
08A8D786 23 03           call_s btRandom 
08A8D788 10 04           push 0.100000 
08A8D78A 7A 111400       jmp_cond_b ge 08A8D7A2 
08A8D78E 05 8140         ln 320 
08A8D791 2A 05           tymark #"(rrrrr)r" 
08A8D793 5A 00           lload 0 
08A8D795 48              push_2 
08A8D796 5A 00           lload 0 
08A8D798 64 06           loadindex_s snd_idle 
08A8D79A 59 6400         push_sv_f 1 
08A8D79D 47              push_1 
08A8D79E 23 07           call_s btSound 
08A8D7A0 1A              clearenv 
08A8D7A1 29              ret 
08A8D7A2 42              push_null 
08A8D7A3 1A              clearenv 
08A8D7A4 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 327) -> (dbgmark "game_sv/MonsterGeneric.bs" 327)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 331) -> (linenum 331)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 332) -> (linenum 332)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 335) -> (linenum 335)
expr: (funcall BT_FireRocket self org dir 60 600 160) -> (funcall BT_FireRocket self org dir 60 600 160)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 60 -> 60
expr: 600 -> 600
expr: 160 -> 160
BLK think_fire, SA Yes, Capture=Yes
08A86400 02 018147       dbgmark "game_sv/MonsterGeneric.bs" 327 
08A86404 42              push_null 
08A86405 16 02           lexbind org 
08A86407 42              push_null 
08A86408 16 03           lexbind dir 
08A8640A 05 814B         ln 331 
08A8640D 2A 04           tymark #"(r)r" 
08A8640F 5A 02           lload 2 
08A86411 23 05           call_s BT_AimOrigin 
08A86413 5B 01           lstore 1 
08A86415 05 814C         ln 332 
08A86418 2A 06           tymark #"(rrr)r" 
08A8641A 5A 02           lload 2 
08A8641C 5A 02           lload 2 
08A8641E 64 07           loadindex_s enemy 
08A86420 45 5802         push_sv 600 
08A86423 23 08           call_s BT_AimDirection 
08A86425 5B 00           lstore 0 
08A86427 05 814F         ln 335 
08A8642A 2A 09           tymark #"(rrrrrr)r" 
08A8642C 5A 02           lload 2 
08A8642E 5A 01           lload 1 
08A86430 5A 00           lload 0 
08A86432 57 3C           push_sv_p 60 
08A86434 45 5802         push_sv 600 
08A86437 57 A0           push_sv_p 160 
08A86439 24 0A           tailcall_s BT_FireRocket 
08A8643B 1A              clearenv 
08A8643C 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 340) -> (dbgmark "game_sv/MonsterGeneric.bs" 340)
stmt: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: "monster_enemyhead: init A self=%p\n" -> "monster_enemyhead: init A self=%p\n"
expr: self -> self
stmt: (linenum 342) -> (linenum 342)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 343) -> (linenum 343)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 345) -> (linenum 345)
stmt: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: self -> self
expr: "models/monsters/enemyhead/enemyhead.model" -> "models/monsters/enemyhead/enemyhead.model"
stmt: (linenum 346) -> (linenum 346)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 347) -> (linenum 347)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 349) -> (linenum 349)
stmt: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (binary + (objref self origin) (vector 0 0 256)) -> (binary + (objref self origin) (vector 0 0 256))
expr: (objref self origin) -> (objref self origin)
expr: self -> self
expr: (vector 0 0 256) -> (vector 0 0 256)
expr: 0 -> 0
expr: 0 -> 0
expr: 256 -> 256
expr: self -> self
stmt: (linenum 351) -> (linenum 351)
stmt: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (vector (unary - 64) (unary - 64) (unary - 32)) -> (vector (unary - 64) (unary - 64) (unary - 32))
expr: (unary - 64) -> -64
expr: (unary - 64) -> -64
expr: (unary - 32) -> -32
expr: self -> self
stmt: (linenum 352) -> (linenum 352)
stmt: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (vector 64 64 64) -> (vector 64 64 64)
expr: 64 -> 64
expr: 64 -> 64
expr: 64 -> 64
expr: self -> self
stmt: (linenum 353) -> (linenum 353)
stmt: (objset! self health 900) -> (objset! self health 900)
expr: (objset! self health 900) -> (objset! self health 900)
expr: 900 -> 900
expr: self -> self
stmt: (linenum 357) -> (linenum 357)
expr: (funcall btFlymonsterStart self) -> (funcall btFlymonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
08A8EB10 02 018154       dbgmark "game_sv/MonsterGeneric.bs" 340 
08A8EB14 2A 02           tymark #"(Csr)r" 
08A8EB16 10 03           push "monster_enemyhead: init A self=%p\n" 
08A8EB18 5A 00           lload 0 
08A8EB1A 23 04           call_s gc_printf 
08A8EB1C 11              pop 
08A8EB1D 05 8156         ln 342 
08A8EB20 49              push_3 
08A8EB21 36              dup_f 
08A8EB22 5A 00           lload 0 
08A8EB24 65 05           storeindex_s solidtype 
08A8EB26 11              pop 
08A8EB27 05 8157         ln 343 
08A8EB2A 48              push_2 
08A8EB2B 36              dup_f 
08A8EB2C 5A 00           lload 0 
08A8EB2E 65 06           storeindex_s movetype 
08A8EB30 11              pop 
08A8EB31 05 8159         ln 345 
08A8EB34 2A 07           tymark #"(rCs)r" 
08A8EB36 5A 00           lload 0 
08A8EB38 10 08           push "models/monsters/enemyhead/enemyhead.model" 
08A8EB3A 23 09           call_s btSetModel 
08A8EB3C 11              pop 
08A8EB3D 05 815A         ln 346 
08A8EB40 10 0A           push "sound/soldier/solsght1" 
08A8EB42 30              dup 
08A8EB43 5A 00           lload 0 
08A8EB45 65 0B           storeindex_s snd_sight 
08A8EB47 11              pop 
08A8EB48 05 815B         ln 347 
08A8EB4B 10 0C           push "sound/soldier/solidle1" 
08A8EB4D 30              dup 
08A8EB4E 5A 00           lload 0 
08A8EB50 65 0D           storeindex_s snd_idle 
08A8EB52 11              pop 
08A8EB53 05 815D         ln 349 
08A8EB56 5A 00           lload 0 
08A8EB58 64 0E           loadindex_s origin 
08A8EB5A 20              mark 
08A8EB5B 46              push_0 
08A8EB5C 46              push_0 
08A8EB5D 45 0001         push_sv 256 
08A8EB60 84              vector 
08A8EB61 9F              add 
08A8EB62 30              dup 
08A8EB63 5A 00           lload 0 
08A8EB65 65 0E           storeindex_s origin 
08A8EB67 11              pop 
08A8EB68 05 815F         ln 351 
08A8EB6B 20              mark 
08A8EB6C 58 40           push_sv_n 64 
08A8EB6E 58 40           push_sv_n 64 
08A8EB70 58 20           push_sv_n 32 
08A8EB72 84              vector 
08A8EB73 30              dup 
08A8EB74 5A 00           lload 0 
08A8EB76 65 0F           storeindex_s mins 
08A8EB78 11              pop 
08A8EB79 05 8160         ln 352 
08A8EB7C 20              mark 
08A8EB7D 57 40           push_sv_p 64 
08A8EB7F 57 40           push_sv_p 64 
08A8EB81 57 40           push_sv_p 64 
08A8EB83 84              vector 
08A8EB84 30              dup 
08A8EB85 5A 00           lload 0 
08A8EB87 65 10           storeindex_s maxs 
08A8EB89 11              pop 
08A8EB8A 05 8161         ln 353 
08A8EB8D 45 8403         push_sv 900 
08A8EB90 36              dup_f 
08A8EB91 5A 00           lload 0 
08A8EB93 65 11           storeindex_s health 
08A8EB95 11              pop 
08A8EB96 05 8165         ln 357 
08A8EB99 2A 12           tymark #"(r)r" 
08A8EB9B 5A 00           lload 0 
08A8EB9D 24 13           tailcall_s btFlymonsterStart 
08A8EB9F 1A              clearenv 
08A8EBA0 29              ret 

BLK (null), SA No, Capture=Yes
08A8ED80 02 0102         dbgmark "game_sv/MonsterGeneric.bs" 2 
08A8ED83 C202 020304     begin_class monster_generic2 ActorBase p 
08A8ED88 42              push_null 
08A8ED89 97 050006       tybind stand1_mf () s 
08A8ED8D 42              push_null 
08A8ED8E 97 070006       tybind walk1_mf () s 
08A8ED92 42              push_null 
08A8ED93 97 080006       tybind walk2_mf () s 
08A8ED97 42              push_null 
08A8ED98 97 090006       tybind stand1_mfi () s 
08A8ED9C 42              push_null 
08A8ED9D 97 0A0006       tybind walk1_mfi () s 
08A8EDA1 42              push_null 
08A8EDA2 97 0B0006       tybind walk2_mfi () s 
08A8EDA6 42              push_null 
08A8EDA7 97 0C0006       tybind run_mf () s 
08A8EDAB 42              push_null 
08A8EDAC 97 0D0006       tybind attack1_mf () s 
08A8EDB0 42              push_null 
08A8EDB1 97 0E0006       tybind run_mfi () s 
08A8EDB5 42              push_null 
08A8EDB6 97 0F0006       tybind attack1_mfi () s 
08A8EDBA 10 10           push #!<svm_blk_t:08A7C000> 
08A8EDBC 97 111200       tybind think_idle #"(r)r" () 
08A8EDC0 10 13           push #!<svm_blk_t:08A7C9F0> 
08A8EDC2 97 141200       tybind init #"(r)r" () 
08A8EDC6 10 15           push #!<svm_blk_t:08A7D380> 
08A8EDC8 97 161200       tybind deinit #"(r)r" () 
08A8EDCC 10 17           push #!<svm_blk_t:08A7DC70> 
08A8EDCE 97 181900       tybind blocked #"(rr)r" () 
08A8EDD2 10 1A           push #!<svm_blk_t:08A7E560> 
08A8EDD4 97 1B1900       tybind touch #"(rr)r" () 
08A8EDD8 10 1C           push #!<svm_blk_t:08A7EE50> 
08A8EDDA 97 1D1900       tybind use #"(rr)r" () 
08A8EDDE 10 1E           push #!<svm_blk_t:08A7F740> 
08A8EDE0 97 1F2000       tybind pain #"(rrr)r" () 
08A8EDE4 10 21           push #!<svm_blk_t:08A80030> 
08A8EDE6 97 222000       tybind die #"(rrr)r" () 
08A8EDEA 10 23           push #!<svm_blk_t:08A80930> 
08A8EDEC 97 242000       tybind cmdmsg #"(rrr)r" () 
08A8EDF0 10 25           push #!<svm_blk_t:08A81220> 
08A8EDF2 97 261200       tybind stand #"(r)r" () 
08A8EDF6 10 27           push #!<svm_blk_t:08A81B40> 
08A8EDF8 97 281200       tybind walk1_random #"(r)r" () 
08A8EDFC 10 29           push #!<svm_blk_t:08A82480> 
08A8EDFE 97 2A1200       tybind walk #"(r)r" () 
08A8EE02 10 2B           push #!<svm_blk_t:08A82DA0> 
08A8EE04 97 2C1200       tybind run #"(r)r" () 
08A8EE08 10 2D           push #!<svm_blk_t:08A836A0> 
08A8EE0A 97 2E1200       tybind missile #"(r)r" () 
08A8EE0E 10 2F           push #!<svm_blk_t:08A83FC0> 
08A8EE10 97 301200       tybind think_fire #"(r)r" () 
08A8EE14 10 31           push #!<svm_blk_t:08A84900> 
08A8EE16 97 321200       tybind melee #"(r)r" () 
08A8EE1A 10 33           push #!<svm_blk_t:08A85210> 
08A8EE1C 97 021904       tybind monster_generic2 #"(rr)r" p 
08A8EE20 20              mark 
08A8EE21 10 34           push #!<svm_blk_t:08A88080> 
08A8EE23 21              call 
08A8EE24 C206            end_class 
08A8EE26 11              pop 
08A8EE27 05 80DE         ln 222 
08A8EE2A C202 350204     begin_class passive_sheep monster_generic2 p 
08A8EE2F 10 36           push #!<svm_blk_t:08A88CA0> 
08A8EE31 97 351904       tybind passive_sheep #"(rr)r" p 
08A8EE35 10 37           push #!<svm_blk_t:08A895D0> 
08A8EE37 97 111200       tybind think_idle #"(r)r" () 
08A8EE3B 10 38           push #!<svm_blk_t:08A89F20> 
08A8EE3D 97 141200       tybind init #"(r)r" () 
08A8EE41 C206            end_class 
08A8EE43 11              pop 
08A8EE44 05 8104         ln 260 
08A8EE47 C202 390204     begin_class passive_pig monster_generic2 p 
08A8EE4C 10 3A           push #!<svm_blk_t:08A8A8C0> 
08A8EE4E 97 391904       tybind passive_pig #"(rr)r" p 
08A8EE52 10 3B           push #!<svm_blk_t:08A8B1F0> 
08A8EE54 97 111200       tybind think_idle #"(r)r" () 
08A8EE58 10 3C           push #!<svm_blk_t:08A8BB20> 
08A8EE5A 97 141200       tybind init #"(r)r" () 
08A8EE5E C206            end_class 
08A8EE60 11              pop 
08A8EE61 05 812A         ln 298 
08A8EE64 C202 3D0204     begin_class monster_army monster_generic2 p 
08A8EE69 10 3E           push #!<svm_blk_t:08A8C4C0> 
08A8EE6B 97 3D1904       tybind monster_army #"(rr)r" p 
08A8EE6F C206            end_class 
08A8EE71 11              pop 
08A8EE72 05 8134         ln 308 
08A8EE75 C202 3F0204     begin_class monster_enemyhead monster_generic2 p 
08A8EE7A 10 40           push #!<svm_blk_t:08A8CDB0> 
08A8EE7C 97 3F1904       tybind monster_enemyhead #"(rr)r" p 
08A8EE80 10 41           push #!<svm_blk_t:08A8D6E0> 
08A8EE82 97 111200       tybind think_idle #"(r)r" () 
08A8EE86 10 42           push #!<svm_blk_t:08A8E010> 
08A8EE88 97 301200       tybind think_fire #"(r)r" () 
08A8EE8C 10 43           push #!<svm_blk_t:08A8EA40> 
08A8EE8E 97 141200       tybind init #"(r)r" () 
08A8EE92 C206            end_class 
08A8EE94 29              ret 

Add Slot 08A91960 stand1_mf r
Add Slot 08A919F0 walk1_mf r
Add Slot 08A91A80 walk2_mf r
Add Slot 08A91B10 stand1_mfi r
Add Slot 08A91BA0 walk1_mfi r
Add Slot 08A91C30 walk2_mfi r
Add Slot 08A91CC0 run_mf r
Add Slot 08A91D50 attack1_mf r
Add Slot 08A91DE0 run_mfi r
Add Slot 08A91E70 attack1_mfi r
This A = 08A91430, run=08A82DA0, this.run=08A82DA0
BTSV_ScriptInit: Called
Eval:  load("game/sv_main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/sv_main.bs") -> (funcall load "game/sv_main.bs")
expr: "game/sv_main.bs" -> "game/sv_main.bs"
BLK (null), SA No, Capture=Yes
08AA40C0 02 0101         dbgmark "<eval-str>" 1 
08AA40C3 2A 02           tymark #"(Cs)r" 
08AA40C5 10 03           push "game/sv_main.bs" 
08AA40C7 24 04           tailcall_s load 
08AA40C9 1A              clearenv 
08AA40CA 29              ret 

stmt: (dbgmark "game/sv_main.bs" 1) -> (dbgmark "game/sv_main.bs" 1)
stmt: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: "BGBScript Server Main Start\n" -> "BGBScript Server Main Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (funcall printf "BGBScript Server Main End\n") -> (funcall printf "BGBScript Server Main End\n")
expr: "BGBScript Server Main End\n" -> "BGBScript Server Main End\n"
BLK (null), SA No, Capture=Yes
08AA4DD0 02 0101         dbgmark "game/sv_main.bs" 1 
08AA4DD3 2A 02           tymark #"(Cs)r" 
08AA4DD5 10 03           push "BGBScript Server Main Start\n" 
08AA4DD7 23 04           call_s gc_printf 
08AA4DD9 11              pop 
08AA4DDA 05 05           ln 5 
08AA4DDC 2A 02           tymark #"(Cs)r" 
08AA4DDE 10 05           push "BGBScript Server Main End\n" 
08AA4DE0 24 04           tailcall_s gc_printf 
08AA4DE2 1A              clearenv 
08AA4DE3 29              ret 

BGBScript Server Main Start
BGBScript Server Main End
()
Add Slot 08AAB450 light PXBTGE_Light_s;
Add Slot 08AAB520 item PXBTGE_ItemInfo_s;
Add Slot 08AAB600 groundEntity PXBTGE_Entity_s;
Add Slot 08AAB6E0 chain PXBTGE_Entity_s;
Add Slot 08AAB790 enemy PXBTGE_Entity_s;
Add Slot 08AAB820 owner PXBTGE_Entity_s;
Add Slot 08AAB8D0 goalEntity PXBTGE_Entity_s;
Add Slot 08AAB980 moveTarget PXBTGE_Entity_s;
Add Slot 08AABA30 oldEnemy PXBTGE_Entity_s;
Add Slot 08AABAE0 linkNext PXBTGE_Entity_s;
Add Slot 08AABB90 linkFirst PXBTGE_Entity_s;
Add Slot 08AABC40 entNextNode PXBTGE_Entity_s;
Add Slot 08AABCF0 entNode PXBTGE_EntityNode_s;
Add Slot 08AACD70 triggerEntity PXBTGE_Entity_s;
Add Slot 08AADE60 teamLeader PXBTGE_Entity_s;
Add Slot 08AAF000 gui_ctx PXBTCMUI_Context_s;
00: 0.1189 0.1189 0.1189
01: 0.2059 0.0000 0.0000
02: 0.0000 0.2059 0.0000
03: 0.1456 0.1456 0.0000
04: 0.0000 0.0000 0.2059
05: 0.1456 0.0000 0.1456
06: 0.0000 0.1456 0.1456
07: 0.1710 0.1026 0.0513
08: 0.1026 0.1710 0.0513
09: 0.1681 0.0841 0.0841
0A: 0.0841 0.1681 0.0841
0B: 0.1373 0.1373 0.0686
0C: 0.0841 0.0841 0.1681
0D: 0.1373 0.0686 0.1373
0E: 0.0686 0.1373 0.1373
0F: 0.0513 0.1026 0.1710
10: 0.1321 0.1321 0.1321
11: 0.2288 0.0000 0.0000
12: 0.0000 0.2288 0.0000
13: 0.1618 0.1618 0.0000
14: 0.0000 0.0000 0.2288
15: 0.1618 0.0000 0.1618
16: 0.0000 0.1618 0.1618
17: 0.1900 0.1140 0.0570
18: 0.1140 0.1900 0.0570
19: 0.1868 0.0934 0.0934
1A: 0.0934 0.1868 0.0934
1B: 0.1525 0.1525 0.0763
1C: 0.0934 0.0934 0.1868
1D: 0.1525 0.0763 0.1525
1E: 0.0763 0.1525 0.1525
1F: 0.0570 0.1140 0.1900
20: 0.1468 0.1468 0.1468
21: 0.2542 0.0000 0.0000
22: 0.0000 0.2542 0.0000
23: 0.1797 0.1797 0.0000
24: 0.0000 0.0000 0.2542
25: 0.1797 0.0000 0.1797
26: 0.0000 0.1797 0.1797
27: 0.2111 0.1267 0.0633
28: 0.1267 0.2111 0.0633
29: 0.2075 0.1038 0.1038
2A: 0.1038 0.2075 0.1038
2B: 0.1695 0.1695 0.0847
2C: 0.1038 0.1038 0.2075
2D: 0.1695 0.0847 0.1695
2E: 0.0847 0.1695 0.1695
2F: 0.0633 0.1267 0.2111
30: 0.1631 0.1631 0.1631
31: 0.2824 0.0000 0.0000
32: 0.0000 0.2824 0.0000
33: 0.1997 0.1997 0.0000
34: 0.0000 0.0000 0.2824
35: 0.1997 0.0000 0.1997
36: 0.0000 0.1997 0.1997
37: 0.2345 0.1407 0.0704
38: 0.1407 0.2345 0.0704
39: 0.2306 0.1153 0.1153
3A: 0.1153 0.2306 0.1153
3B: 0.1883 0.1883 0.0941
3C: 0.1153 0.1153 0.2306
3D: 0.1883 0.0941 0.1883
3E: 0.0941 0.1883 0.1883
3F: 0.0704 0.1407 0.2345
40: 0.1812 0.1812 0.1812
41: 0.3138 0.0000 0.0000
42: 0.0000 0.3138 0.0000
43: 0.2219 0.2219 0.0000
44: 0.0000 0.0000 0.3138
45: 0.2219 0.0000 0.2219
46: 0.0000 0.2219 0.2219
47: 0.2606 0.1564 0.0782
48: 0.1564 0.2606 0.0782
49: 0.2562 0.1281 0.1281
4A: 0.1281 0.2562 0.1281
4B: 0.2092 0.2092 0.1046
4C: 0.1281 0.1281 0.2562
4D: 0.2092 0.1046 0.2092
4E: 0.1046 0.2092 0.2092
4F: 0.0782 0.1564 0.2606
50: 0.2013 0.2013 0.2013
51: 0.3487 0.0000 0.0000
52: 0.0000 0.3487 0.0000
53: 0.2466 0.2466 0.0000
54: 0.0000 0.0000 0.3487
55: 0.2466 0.0000 0.2466
56: 0.0000 0.2466 0.2466
57: 0.2896 0.1737 0.0869
58: 0.1737 0.2896 0.0869
59: 0.2847 0.1423 0.1423
5A: 0.1423 0.2847 0.1423
5B: 0.2325 0.2325 0.1162
5C: 0.1423 0.1423 0.2847
5D: 0.2325 0.1162 0.2325
5E: 0.1162 0.2325 0.2325
5F: 0.0869 0.1737 0.2896
60: 0.2237 0.2237 0.2237
61: 0.3874 0.0000 0.0000
62: 0.0000 0.3874 0.0000
63: 0.2739 0.2739 0.0000
64: 0.0000 0.0000 0.3874
65: 0.2739 0.0000 0.2739
66: 0.0000 0.2739 0.2739
67: 0.3217 0.1930 0.0965
68: 0.1930 0.3217 0.0965
69: 0.3163 0.1582 0.1582
6A: 0.1582 0.3163 0.1582
6B: 0.2583 0.2583 0.1291
6C: 0.1582 0.1582 0.3163
6D: 0.2583 0.1291 0.2583
6E: 0.1291 0.2583 0.2583
6F: 0.0965 0.1930 0.3217
70: 0.2485 0.2485 0.2485
71: 0.4305 0.0000 0.0000
72: 0.0000 0.4305 0.0000
73: 0.3044 0.3044 0.0000
74: 0.0000 0.0000 0.4305
75: 0.3044 0.0000 0.3044
76: 0.0000 0.3044 0.3044
77: 0.3575 0.2145 0.1072
78: 0.2145 0.3575 0.1072
79: 0.3515 0.1757 0.1757
7A: 0.1757 0.3515 0.1757
7B: 0.2870 0.2870 0.1435
7C: 0.1757 0.1757 0.3515
7D: 0.2870 0.1435 0.2870
7E: 0.1435 0.2870 0.2870
7F: 0.1072 0.2145 0.3575
80: 0.2761 0.2761 0.2761
81: 0.4783 0.0000 0.0000
82: 0.0000 0.4783 0.0000
83: 0.3382 0.3382 0.0000
84: 0.0000 0.0000 0.4783
85: 0.3382 0.0000 0.3382
86: 0.0000 0.3382 0.3382
87: 0.3972 0.2383 0.1192
88: 0.2383 0.3972 0.1192
89: 0.3905 0.1953 0.1953
8A: 0.1953 0.3905 0.1953
8B: 0.3189 0.3189 0.1594
8C: 0.1953 0.1953 0.3905
8D: 0.3189 0.1594 0.3189
8E: 0.1594 0.3189 0.3189
8F: 0.1192 0.2383 0.3972
90: 0.3068 0.3068 0.3068
91: 0.5314 0.0000 0.0000
92: 0.0000 0.5314 0.0000
93: 0.3758 0.3758 0.0000
94: 0.0000 0.0000 0.5314
95: 0.3758 0.0000 0.3758
96: 0.0000 0.3758 0.3758
97: 0.4413 0.2648 0.1324
98: 0.2648 0.4413 0.1324
99: 0.4339 0.2170 0.2170
9A: 0.2170 0.4339 0.2170
9B: 0.3543 0.3543 0.1771
9C: 0.2170 0.2170 0.4339
9D: 0.3543 0.1771 0.3543
9E: 0.1771 0.3543 0.3543
9F: 0.1324 0.2648 0.4413
A0: 0.3409 0.3409 0.3409
A1: 0.5905 0.0000 0.0000
A2: 0.0000 0.5905 0.0000
A3: 0.4175 0.4175 0.0000
A4: 0.0000 0.0000 0.5905
A5: 0.4175 0.0000 0.4175
A6: 0.0000 0.4175 0.4175
A7: 0.4904 0.2942 0.1471
A8: 0.2942 0.4904 0.1471
A9: 0.4821 0.2411 0.2411
AA: 0.2411 0.4821 0.2411
AB: 0.3937 0.3937 0.1968
AC: 0.2411 0.2411 0.4821
AD: 0.3937 0.1968 0.3937
AE: 0.1968 0.3937 0.3937
AF: 0.1471 0.2942 0.4904
B0: 0.3788 0.3788 0.3788
B1: 0.6561 0.0000 0.0000
B2: 0.0000 0.6561 0.0000
B3: 0.4639 0.4639 0.0000
B4: 0.0000 0.0000 0.6561
B5: 0.4639 0.0000 0.4639
B6: 0.0000 0.4639 0.4639
B7: 0.5449 0.3269 0.1635
B8: 0.3269 0.5449 0.1635
B9: 0.5357 0.2679 0.2679
BA: 0.2679 0.5357 0.2679
BB: 0.4374 0.4374 0.2187
BC: 0.2679 0.2679 0.5357
BD: 0.4374 0.2187 0.4374
BE: 0.2187 0.4374 0.4374
BF: 0.1635 0.3269 0.5449
C0: 0.4209 0.4209 0.4209
C1: 0.7290 0.0000 0.0000
C2: 0.0000 0.7290 0.0000
C3: 0.5155 0.5155 0.0000
C4: 0.0000 0.0000 0.7290
C5: 0.5155 0.0000 0.5155
C6: 0.0000 0.5155 0.5155
C7: 0.6054 0.3632 0.1816
C8: 0.3632 0.6054 0.1816
C9: 0.5952 0.2976 0.2976
CA: 0.2976 0.5952 0.2976
CB: 0.4860 0.4860 0.2430
CC: 0.2976 0.2976 0.5952
CD: 0.4860 0.2430 0.4860
CE: 0.2430 0.4860 0.4860
CF: 0.1816 0.3632 0.6054
D0: 0.4677 0.4677 0.4677
D1: 0.8100 0.0000 0.0000
D2: 0.0000 0.8100 0.0000
D3: 0.5728 0.5728 0.0000
D4: 0.0000 0.0000 0.8100
D5: 0.5728 0.0000 0.5728
D6: 0.0000 0.5728 0.5728
D7: 0.6727 0.4036 0.2018
D8: 0.4036 0.6727 0.2018
D9: 0.6614 0.3307 0.3307
DA: 0.3307 0.6614 0.3307
DB: 0.5400 0.5400 0.2700
DC: 0.3307 0.3307 0.6614
DD: 0.5400 0.2700 0.5400
DE: 0.2700 0.5400 0.5400
DF: 0.2018 0.4036 0.6727
E0: 0.5196 0.5196 0.5196
E1: 0.9000 0.0000 0.0000
E2: 0.0000 0.9000 0.0000
E3: 0.6364 0.6364 0.0000
E4: 0.0000 0.0000 0.9000
E5: 0.6364 0.0000 0.6364
E6: 0.0000 0.6364 0.6364
E7: 0.7474 0.4484 0.2242
E8: 0.4484 0.7474 0.2242
E9: 0.7348 0.3674 0.3674
EA: 0.3674 0.7348 0.3674
EB: 0.6000 0.6000 0.3000
EC: 0.3674 0.3674 0.7348
ED: 0.6000 0.3000 0.6000
EE: 0.3000 0.6000 0.6000
EF: 0.2242 0.4484 0.7474
F0: 0.5774 0.5774 0.5774
F1: 1.0000 0.0000 0.0000
F2: 0.0000 1.0000 0.0000
F3: 0.7071 0.7071 0.0000
F4: 0.0000 0.0000 1.0000
F5: 0.7071 0.0000 0.7071
F6: 0.0000 0.7071 0.7071
F7: 0.8305 0.4983 0.2491
F8: 0.4983 0.8305 0.2491
F9: 0.8165 0.4082 0.4082
FA: 0.4082 0.8165 0.4082
FB: 0.6667 0.6667 0.3333
FC: 0.4082 0.4082 0.8165
FD: 0.6667 0.3333 0.6667
FE: 0.3333 0.6667 0.6667
FF: 0.2491 0.4983 0.8305
BTGE_Voxel_LoadDungeonType: 1 none
BTGE_Voxel_LoadDungeonType: 1 none: OK
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick: OK
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick: OK
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick: OK
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick: OK
BTGE_Voxel_LoadDungeonType: 8 break_px_brick
BTGE_Voxel_LoadDungeonType: 8 break_px_brick: OK
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick: OK
BTGE_Voxel_LoadDungeonType: 10 break_py_brick
BTGE_Voxel_LoadDungeonType: 10 break_py_brick: OK
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick: OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,-1,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,-1,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,1,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,1,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_ServerInitFunc: BTGE_DecodeClientUpdate Pass 0E771352
BTGE_DecodeClientConnect
btFindSpawnpoint: 1 spawnpoints
BTGE_ServerInitFunc: btsvFreeUpdate Pass 0E771A50
BTGE_ClientInitFunc: BTCL_DecodeUpdate Pass 0B111285
camera: 4
SoundRec: Sound overrun
BTCL_SetupClientEntFrameWMdl: Model Changed
BTCL_SetupClientEntFrameWMdl: New wmdl instance
skel loaded, 2 bones, 0 solids
AC3D_LoadModel: loading 'models/weapons/v_blast/v_blast1.ac'
GroupMergeVecsFrac 1: 398 xyz, 705 st, 784 face
BTGE_Voxel_DeltaRegionBuffer: Buffer Space Check
GroupMergeVecsFrac 2: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 1: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 2: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 1: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 2: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 1: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 2: 116 xyz, 617 st, 224 face
Hitbox: 0 22.990 Org=(-4.936 -15.016 -4.513) Rad=(0.116 0.905 0.122)
Hitbox: 1 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 079AD520
anim active: 0, 5 frames
anim pow: 5, 4 frames
anim idle1: 9, 24 frames
anim idle2: 33, 20 frames
anim putway: 53, 3 frames
Setup FBO
BTGE_ClientInitFunc: BTCL_ComposeUpdate Pass 0B111249
BTGE_Voxel_AllocRegionForPoint: Pt=(0,0,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,0,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(0,-512,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTCL_DecodeLDelta: (ldelta 1 (st 0) (fl 33537) (texname ()) (boxval 0.0 0.0 0.0) (maxs 0.0 0.0 0.0) (mins 0.0 0.0 0.0) (coeff 0.862069 0.862069 1.0) (val 10000.0 0.0) (clr 1.0 1.0 1.0) (dir 0.0 0.0 0.0) (org 0.0 0.0 2048.0))
stmt: (dbgmark "<eval-str>" 5) -> (dbgmark "<eval-str>" 5)
stmt: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: "Client Stuff Eval: Begin\n" -> "Client Stuff Eval: Begin\n"
stmt: (linenum 7) -> (linenum 7)
stmt: (vars (btcl_clientstuff_vol)) -> (vars (btcl_clientstuff_vol))
expr: () -> ()
stmt: (linenum 8) -> (linenum 8)
stmt: (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)) -> (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400))
expr: (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400) -> (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)
expr: "images/faces/anim/robotface0_aa" -> "images/faces/anim/robotface0_aa"
expr: (unary - 200) -> -200
expr: (unary - 150) -> -150
expr: 400 -> 400
expr: 400 -> 400
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: btcl_clientstuff_vol -> btcl_clientstuff_vol
expr: (unary - 1) -> -1
stmt: (linenum 13) -> (linenum 13)
stmt: (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))) -> (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))
stmt: (dbgmark "<eval-str>" 15) -> (dbgmark "<eval-str>" 15)
expr: (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)) -> (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))
expr: (funcall PDGL_KeyDown K_SHIFT) -> (funcall PDGL_KeyDown K_SHIFT)
expr: K_SHIFT -> 134
expr: () -> ()
expr: (begin) -> ()
BLK BTCL_ClientStuff_Draw, SA No, Capture=Yes
063604B0 02 010F         dbgmark "<eval-str>" 15 
063604B3 2A 02           tymark #"(r)r" 
063604B5 57 86           push_sv_p 134 
063604B7 23 03           call_s PDGL_KeyDown 
063604B9 78 0500         jmp_false 063604C1 
063604BC 42              push_null 
063604BD 1F 04           cast_s r 
063604BF 1A              clearenv 
063604C0 29              ret 
063604C1 42              push_null 
063604C2 1A              clearenv 
063604C3 29              ret 

stmt: (linenum 25) -> (linenum 25)
expr: (funcall printf "Client Stuff Eval: End\n") -> (funcall printf "Client Stuff Eval: End\n")
expr: "Client Stuff Eval: End\n" -> "Client Stuff Eval: End\n"
BLK (null), SA No, Capture=Yes
06360340 02 0105         dbgmark "<eval-str>" 5 
06360343 2A 02           tymark #"(Cs)r" 
06360345 10 03           push "Client Stuff Eval: Begin\n" 
06360347 23 04           call_s gc_printf 
06360349 11              pop 
0636034A 05 07           ln 7 
0636034C 42              push_null 
0636034D 14 05           bind btcl_clientstuff_vol 
0636034F 05 08           ln 8 
06360351 2A 06           tymark #"(Csrrrr)r" 
06360353 10 07           push "images/faces/anim/robotface0_aa" 
06360355 58 C8           push_sv_n 200 
06360357 58 96           push_sv_n 150 
06360359 45 9001         push_sv 400 
0636035C 45 9001         push_sv 400 
0636035F 23 08           call_s LBXGL_BrushDraw2D_CreateDisplayImage2 
06360361 13 05           store btcl_clientstuff_vol 
06360363 05 0B           ln 11 
06360365 2A 09           tymark #"(rr)r" 
06360367 12 05           load btcl_clientstuff_vol 
06360369 58 01           push_sv_n 1 
0636036B 23 0A           call_s LBXGL_BrushDraw2D_SetObjectOrdinal 
0636036D 11              pop 
0636036E 05 0D           ln 13 
06360370 10 0B           push #!<svm_blk_t:06360420> 
06360372 97 0C0D00       tybind BTCL_ClientStuff_Draw #"()r" () 
06360376 05 19           ln 25 
06360378 2A 02           tymark #"(Cs)r" 
0636037A 10 0E           push "Client Stuff Eval: End\n" 
0636037C 24 04           tailcall_s gc_printf 
0636037E 29              ret 

Client Stuff Eval: Begin
Client Stuff Eval: End
Texture: Missing-Base: textures/env/bkgtst
LBXGL_SkyBox_LoadSky: bkgtst
Texture: Missing-Base: textures/env/stars
LBXGL_SkyBox_LoadSky: stars
Texture: Missing-Base: textures/env/bkgr
LBXGL_SkyBox_LoadSky: bkgr
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,-512,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
SoundRec: Sound overrun
RNG Init
Th 00001D54 3608 1000496C
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x08A63520
mov [esi+248], 15
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x06AA6FE0
call @0x009D3585
mov [esp+4], eax
call @0x009D22B6
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x009D2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x06AA7100
mov eax, [ebp+12]
mov [esp+4], eax
call @0x009D2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x06AA72E0
call @0x009D18D9
mov [esp+4], eax
call @0x009D16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x009D2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
PDGL: Main Break
app1 shutdown
BGBGC_DeinitThread
GC: Termination Request (bgbgc_spawngc<0)
GC: Collect Loop Exited
