CmdLine: 'engine0'
Th 000000C8 10604 10001FFF
Th 000000CC 10348 0F111500
SpaceNew(0): _flonum_t C0000000..D0000000
SpaceNew(1): _fixint_t D0000000..E0000000
SpaceNew(2): _ustring_t E0000000..E1000000
SpaceNew(3): _usymbol_t E1000000..E2000000
SpaceNew(4): _char_t E2000000..E2010000
mounting F:\bgbtech_misc\bgbtech_engine as /
mounting F:\bgbtech_misc\bgbtech_engine\resource as /
vfexwad_vfmount: No Module Data engine0.exe
DYLL_MetaPath_LoadDB2: engine0_meta.txt engine0
Load DB 'engine0_meta.txt': fail
vfexwad_vfmount: No Module Data ntdll.dll
DYLL_MetaPath_LoadDB2: ntdll_meta.txt ntdll
Load DB 'ntdll_meta.txt': fail
vfexwad_vfmount: No Module Data kernel32.dll
DYLL_MetaPath_LoadDB2: kernel32_meta.txt kernel32
Load DB 'kernel32_meta.txt': fail
vfexwad_vfmount: No Module Data KERNELBASE.dll
DYLL_MetaPath_LoadDB2: KERNELBASE_meta.txt KERNELBASE
Load DB 'KERNELBASE_meta.txt': fail
Got Module Data 09580020 905216
DYLL_MetaPath_LoadDB2: btgecm_meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm (14295 keys, 51432 lines)
Load DB 'exwad/btgecm/meta.txt': pass
vfexwad_vfmount: No Module Data bgbbtjpg.dll
DYLL_MetaPath_LoadDB2: bgbbtjpg_meta.txt bgbbtjpg
Load DB 'bgbbtjpg_meta.txt': fail
vfexwad_vfmount: No Module Data bgbdy.dll
DYLL_MetaPath_LoadDB2: bgbdy_meta.txt bgbdy
Load DB 'bgbdy_meta.txt': fail
vfexwad_vfmount: No Module Data bgbgc.dll
DYLL_MetaPath_LoadDB2: bgbgc_meta.txt bgbgc
Load DB 'bgbgc_meta.txt': fail
vfexwad_vfmount: No Module Data bgbasm.dll
DYLL_MetaPath_LoadDB2: bgbasm_meta.txt bgbasm
Load DB 'bgbasm_meta.txt': fail
vfexwad_vfmount: No Module Data zpack.dll
DYLL_MetaPath_LoadDB2: zpack_meta.txt zpack
Load DB 'zpack_meta.txt': fail
vfexwad_vfmount: No Module Data libbgbmid.dll
DYLL_MetaPath_LoadDB2: libbgbmid_meta.txt libbgbmid
DYLL_MetaPath_LoadDB2: bgbmid_meta.txt libbgbmid
Load DB 'libbgbmid_meta.txt': fail
vfexwad_vfmount: No Module Data libvecmath.dll
DYLL_MetaPath_LoadDB2: libvecmath_meta.txt libvecmath
DYLL_MetaPath_LoadDB2: vecmath_meta.txt libvecmath
Load DB 'libvecmath_meta.txt': fail
vfexwad_vfmount: No Module Data WINMM.dll
DYLL_MetaPath_LoadDB2: WINMM_meta.txt WINMM
Load DB 'WINMM_meta.txt': fail
vfexwad_vfmount: No Module Data msvcrt.dll
DYLL_MetaPath_LoadDB2: msvcrt_meta.txt msvcrt
Load DB 'msvcrt_meta.txt': fail
vfexwad_vfmount: No Module Data USER32.dll
DYLL_MetaPath_LoadDB2: USER32_meta.txt USER32
Load DB 'USER32_meta.txt': fail
vfexwad_vfmount: No Module Data GDI32.dll
DYLL_MetaPath_LoadDB2: GDI32_meta.txt GDI32
Load DB 'GDI32_meta.txt': fail
vfexwad_vfmount: No Module Data LPK.dll
DYLL_MetaPath_LoadDB2: LPK_meta.txt LPK
Load DB 'LPK_meta.txt': fail
vfexwad_vfmount: No Module Data USP10.dll
DYLL_MetaPath_LoadDB2: USP10_meta.txt USP10
Load DB 'USP10_meta.txt': fail
vfexwad_vfmount: No Module Data ADVAPI32.dll
DYLL_MetaPath_LoadDB2: ADVAPI32_meta.txt ADVAPI32
Load DB 'ADVAPI32_meta.txt': fail
vfexwad_vfmount: No Module Data sechost.dll
DYLL_MetaPath_LoadDB2: sechost_meta.txt sechost
Load DB 'sechost_meta.txt': fail
vfexwad_vfmount: No Module Data RPCRT4.dll
DYLL_MetaPath_LoadDB2: RPCRT4_meta.txt RPCRT4
Load DB 'RPCRT4_meta.txt': fail
vfexwad_vfmount: No Module Data SspiCli.dll
DYLL_MetaPath_LoadDB2: SspiCli_meta.txt SspiCli
Load DB 'SspiCli_meta.txt': fail
vfexwad_vfmount: No Module Data CRYPTBASE.dll
DYLL_MetaPath_LoadDB2: CRYPTBASE_meta.txt CRYPTBASE
Load DB 'CRYPTBASE_meta.txt': fail
vfexwad_vfmount: No Module Data MSVFW32.dll
DYLL_MetaPath_LoadDB2: MSVFW32_meta.txt MSVFW32
Load DB 'MSVFW32_meta.txt': fail
vfexwad_vfmount: No Module Data SHELL32.dll
DYLL_MetaPath_LoadDB2: SHELL32_meta.txt SHELL32
Load DB 'SHELL32_meta.txt': fail
vfexwad_vfmount: No Module Data SHLWAPI.dll
DYLL_MetaPath_LoadDB2: SHLWAPI_meta.txt SHLWAPI
Load DB 'SHLWAPI_meta.txt': fail
vfexwad_vfmount: No Module Data COMCTL32.dll
DYLL_MetaPath_LoadDB2: COMCTL32_meta.txt COMCTL32
Load DB 'COMCTL32_meta.txt': fail
Got Module Data 09A60020 1159168
DYLL_MetaPath_LoadDB2: bgbsvm_meta.txt bgbsvm
DYLL_MetaPath_LoadDB2: exwad/bgbsvm/meta.txt bgbsvm
DYLL_MetaPath_LoadDB2: exwad/bgbsvm/meta.txt bgbsvm (10499 keys, 37580 lines)
Load DB 'exwad/bgbsvm/meta.txt': pass
vfexwad_vfmount: No Module Data bgbnet.dll
DYLL_MetaPath_LoadDB2: bgbnet_meta.txt bgbnet
Load DB 'bgbnet_meta.txt': fail
vfexwad_vfmount: No Module Data WSOCK32.dll
DYLL_MetaPath_LoadDB2: WSOCK32_meta.txt WSOCK32
Load DB 'WSOCK32_meta.txt': fail
vfexwad_vfmount: No Module Data WS2_32.dll
DYLL_MetaPath_LoadDB2: WS2_32_meta.txt WS2_32
Load DB 'WS2_32_meta.txt': fail
vfexwad_vfmount: No Module Data NSI.dll
DYLL_MetaPath_LoadDB2: NSI_meta.txt NSI
Load DB 'NSI_meta.txt': fail
vfexwad_vfmount: No Module Data ole32.dll
DYLL_MetaPath_LoadDB2: ole32_meta.txt ole32
Load DB 'ole32_meta.txt': fail
Got Module Data 09D50020 1388544
DYLL_MetaPath_LoadDB2: liblbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: lbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2 (19834 keys, 70888 lines)
Load DB 'exwad/liblbxgl2/meta.txt': pass
vfexwad_vfmount: No Module Data libpdgl.dll
DYLL_MetaPath_LoadDB2: libpdgl_meta.txt libpdgl
DYLL_MetaPath_LoadDB2: pdgl_meta.txt libpdgl
Load DB 'libpdgl_meta.txt': fail
vfexwad_vfmount: No Module Data libpdglui.dll
DYLL_MetaPath_LoadDB2: libpdglui_meta.txt libpdglui
DYLL_MetaPath_LoadDB2: pdglui_meta.txt libpdglui
Load DB 'libpdglui_meta.txt': fail
vfexwad_vfmount: No Module Data SETUPAPI.dll
DYLL_MetaPath_LoadDB2: SETUPAPI_meta.txt SETUPAPI
Load DB 'SETUPAPI_meta.txt': fail
vfexwad_vfmount: No Module Data CFGMGR32.dll
DYLL_MetaPath_LoadDB2: CFGMGR32_meta.txt CFGMGR32
Load DB 'CFGMGR32_meta.txt': fail
vfexwad_vfmount: No Module Data OLEAUT32.dll
DYLL_MetaPath_LoadDB2: OLEAUT32_meta.txt OLEAUT32
Load DB 'OLEAUT32_meta.txt': fail
vfexwad_vfmount: No Module Data DEVOBJ.dll
DYLL_MetaPath_LoadDB2: DEVOBJ_meta.txt DEVOBJ
Load DB 'DEVOBJ_meta.txt': fail
vfexwad_vfmount: No Module Data IMM32.DLL
DYLL_MetaPath_LoadDB2: IMM32_meta.txt IMM32
Load DB 'IMM32_meta.txt': fail
vfexwad_vfmount: No Module Data MSCTF.dll
DYLL_MetaPath_LoadDB2: MSCTF_meta.txt MSCTF
Load DB 'MSCTF_meta.txt': fail
DYLL_LoadLibraryI: Load game_base.dll
DYLL_LoadLibraryI: Load resource/game_base.dll
DYLL_MetaPath_LoadDB2: cc_usr/metapath.txt (null)
mounting F:\bgbtech_misc\bgbtech_engine\resource_mini as /
DYLL_LoadLibraryI: Load opengl32.dll
DYLL_LoadLibraryI: Success Loading opengl32.dll
vfexwad_vfmount: No Module Data opengl32.dll
DYLL_MetaPath_LoadDB2: opengl32_meta.txt opengl32
Load DB 'opengl32': fail
DYLL_LoadLibrary: Loaded opengl32
OpenGL Vendor=ATI Technologies Inc.
OpenGL Renderer=AMD Radeon R9 200 Series
OpenGL Version=4.5.13399 Compatibility Profile Context 15.200.1062.1004
PDGL: Startup
loading font 'unicode':'fonts/unifont.bfn'
loading font 'fixed_B':'fonts/fixed_b.bfn'
loading font 'fixed_16px':'fonts/fixed_cp437_16px.bfn'
loading font 'fixed_32px':'fonts/fixed_32px.bfn'
loading font 'fixed_64px':'fonts/fixed_64px.bfn'
loading font 'fixed':'fonts/fixed_cp437_8px.bfn'
loading font 'fixed_cp437_8px':'fonts/fixed_cp437_8px.bfn'
loading font 'gfx':'fonts/gfx.bfn'
Load Patch instruments/acpiano (0)
LBXGL_Particle_Init
PDGL: Textures Init
PDGL_InitShader
PDGL_InitShader: OK
DYLL_LoadLibraryI: Load clientx86.dll
DYLL_LoadLibraryI: Load resource/clientx86.dll
DYLL_LoadLibraryI: Success Loading resource/clientx86.dll
Got Module Data 0D4D3A48 512000
DYLL_MetaPath_LoadDB2: clientx86_meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86 (19828 keys, 70870 lines)
Load DB 'clientx86': pass
DYLL_LoadLibrary: Loaded clientx86
BTGE_ClientInitFunc: BTCL_NewWorld Pass 518912DF
stmt: (dbgmark "bsvm/init.bs" 1) -> (dbgmark "bsvm/init.bs" 1)
stmt: (flag extern (import "bsvm/init/Exceptions")) -> (flag extern (import "bsvm/init/Exceptions"))
stmt: (linenum 2) -> (linenum 2)
expr: (flag extern (import "bsvm/init/Errors")) -> (flag extern (import "bsvm/init/Errors"))
BLK (null), SA No, Capture=Yes
08248F20 02 0101         dbgmark "bsvm/init.bs" 1 
08248F23 9A 0203         import "bsvm/init/Exceptions" Ce 
08248F26 05 02           ln 2 
08248F28 9A 0403         import "bsvm/init/Errors" Ce 
08248F2B 42              push_null 
08248F2C 1A              clearenv 
08248F2D 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 1) -> (dbgmark "bsvm/init/Exceptions.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin)))))) -> (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin))))))
expr: (rlambda Exception () (begin)) -> (rlambda Exception () (begin))
expr: (begin) -> ()
BLK Exception, SA No, Capture=Yes
0824ADF0 42              push_null 
0824ADF1 1A              clearenv 
0824ADF2 29              ret 

expr: (rlambda Exception (str) (begin)) -> (rlambda Exception (str) (begin))
expr: (begin) -> ()
BLK Exception, SA Yes, Capture=Yes
0824B700 42              push_null 
0824B701 1A              clearenv 
0824B702 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 11) -> (dbgmark "bsvm/init/Exceptions.bs" 11)
stmt: (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))))))) -> (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))))))
expr: (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))) -> (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 14) -> (dbgmark "bsvm/init/Exceptions.bs" 14)
expr: (funcall super) -> (funcall super)
BLK NullPointerException, SA No, Capture=Yes
0824C210 02 010E         dbgmark "bsvm/init/Exceptions.bs" 14 
0824C213 20              mark 
0824C214 C20E            call_super 
0824C216 1A              clearenv 
0824C217 29              ret 

expr: (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))) -> (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 16) -> (dbgmark "bsvm/init/Exceptions.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK NullPointerException, SA Yes, Capture=Yes
0824CC00 02 0110         dbgmark "bsvm/init/Exceptions.bs" 16 
0824CC03 20              mark 
0824CC04 5A 00           lload 0 
0824CC06 C20E            call_super 
0824CC08 1A              clearenv 
0824CC09 29              ret 

stmt: (linenum 19) -> (linenum 19)
stmt: (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))))))) -> (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))))))
expr: (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))) -> (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 22) -> (dbgmark "bsvm/init/Exceptions.bs" 22)
expr: (funcall super) -> (funcall super)
BLK CastFailException, SA No, Capture=Yes
0824D4F0 02 0116         dbgmark "bsvm/init/Exceptions.bs" 22 
0824D4F3 20              mark 
0824D4F4 C20E            call_super 
0824D4F6 1A              clearenv 
0824D4F7 29              ret 

expr: (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))) -> (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 24) -> (dbgmark "bsvm/init/Exceptions.bs" 24)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK CastFailException, SA Yes, Capture=Yes
0824DDE0 02 0118         dbgmark "bsvm/init/Exceptions.bs" 24 
0824DDE3 20              mark 
0824DDE4 5A 00           lload 0 
0824DDE6 C20E            call_super 
0824DDE8 1A              clearenv 
0824DDE9 29              ret 

stmt: (linenum 27) -> (linenum 27)
stmt: (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))))))) -> (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))))))
expr: (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))) -> (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 30) -> (dbgmark "bsvm/init/Exceptions.bs" 30)
expr: (funcall super) -> (funcall super)
BLK BoundsCheckException, SA No, Capture=Yes
0824E6D0 02 011E         dbgmark "bsvm/init/Exceptions.bs" 30 
0824E6D3 20              mark 
0824E6D4 C20E            call_super 
0824E6D6 1A              clearenv 
0824E6D7 29              ret 

expr: (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))) -> (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 32) -> (dbgmark "bsvm/init/Exceptions.bs" 32)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK BoundsCheckException, SA Yes, Capture=Yes
0824EFC0 02 0120         dbgmark "bsvm/init/Exceptions.bs" 32 
0824EFC3 20              mark 
0824EFC4 5A 00           lload 0 
0824EFC6 C20E            call_super 
0824EFC8 1A              clearenv 
0824EFC9 29              ret 

stmt: (linenum 35) -> (linenum 35)
expr: (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))))))) -> (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))))))
expr: (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))) -> (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 38) -> (dbgmark "bsvm/init/Exceptions.bs" 38)
expr: (funcall super) -> (funcall super)
BLK RightsCheckException, SA No, Capture=Yes
0824F8B0 02 0126         dbgmark "bsvm/init/Exceptions.bs" 38 
0824F8B3 20              mark 
0824F8B4 C20E            call_super 
0824F8B6 1A              clearenv 
0824F8B7 29              ret 

expr: (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))) -> (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 40) -> (dbgmark "bsvm/init/Exceptions.bs" 40)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK RightsCheckException, SA Yes, Capture=Yes
082501A0 02 0128         dbgmark "bsvm/init/Exceptions.bs" 40 
082501A3 20              mark 
082501A4 5A 00           lload 0 
082501A6 C20E            call_super 
082501A8 1A              clearenv 
082501A9 29              ret 

BLK (null), SA No, Capture=Yes
082502C0 02 0101         dbgmark "bsvm/init/Exceptions.bs" 1 
082502C3 C200 0200       begin_package bsvm/init () 
082502C7 05 03           ln 3 
082502C9 C202 030004     begin_class Exception () p 
082502CE 10 05           push #!<svm_blk_t:0824AD70> 
082502D0 97 030604       tybind Exception #"()r" p 
082502D4 10 07           push #!<svm_blk_t:0824B680> 
082502D6 97 030804       tybind Exception #"(r)r" p 
082502DA C206            end_class 
082502DC 11              pop 
082502DD 02 010B         dbgmark "bsvm/init/Exceptions.bs" 11 
082502E0 C202 090304     begin_class NullPointerException Exception p 
082502E5 10 0A           push #!<svm_blk_t:0824C190> 
082502E7 97 090604       tybind NullPointerException #"()r" p 
082502EB 10 0B           push #!<svm_blk_t:0824CB80> 
082502ED 97 090804       tybind NullPointerException #"(r)r" p 
082502F1 C206            end_class 
082502F3 11              pop 
082502F4 05 13           ln 19 
082502F6 C202 0C0304     begin_class CastFailException Exception p 
082502FB 10 0D           push #!<svm_blk_t:0824D470> 
082502FD 97 0C0604       tybind CastFailException #"()r" p 
08250301 10 0E           push #!<svm_blk_t:0824DD60> 
08250303 97 0C0804       tybind CastFailException #"(r)r" p 
08250307 C206            end_class 
08250309 11              pop 
0825030A 05 1B           ln 27 
0825030C C202 0F0304     begin_class BoundsCheckException Exception p 
08250311 10 10           push #!<svm_blk_t:0824E650> 
08250313 97 0F0604       tybind BoundsCheckException #"()r" p 
08250317 10 11           push #!<svm_blk_t:0824EF40> 
08250319 97 0F0804       tybind BoundsCheckException #"(r)r" p 
0825031D C206            end_class 
0825031F 11              pop 
08250320 05 23           ln 35 
08250322 C202 120304     begin_class RightsCheckException Exception p 
08250327 10 13           push #!<svm_blk_t:0824F830> 
08250329 97 120604       tybind RightsCheckException #"()r" p 
0825032D 10 14           push #!<svm_blk_t:08250120> 
0825032F 97 120804       tybind RightsCheckException #"(r)r" p 
08250333 C206            end_class 
08250335 C204            end_package 
08250337 11              pop 
08250338 29              ret 

stmt: (dbgmark "bsvm/init/Errors.bs" 1) -> (dbgmark "bsvm/init/Errors.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))))))) -> (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))))))
expr: (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))) -> (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 6) -> (dbgmark "bsvm/init/Errors.bs" 6)
expr: (funcall super) -> (funcall super)
BLK Error, SA No, Capture=Yes
08255170 02 0106         dbgmark "bsvm/init/Errors.bs" 6 
08255173 20              mark 
08255174 C20E            call_super 
08255176 1A              clearenv 
08255177 29              ret 

expr: (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))) -> (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 8) -> (dbgmark "bsvm/init/Errors.bs" 8)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK Error, SA Yes, Capture=Yes
08255A60 02 0108         dbgmark "bsvm/init/Errors.bs" 8 
08255A63 20              mark 
08255A64 5A 00           lload 0 
08255A66 C20E            call_super 
08255A68 1A              clearenv 
08255A69 29              ret 

stmt: (linenum 11) -> (linenum 11)
expr: (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))))))) -> (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))))))
expr: (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))) -> (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 14) -> (dbgmark "bsvm/init/Errors.bs" 14)
expr: (funcall super) -> (funcall super)
BLK IllegalAccessError, SA No, Capture=Yes
08256350 02 010E         dbgmark "bsvm/init/Errors.bs" 14 
08256353 20              mark 
08256354 C20E            call_super 
08256356 1A              clearenv 
08256357 29              ret 

expr: (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))) -> (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 16) -> (dbgmark "bsvm/init/Errors.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK IllegalAccessError, SA Yes, Capture=Yes
08256C40 02 0110         dbgmark "bsvm/init/Errors.bs" 16 
08256C43 20              mark 
08256C44 5A 00           lload 0 
08256C46 C20E            call_super 
08256C48 1A              clearenv 
08256C49 29              ret 

BLK (null), SA No, Capture=Yes
082550A0 02 0101         dbgmark "bsvm/init/Errors.bs" 1 
082550A3 C200 0200       begin_package bsvm/init () 
082550A7 05 03           ln 3 
082550A9 C202 030405     begin_class Error Exception p 
082550AE 10 06           push #!<svm_blk_t:082550F0> 
082550B0 97 030705       tybind Error #"()r" p 
082550B4 10 08           push #!<svm_blk_t:082559E0> 
082550B6 97 030905       tybind Error #"(r)r" p 
082550BA C206            end_class 
082550BC 11              pop 
082550BD 05 0B           ln 11 
082550BF C202 0A0305     begin_class IllegalAccessError Error p 
082550C4 10 0B           push #!<svm_blk_t:082562D0> 
082550C6 97 0A0705       tybind IllegalAccessError #"()r" p 
082550CA 10 0C           push #!<svm_blk_t:08256BC0> 
082550CC 97 0A0905       tybind IllegalAccessError #"(r)r" p 
082550D0 C206            end_class 
082550D2 C204            end_package 
082550D4 11              pop 
082550D5 29              ret 

stmt: (dbgmark "game_cl/main.bs" 1) -> (dbgmark "game_cl/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: "BGBScript Client Start\n" -> "BGBScript Client Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))))) -> (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))) -> (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))) -> (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")) -> (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))
stmt: (dbgmark "game_cl/main.bs" 9) -> (dbgmark "game_cl/main.bs" 9)
expr: (funcall printf "BTCL_ScriptInit: Called\n") -> (funcall printf "BTCL_ScriptInit: Called\n")
expr: "BTCL_ScriptInit: Called\n" -> "BTCL_ScriptInit: Called\n"
BLK BTCL_ScriptInit, SA No, Capture=Yes
082594D0 02 0109         dbgmark "game_cl/main.bs" 9 
082594D3 2A 02           tymark #"(Cs)r" 
082594D5 10 03           push "BTCL_ScriptInit: Called\n" 
082594D7 24 04           tailcall_s gc_printf 
082594D9 1A              clearenv 
082594DA 29              ret 

stmt: (linenum 12) -> (linenum 12)
stmt: (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))) -> (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))
expr: (rlambda (cast void BTCL_ScriptDrawUI) () (begin)) -> (rlambda (cast void BTCL_ScriptDrawUI) () (begin))
expr: (begin) -> ()
BLK BTCL_ScriptDrawUI, SA No, Capture=Yes
08259DE0 42              push_null 
08259DE1 1A              clearenv 
08259DE2 29              ret 

BLK (null), SA No, Capture=Yes
08259E90 02 0101         dbgmark "game_cl/main.bs" 1 
08259E93 9A 0203         import "C" n 
08259E96 05 03           ln 3 
08259E98 2A 04           tymark #"(Cs)r" 
08259E9A 10 05           push "BGBScript Client Start\n" 
08259E9C 23 06           call_s gc_printf 
08259E9E 11              pop 
08259E9F 05 05           ln 5 
08259EA1 C200 0703       begin_package C/game_cl/main n 
08259EA5 05 07           ln 7 
08259EA7 10 08           push #!<svm_blk_t:08259440> 
08259EA9 97 090A00       tybind BTCL_ScriptInit #"()v" () 
08259EAD 05 0C           ln 12 
08259EAF 10 0B           push #!<svm_blk_t:08259D60> 
08259EB1 97 0C0A00       tybind BTCL_ScriptDrawUI #"()v" () 
08259EB5 C204            end_package 
08259EB7 11              pop 
08259EB8 29              ret 

BGBScript Client Start
BSVM_Pop: Stack Underflow @ 08259E90
BTCL_ScriptInit: Called
DYLL_LoadLibraryI: Load serverx86.dll
DYLL_LoadLibraryI: Load resource/serverx86.dll
DYLL_LoadLibraryI: Success Loading resource/serverx86.dll
Got Module Data 0EC50020 798720
DYLL_MetaPath_LoadDB2: serverx86_meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86 (16000 keys, 57323 lines)
Load DB 'serverx86': pass
DYLL_LoadLibrary: Loaded serverx86
BTGE_ServerInitFunc: btsvBindWorld Pass 0EBA1EF1
BTGE_ClientInitFunc: BTCL_BindWorld Pass 51891091
BTGE_ClientInitFunc: BTCL_BindBrushWorld Pass 5189119A
Th 00001C38 10028 0121100F
PDGL: Main
Net Init Low (Winsock).
  hostname=GAMMA4-W7
  IPv4=192.168.1.100
TCP Initialized
Meta0_Init
BSXRP Init
Meta0: new port 18512, service bsxrp-server
BTGE_ServerInitFunc: btsvStepWorld Pass 0EBA1D61
BTGE_ClientInitFunc: BTCL_HandleInput Pass 518910DC
PDGLUI_InitRift: No Device
BTGE_ClientInitFunc: BTCL_StepWorld Pass 51891118
BTGE_ClientInitFunc: BTCL_SetupClientFrame Pass 51891316
BTGE_ServerInitFunc: btsvComposeUpdate Pass 0EBA1C71
BTGE_ServerInitFunc: btsvFinishUpdate Pass 0EBA18A2
Texture: Missing-Base: textures/env/space1
LBXGL_SkyBox_LoadSky: space1
BTGE_ClientInitFunc: BTCL_Draw2D Pass 5189116D
new frag
new frag
SoundRec: Sound overrun
Eval:  load("game/main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/main.bs") -> (funcall load "game/main.bs")
expr: "game/main.bs" -> "game/main.bs"
BLK (null), SA No, Capture=Yes
084E4120 02 0101         dbgmark "<eval-str>" 1 
084E4123 2A 02           tymark #"(Cs)r" 
084E4125 10 03           push "game/main.bs" 
084E4127 24 04           tailcall_s load 
084E4129 1A              clearenv 
084E412A 29              ret 

stmt: (dbgmark "game/main.bs" 6) -> (dbgmark "game/main.bs" 6)
stmt: (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)) -> (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))
stmt: (dbgmark "game/main.bs" 8) -> (dbgmark "game/main.bs" 8)
stmt: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: "menu" -> "menu"
stmt: (linenum 10) -> (linenum 10)
stmt: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: "&New Game" -> "&New Game"
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: "ng_peaceful" -> "ng_peaceful"
expr: "Peaceful" -> "Peaceful"
stmt: (linenum 12) -> (linenum 12)
stmt: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: "ng_easy" -> "ng_easy"
expr: "Easy" -> "Easy"
stmt: (linenum 13) -> (linenum 13)
stmt: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: "ng_medium" -> "ng_medium"
expr: "Medium" -> "Medium"
stmt: (linenum 14) -> (linenum 14)
stmt: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: "ng_hard" -> "ng_hard"
expr: "Hard" -> "Hard"
stmt: (linenum 15) -> (linenum 15)
stmt: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: "ng_nightmare" -> "ng_nightmare"
expr: "Nightmare" -> "Nightmare"
stmt: (linenum 16) -> (linenum 16)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 18) -> (linenum 18)
stmt: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: "&Load Game" -> "&Load Game"
stmt: (linenum 19) -> (linenum 19)
stmt: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: "sv_load1" -> "sv_load1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 20) -> (linenum 20)
stmt: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: "sv_load2" -> "sv_load2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 21) -> (linenum 21)
stmt: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: "sv_load3" -> "sv_load3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 22) -> (linenum 22)
stmt: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: "sv_load4" -> "sv_load4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 23) -> (linenum 23)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 25) -> (linenum 25)
stmt: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: "&Save Game" -> "&Save Game"
stmt: (linenum 26) -> (linenum 26)
stmt: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: "sv_save1" -> "sv_save1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 27) -> (linenum 27)
stmt: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: "sv_save2" -> "sv_save2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 28) -> (linenum 28)
stmt: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: "sv_save3" -> "sv_save3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 29) -> (linenum 29)
stmt: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: "sv_save4" -> "sv_save4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 30) -> (linenum 30)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: "Help" -> "Help"
stmt: (linenum 34) -> (linenum 34)
stmt: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: "help_generic" -> "help_generic"
expr: "General" -> "General"
stmt: (linenum 35) -> (linenum 35)
stmt: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: "help_about" -> "help_about"
expr: "About" -> "About"
stmt: (linenum 36) -> (linenum 36)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 38) -> (linenum 38)
expr: (funcall PDGLUI_EndMenu) -> (funcall PDGLUI_EndMenu)
BLK Game_CreateMainMenu, SA No, Capture=Yes
084E6170 02 0108         dbgmark "game/main.bs" 8 
084E6173 2A 02           tymark #"(Cs)r" 
084E6175 10 03           push "menu" 
084E6177 23 04           call_s PDGLUI_BeginMenu 
084E6179 11              pop 
084E617A 05 0A           ln 10 
084E617C 2A 02           tymark #"(Cs)r" 
084E617E 10 05           push "&New Game" 
084E6180 23 06           call_s PDGLUI_BeginSubMenu 
084E6182 11              pop 
084E6183 05 0B           ln 11 
084E6185 2A 07           tymark #"(CsCs)r" 
084E6187 10 08           push "ng_peaceful" 
084E6189 10 09           push "Peaceful" 
084E618B 23 0A           call_s PDGLUI_MenuItem 
084E618D 11              pop 
084E618E 05 0C           ln 12 
084E6190 2A 07           tymark #"(CsCs)r" 
084E6192 10 0B           push "ng_easy" 
084E6194 10 0C           push "Easy" 
084E6196 23 0A           call_s PDGLUI_MenuItem 
084E6198 11              pop 
084E6199 05 0D           ln 13 
084E619B 2A 07           tymark #"(CsCs)r" 
084E619D 10 0D           push "ng_medium" 
084E619F 10 0E           push "Medium" 
084E61A1 23 0A           call_s PDGLUI_MenuItem 
084E61A3 11              pop 
084E61A4 05 0E           ln 14 
084E61A6 2A 07           tymark #"(CsCs)r" 
084E61A8 10 0F           push "ng_hard" 
084E61AA 10 10           push "Hard" 
084E61AC 23 0A           call_s PDGLUI_MenuItem 
084E61AE 11              pop 
084E61AF 05 0F           ln 15 
084E61B1 2A 07           tymark #"(CsCs)r" 
084E61B3 10 11           push "ng_nightmare" 
084E61B5 10 12           push "Nightmare" 
084E61B7 23 0A           call_s PDGLUI_MenuItem 
084E61B9 11              pop 
084E61BA 05 10           ln 16 
084E61BC 2A 13           tymark #"()r" 
084E61BE 23 14           call_s PDGLUI_EndSubMenu 
084E61C0 11              pop 
084E61C1 05 12           ln 18 
084E61C3 2A 02           tymark #"(Cs)r" 
084E61C5 10 15           push "&Load Game" 
084E61C7 23 06           call_s PDGLUI_BeginSubMenu 
084E61C9 11              pop 
084E61CA 05 13           ln 19 
084E61CC 2A 07           tymark #"(CsCs)r" 
084E61CE 10 16           push "sv_load1" 
084E61D0 10 17           push "Game 1" 
084E61D2 23 0A           call_s PDGLUI_MenuItem 
084E61D4 11              pop 
084E61D5 05 14           ln 20 
084E61D7 2A 07           tymark #"(CsCs)r" 
084E61D9 10 18           push "sv_load2" 
084E61DB 10 19           push "Game 2" 
084E61DD 23 0A           call_s PDGLUI_MenuItem 
084E61DF 11              pop 
084E61E0 05 15           ln 21 
084E61E2 2A 07           tymark #"(CsCs)r" 
084E61E4 10 1A           push "sv_load3" 
084E61E6 10 1B           push "Game 3" 
084E61E8 23 0A           call_s PDGLUI_MenuItem 
084E61EA 11              pop 
084E61EB 05 16           ln 22 
084E61ED 2A 07           tymark #"(CsCs)r" 
084E61EF 10 1C           push "sv_load4" 
084E61F1 10 1D           push "Game 4" 
084E61F3 23 0A           call_s PDGLUI_MenuItem 
084E61F5 11              pop 
084E61F6 05 17           ln 23 
084E61F8 2A 13           tymark #"()r" 
084E61FA 23 14           call_s PDGLUI_EndSubMenu 
084E61FC 11              pop 
084E61FD 05 19           ln 25 
084E61FF 2A 02           tymark #"(Cs)r" 
084E6201 10 1E           push "&Save Game" 
084E6203 23 06           call_s PDGLUI_BeginSubMenu 
084E6205 11              pop 
084E6206 05 1A           ln 26 
084E6208 2A 07           tymark #"(CsCs)r" 
084E620A 10 1F           push "sv_save1" 
084E620C 10 17           push "Game 1" 
084E620E 23 0A           call_s PDGLUI_MenuItem 
084E6210 11              pop 
084E6211 05 1B           ln 27 
084E6213 2A 07           tymark #"(CsCs)r" 
084E6215 10 20           push "sv_save2" 
084E6217 10 19           push "Game 2" 
084E6219 23 0A           call_s PDGLUI_MenuItem 
084E621B 11              pop 
084E621C 05 1C           ln 28 
084E621E 2A 07           tymark #"(CsCs)r" 
084E6220 10 21           push "sv_save3" 
084E6222 10 1B           push "Game 3" 
084E6224 23 0A           call_s PDGLUI_MenuItem 
084E6226 11              pop 
084E6227 05 1D           ln 29 
084E6229 2A 07           tymark #"(CsCs)r" 
084E622B 10 22           push "sv_save4" 
084E622D 10 1D           push "Game 4" 
084E622F 23 0A           call_s PDGLUI_MenuItem 
084E6231 11              pop 
084E6232 05 1E           ln 30 
084E6234 2A 13           tymark #"()r" 
084E6236 23 14           call_s PDGLUI_EndSubMenu 
084E6238 11              pop 
084E6239 05 21           ln 33 
084E623B 2A 02           tymark #"(Cs)r" 
084E623D 10 23           push "Help" 
084E623F 23 06           call_s PDGLUI_BeginSubMenu 
084E6241 11              pop 
084E6242 05 22           ln 34 
084E6244 2A 07           tymark #"(CsCs)r" 
084E6246 10 24           push "help_generic" 
084E6248 10 25           push "General" 
084E624A 23 0A           call_s PDGLUI_MenuItem 
084E624C 11              pop 
084E624D 05 23           ln 35 
084E624F 2A 07           tymark #"(CsCs)r" 
084E6251 10 26           push "help_about" 
084E6253 10 27           push "About" 
084E6255 23 0A           call_s PDGLUI_MenuItem 
084E6257 11              pop 
084E6258 05 24           ln 36 
084E625A 2A 13           tymark #"()r" 
084E625C 23 14           call_s PDGLUI_EndSubMenu 
084E625E 11              pop 
084E625F 05 26           ln 38 
084E6261 2A 13           tymark #"()r" 
084E6263 24 28           tailcall_s PDGLUI_EndMenu 
084E6265 1A              clearenv 
084E6266 29              ret 

stmt: (linenum 41) -> (linenum 41)
stmt: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: "BGBScript Main Start\n" -> "BGBScript Main Start\n"
stmt: (linenum 43) -> (linenum 43)
stmt: (flag extern (import "game_cl/main")) -> (flag extern (import "game_cl/main"))
stmt: (linenum 45) -> (linenum 45)
stmt: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
expr: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
stmt: (linenum 47) -> (linenum 47)
expr: (funcall printf "BGBScript Main End\n") -> (funcall printf "BGBScript Main End\n")
expr: "BGBScript Main End\n" -> "BGBScript Main End\n"
BLK (null), SA No, Capture=Yes
084E6350 02 0106         dbgmark "game/main.bs" 6 
084E6353 10 02           push #!<svm_blk_t:084E6050> 
084E6355 97 030400       tybind Game_CreateMainMenu #"()r" () 
084E6359 05 29           ln 41 
084E635B 2A 05           tymark #"(Cs)r" 
084E635D 10 06           push "BGBScript Main Start\n" 
084E635F 23 07           call_s gc_printf 
084E6361 11              pop 
084E6362 05 2B           ln 43 
084E6364 9A 0809         import "game_cl/main" Ce 
084E6367 05 2D           ln 45 
084E6369 2A 04           tymark #"()r" 
084E636B 23 03           call_s Game_CreateMainMenu 
084E636D 11              pop 
084E636E 05 2F           ln 47 
084E6370 2A 05           tymark #"(Cs)r" 
084E6372 10 0A           push "BGBScript Main End\n" 
084E6374 24 07           tailcall_s gc_printf 
084E6376 29              ret 

BGBScript Main Start
BGBScript Main End
()
new frag
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x084E2B90
call @0x0F3E18D9
mov [esp+4], eax
call @0x0F3E16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F3E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BTGE_ClientInitFunc: BTCL_FlushWorld Pass 518912CB
BTGE_ServerInitFunc: BTGE_WorldTeardown Pass 0EBA21D0
BTGE_ClientInitFunc: BTCL_LoadMapFile Pass 51891136
BTGE_ServerInitFunc: BTSV_LoadMapFile Pass 0EBA1F82
Map Loaded: 0 brushes, 4 ents, 1 lights
BTGE_ServerInitFunc: btsvSpawnWorld Pass 0EBA1DC0
BT_SpawnWorld 0D453888
stmt: (dbgmark "game_sv/main.bs" 1) -> (dbgmark "game_sv/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: "BGBScript Server Start\n" -> "BGBScript Server Start\n"
stmt: (linenum 5) -> (linenum 5)
stmt: (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))))) -> (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))) -> (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))) -> (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")) -> (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))
stmt: (dbgmark "game_sv/main.bs" 9) -> (dbgmark "game_sv/main.bs" 9)
expr: (funcall printf "BTSV_ScriptInit: Called\n") -> (funcall printf "BTSV_ScriptInit: Called\n")
expr: "BTSV_ScriptInit: Called\n" -> "BTSV_ScriptInit: Called\n"
BLK BTSV_ScriptInit, SA No, Capture=Yes
084EE960 02 0109         dbgmark "game_sv/main.bs" 9 
084EE963 2A 02           tymark #"(Cs)r" 
084EE965 10 03           push "BTSV_ScriptInit: Called\n" 
084EE967 24 04           tailcall_s gc_printf 
084EE969 1A              clearenv 
084EE96A 29              ret 

stmt: (linenum 13) -> (linenum 13)
stmt: (flag extern (import "game_sv/EntityBase")) -> (flag extern (import "game_sv/EntityBase"))
stmt: (linenum 14) -> (linenum 14)
expr: (flag extern (import "game_sv/MonsterGeneric")) -> (flag extern (import "game_sv/MonsterGeneric"))
BLK (null), SA No, Capture=Yes
084EEA10 02 0101         dbgmark "game_sv/main.bs" 1 
084EEA13 9A 0203         import "C" n 
084EEA16 05 03           ln 3 
084EEA18 2A 04           tymark #"(Cs)r" 
084EEA1A 10 05           push "BGBScript Server Start\n" 
084EEA1C 23 06           call_s gc_printf 
084EEA1E 11              pop 
084EEA1F 05 05           ln 5 
084EEA21 C200 0703       begin_package C/game_sv/main n 
084EEA25 05 07           ln 7 
084EEA27 10 08           push #!<svm_blk_t:084EE8D0> 
084EEA29 97 090A00       tybind BTSV_ScriptInit #"()v" () 
084EEA2D C204            end_package 
084EEA2F 11              pop 
084EEA30 05 0D           ln 13 
084EEA32 9A 0B0C         import "game_sv/EntityBase" Ce 
084EEA35 05 0E           ln 14 
084EEA37 9A 0D0C         import "game_sv/MonsterGeneric" Ce 
084EEA3A 42              push_null 
084EEA3B 29              ret 

BGBScript Server Start
stmt: (dbgmark "game_sv/EntityBase.bs" 1) -> (dbgmark "game_sv/EntityBase.bs" 1)
stmt: (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin)))))) -> (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin))))))
expr: () -> ()
expr: () -> ()
expr: (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))) -> (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 9) -> (dbgmark "game_sv/EntityBase.bs" 9)
stmt: (set! entity ent) -> (set! entity ent)
expr: ent -> ent
stmt: (linenum 10) -> (linenum 10)
expr: (set! spawnEntity sent) -> (set! spawnEntity sent)
expr: sent -> sent
BLK EntityBase, SA Yes, Capture=Yes
084F1230 02 0109         dbgmark "game_sv/EntityBase.bs" 9 
084F1233 5A 01           lload 1 
084F1235 13 02           store entity 
084F1237 05 0A           ln 10 
084F1239 5A 00           lload 0 
084F123B 30              dup 
084F123C 13 03           store spawnEntity 
084F123E 1A              clearenv 
084F123F 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
084F1B40 42              push_null 
084F1B41 1A              clearenv 
084F1B42 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
084F2430 42              push_null 
084F2431 1A              clearenv 
084F2432 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
084F2D20 42              push_null 
084F2D21 1A              clearenv 
084F2D22 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
084F3610 42              push_null 
084F3611 1A              clearenv 
084F3612 29              ret 

expr: (rlambda die (self other damage) (begin)) -> (rlambda die (self other damage) (begin))
expr: (begin) -> ()
BLK die, SA Yes, Capture=Yes
084F3F20 42              push_null 
084F3F21 1A              clearenv 
084F3F22 29              ret 

expr: (rlambda prethink (self) (begin)) -> (rlambda prethink (self) (begin))
expr: (begin) -> ()
BLK prethink, SA Yes, Capture=Yes
084F4810 42              push_null 
084F4811 1A              clearenv 
084F4812 29              ret 

stmt: (dbgmark "game_sv/EntityBase.bs" 21) -> (dbgmark "game_sv/EntityBase.bs" 21)
expr: (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin)))))) -> (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin))))))
expr: (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))) -> (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 26) -> (dbgmark "game_sv/EntityBase.bs" 26)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK ActorBase, SA Yes, Capture=Yes
084F5100 02 011A         dbgmark "game_sv/EntityBase.bs" 26 
084F5103 20              mark 
084F5104 5A 01           lload 1 
084F5106 5A 00           lload 0 
084F5108 C20E            call_super 
084F510A 1A              clearenv 
084F510B 29              ret 

expr: (rlambda stand (self) (begin)) -> (rlambda stand (self) (begin))
expr: (begin) -> ()
BLK stand, SA Yes, Capture=Yes
084F59F0 42              push_null 
084F59F1 1A              clearenv 
084F59F2 29              ret 

expr: (rlambda walk (self) (begin)) -> (rlambda walk (self) (begin))
expr: (begin) -> ()
BLK walk, SA Yes, Capture=Yes
084F62E0 42              push_null 
084F62E1 1A              clearenv 
084F62E2 29              ret 

expr: (rlambda run (self) (begin)) -> (rlambda run (self) (begin))
expr: (begin) -> ()
BLK run, SA Yes, Capture=Yes
084F6BD0 42              push_null 
084F6BD1 1A              clearenv 
084F6BD2 29              ret 

expr: (rlambda missile (self) (begin)) -> (rlambda missile (self) (begin))
expr: (begin) -> ()
BLK missile, SA Yes, Capture=Yes
084F74C0 42              push_null 
084F74C1 1A              clearenv 
084F74C2 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
084F7DB0 42              push_null 
084F7DB1 1A              clearenv 
084F7DB2 29              ret 

BLK (null), SA No, Capture=Yes
084F7F00 02 0101         dbgmark "game_sv/EntityBase.bs" 1 
084F7F03 C202 020003     begin_class EntityBase () p 
084F7F08 42              push_null 
084F7F09 97 040003       tybind entity () p 
084F7F0D 42              push_null 
084F7F0E 97 050003       tybind spawnEntity () p 
084F7F12 10 06           push #!<svm_blk_t:084F11A0> 
084F7F14 97 020703       tybind EntityBase #"(rr)r" p 
084F7F18 10 08           push #!<svm_blk_t:084F1AC0> 
084F7F1A 97 090703       tybind use #"(rr)r" p 
084F7F1E 10 0A           push #!<svm_blk_t:084F23B0> 
084F7F20 97 0B0703       tybind touch #"(rr)r" p 
084F7F24 10 0C           push #!<svm_blk_t:084F2CA0> 
084F7F26 97 0D0703       tybind blocked #"(rr)r" p 
084F7F2A 10 0E           push #!<svm_blk_t:084F3590> 
084F7F2C 97 0F1003       tybind pain #"(rrr)r" p 
084F7F30 10 11           push #!<svm_blk_t:084F3EA0> 
084F7F32 97 121003       tybind die #"(rrr)r" p 
084F7F36 10 13           push #!<svm_blk_t:084F4790> 
084F7F38 97 141503       tybind prethink #"(r)r" p 
084F7F3C C206            end_class 
084F7F3E 11              pop 
084F7F3F 02 0115         dbgmark "game_sv/EntityBase.bs" 21 
084F7F42 C202 160203     begin_class ActorBase EntityBase p 
084F7F47 10 17           push #!<svm_blk_t:084F5080> 
084F7F49 97 160703       tybind ActorBase #"(rr)r" p 
084F7F4D 10 18           push #!<svm_blk_t:084F5970> 
084F7F4F 97 191503       tybind stand #"(r)r" p 
084F7F53 10 1A           push #!<svm_blk_t:084F6260> 
084F7F55 97 1B1503       tybind walk #"(r)r" p 
084F7F59 10 1C           push #!<svm_blk_t:084F6B50> 
084F7F5B 97 1D1503       tybind run #"(r)r" p 
084F7F5F 10 1E           push #!<svm_blk_t:084F7440> 
084F7F61 97 1F1503       tybind missile #"(r)r" p 
084F7F65 10 20           push #!<svm_blk_t:084F7D30> 
084F7F67 97 211503       tybind melee #"(r)r" p 
084F7F6B C206            end_class 
084F7F6D 29              ret 

Add Slot 084F9070 entity r
Add Slot 084F9210 spawnEntity r
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 2) -> (dbgmark "game_sv/MonsterGeneric.bs" 2)
stmt: (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))))))) -> (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))))))
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 19) -> (dbgmark "game_sv/MonsterGeneric.bs" 19)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 21) -> (linenum 21)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
084FC2E0 02 0113         dbgmark "game_sv/MonsterGeneric.bs" 19 
084FC2E3 2A 02           tymark #"()r" 
084FC2E5 23 03           call_s btRandom 
084FC2E7 10 04           push 0.100000 
084FC2E9 7A 111300       jmp_cond_b ge 084FC300 
084FC2ED 05 15           ln 21 
084FC2EF 2A 05           tymark #"(rrrrr)r" 
084FC2F1 5A 00           lload 0 
084FC2F3 48              push_2 
084FC2F4 5A 00           lload 0 
084FC2F6 64 06           loadindex_s snd_idle 
084FC2F8 59 6400         push_sv_f 1 
084FC2FB 47              push_1 
084FC2FC 23 07           call_s btSound 
084FC2FE 1A              clearenv 
084FC2FF 29              ret 
084FC300 42              push_null 
084FC301 1A              clearenv 
084FC302 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 30) -> (dbgmark "game_sv/MonsterGeneric.bs" 30)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 31) -> (linenum 31)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: self -> self
expr: "models/monsters/soldier/soldier.model" -> "models/monsters/soldier/soldier.model"
stmt: (linenum 34) -> (linenum 34)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 35) -> (linenum 35)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 37) -> (linenum 37)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (vector (unary - 16) (unary - 16) (unary - 24)) -> (vector (unary - 16) (unary - 16) (unary - 24))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 24) -> -24
expr: self -> self
stmt: (linenum 38) -> (linenum 38)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 39) -> (linenum 39)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 43) -> (linenum 43)
expr: (funcall btWalkmonsterStart self) -> (funcall btWalkmonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
084FCCF0 02 011E         dbgmark "game_sv/MonsterGeneric.bs" 30 
084FCCF3 49              push_3 
084FCCF4 36              dup_f 
084FCCF5 5A 00           lload 0 
084FCCF7 65 02           storeindex_s solidtype 
084FCCF9 11              pop 
084FCCFA 05 1F           ln 31 
084FCCFC 48              push_2 
084FCCFD 36              dup_f 
084FCCFE 5A 00           lload 0 
084FCD00 65 03           storeindex_s movetype 
084FCD02 11              pop 
084FCD03 05 21           ln 33 
084FCD05 2A 04           tymark #"(rCs)r" 
084FCD07 5A 00           lload 0 
084FCD09 10 05           push "models/monsters/soldier/soldier.model" 
084FCD0B 23 06           call_s btSetModel 
084FCD0D 11              pop 
084FCD0E 05 22           ln 34 
084FCD10 10 07           push "sound/soldier/solsght1" 
084FCD12 30              dup 
084FCD13 5A 00           lload 0 
084FCD15 65 08           storeindex_s snd_sight 
084FCD17 11              pop 
084FCD18 05 23           ln 35 
084FCD1A 10 09           push "sound/soldier/solidle1" 
084FCD1C 30              dup 
084FCD1D 5A 00           lload 0 
084FCD1F 65 0A           storeindex_s snd_idle 
084FCD21 11              pop 
084FCD22 05 25           ln 37 
084FCD24 20              mark 
084FCD25 58 10           push_sv_n 16 
084FCD27 58 10           push_sv_n 16 
084FCD29 58 18           push_sv_n 24 
084FCD2B 84              vector 
084FCD2C 30              dup 
084FCD2D 5A 00           lload 0 
084FCD2F 65 0B           storeindex_s mins 
084FCD31 11              pop 
084FCD32 05 26           ln 38 
084FCD34 20              mark 
084FCD35 57 10           push_sv_p 16 
084FCD37 57 10           push_sv_p 16 
084FCD39 57 28           push_sv_p 40 
084FCD3B 84              vector 
084FCD3C 30              dup 
084FCD3D 5A 00           lload 0 
084FCD3F 65 0C           storeindex_s maxs 
084FCD41 11              pop 
084FCD42 05 27           ln 39 
084FCD44 57 1E           push_sv_p 30 
084FCD46 36              dup_f 
084FCD47 5A 00           lload 0 
084FCD49 65 0D           storeindex_s health 
084FCD4B 11              pop 
084FCD4C 05 2B           ln 43 
084FCD4E 2A 0E           tymark #"(r)r" 
084FCD50 5A 00           lload 0 
084FCD52 24 0F           tailcall_s btWalkmonsterStart 
084FCD54 1A              clearenv 
084FCD55 29              ret 

expr: (rlambda deinit (self) (begin)) -> (rlambda deinit (self) (begin))
expr: (begin) -> ()
BLK deinit, SA Yes, Capture=Yes
084FD640 42              push_null 
084FD641 1A              clearenv 
084FD642 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
084FDF30 42              push_null 
084FDF31 1A              clearenv 
084FDF32 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
084FE820 42              push_null 
084FE821 1A              clearenv 
084FE822 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
084FF110 42              push_null 
084FF111 1A              clearenv 
084FF112 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
084FFA00 42              push_null 
084FFA01 1A              clearenv 
084FFA02 29              ret 

expr: (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) -> (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 65) -> (dbgmark "game_sv/MonsterGeneric.bs" 65)
expr: (funcall BT_EntityRobotExplode self) -> (funcall BT_EntityRobotExplode self)
expr: self -> self
BLK die, SA Yes, Capture=Yes
08500300 02 0141         dbgmark "game_sv/MonsterGeneric.bs" 65 
08500303 2A 02           tymark #"(r)r" 
08500305 5A 02           lload 2 
08500307 24 03           tailcall_s BT_EntityRobotExplode 
08500309 1A              clearenv 
0850030A 29              ret 

expr: (rlambda cmdmsg (self other str) (begin)) -> (rlambda cmdmsg (self other str) (begin))
expr: (begin) -> ()
BLK cmdmsg, SA Yes, Capture=Yes
08500BF0 42              push_null 
08500BF1 1A              clearenv 
08500BF2 29              ret 

expr: (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) -> (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 73) -> (dbgmark "game_sv/MonsterGeneric.bs" 73)
expr: (funcall btSetMove self stand1_mfi) -> (funcall btSetMove self stand1_mfi)
expr: self -> self
expr: stand1_mfi -> stand1_mfi
BLK stand, SA Yes, Capture=Yes
085014F0 02 0149         dbgmark "game_sv/MonsterGeneric.bs" 73 
085014F3 2A 02           tymark #"(rr)r" 
085014F5 5A 00           lload 0 
085014F7 12 03           load stand1_mfi 
085014F9 24 04           tailcall_s btSetMove 
085014FB 1A              clearenv 
085014FC 29              ret 

expr: (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) -> (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 78) -> (dbgmark "game_sv/MonsterGeneric.bs" 78)
expr: (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)) -> (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
BLK walk1_random, SA Yes, Capture=Yes
08501E20 02 014E         dbgmark "game_sv/MonsterGeneric.bs" 78 
08501E23 2A 02           tymark #"()r" 
08501E25 23 03           call_s btRandom 
08501E27 10 04           push 0.100000 
08501E29 7A 100800       jmp_cond_b le 08501E35 
08501E2D 2A 05           tymark #"(rr)r" 
08501E2F 5A 00           lload 0 
08501E31 12 06           load walk1_mfi 
08501E33 24 07           tailcall_s btSetMove 
08501E35 42              push_null 
08501E36 1A              clearenv 
08501E37 29              ret 

expr: (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) -> (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 84) -> (dbgmark "game_sv/MonsterGeneric.bs" 84)
expr: (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)) -> (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.500000 -> 0.500000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
expr: (funcall btSetMove self walk2_mfi) -> (funcall btSetMove self walk2_mfi)
expr: self -> self
expr: walk2_mfi -> walk2_mfi
BLK walk, SA Yes, Capture=Yes
08502760 02 0154         dbgmark "game_sv/MonsterGeneric.bs" 84 
08502763 2A 02           tymark #"()r" 
08502765 23 03           call_s btRandom 
08502767 59 3200         push_sv_f 0.5 
0850276A 7A 100800       jmp_cond_b le 08502776 
0850276E 2A 04           tymark #"(rr)r" 
08502770 5A 00           lload 0 
08502772 12 05           load walk1_mfi 
08502774 24 06           tailcall_s btSetMove 
08502776 2A 04           tymark #"(rr)r" 
08502778 5A 00           lload 0 
0850277A 12 07           load walk2_mfi 
0850277C 24 06           tailcall_s btSetMove 
0850277E 1A              clearenv 
0850277F 29              ret 

expr: (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) -> (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 91) -> (dbgmark "game_sv/MonsterGeneric.bs" 91)
expr: (funcall btSetMove self run_mfi) -> (funcall btSetMove self run_mfi)
expr: self -> self
expr: run_mfi -> run_mfi
BLK run, SA Yes, Capture=Yes
08503070 02 015B         dbgmark "game_sv/MonsterGeneric.bs" 91 
08503073 2A 02           tymark #"(rr)r" 
08503075 5A 00           lload 0 
08503077 12 03           load run_mfi 
08503079 24 04           tailcall_s btSetMove 
0850307B 1A              clearenv 
0850307C 29              ret 

expr: (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) -> (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 93) -> (dbgmark "game_sv/MonsterGeneric.bs" 93)
expr: (funcall btSetMove self attack1_mfi) -> (funcall btSetMove self attack1_mfi)
expr: self -> self
expr: attack1_mfi -> attack1_mfi
BLK missile, SA Yes, Capture=Yes
08503970 02 015D         dbgmark "game_sv/MonsterGeneric.bs" 93 
08503973 2A 02           tymark #"(rr)r" 
08503975 5A 00           lload 0 
08503977 12 03           load attack1_mfi 
08503979 24 04           tailcall_s btSetMove 
0850397B 1A              clearenv 
0850397C 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 97) -> (dbgmark "game_sv/MonsterGeneric.bs" 97)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 101) -> (linenum 101)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 102) -> (linenum 102)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 105) -> (linenum 105)
expr: (funcall BT_FireBlaster self org dir 25 600 32) -> (funcall BT_FireBlaster self org dir 25 600 32)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 25 -> 25
expr: 600 -> 600
expr: 32 -> 32
BLK think_fire, SA Yes, Capture=Yes
085042A0 02 0161         dbgmark "game_sv/MonsterGeneric.bs" 97 
085042A3 42              push_null 
085042A4 16 02           lexbind org 
085042A6 42              push_null 
085042A7 16 03           lexbind dir 
085042A9 05 65           ln 101 
085042AB 2A 04           tymark #"(r)r" 
085042AD 5A 02           lload 2 
085042AF 23 05           call_s BT_AimOrigin 
085042B1 5B 01           lstore 1 
085042B3 05 66           ln 102 
085042B5 2A 06           tymark #"(rrr)r" 
085042B7 5A 02           lload 2 
085042B9 5A 02           lload 2 
085042BB 64 07           loadindex_s enemy 
085042BD 45 5802         push_sv 600 
085042C0 23 08           call_s BT_AimDirection 
085042C2 5B 00           lstore 0 
085042C4 05 69           ln 105 
085042C6 2A 09           tymark #"(rrrrrr)r" 
085042C8 5A 02           lload 2 
085042CA 5A 01           lload 1 
085042CC 5A 00           lload 0 
085042CE 57 19           push_sv_p 25 
085042D0 45 5802         push_sv 600 
085042D3 57 20           push_sv_p 32 
085042D5 24 0A           tailcall_s BT_FireBlaster 
085042D7 1A              clearenv 
085042D8 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
08504BC0 42              push_null 
08504BC1 1A              clearenv 
08504BC2 29              ret 

expr: (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))) -> (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 115) -> (dbgmark "game_sv/MonsterGeneric.bs" 115)
stmt: (funcall super ent sent) -> (funcall super ent sent)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
stmt: (linenum 118) -> (linenum 118)
expr: (methodcall this init ent) -> (methodcall this init ent)
expr: ent -> ent
expr: this -> this
BLK monster_generic2, SA Yes, Capture=Yes
085054E0 02 0173         dbgmark "game_sv/MonsterGeneric.bs" 115 
085054E3 20              mark 
085054E4 5A 01           lload 1 
085054E6 5A 00           lload 0 
085054E8 C20E            call_super 
085054EA 11              pop 
085054EB 05 76           ln 118 
085054ED 2A 02           tymark #"(r)r" 
085054EF 5A 01           lload 1 
085054F1 19              push_self 
085054F2 28 03           methodtailcall_s init 
085054F4 1A              clearenv 
085054F5 29              ret 

expr: (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))) -> (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))
stmt: (linenum 125) -> (linenum 125)
stmt: (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) -> (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)))
expr: (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)) -> (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))
expr: (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) -> (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self))))
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 128) (funcall think_idle self))) -> (lambda (self) (begin (linenum 128) (funcall think_idle self)))
expr: (begin (linenum 128) (funcall think_idle self)) -> (begin (linenum 128) (funcall think_idle self))
stmt: (linenum 128) -> (linenum 128)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08506760 05 8080         ln 128 
08506763 2A 01           tymark #"(r)r" 
08506765 5A 00           lload 0 
08506767 24 02           tailcall_s think_idle 
08506769 1A              clearenv 
0850676A 29              ret 

expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
stmt: (linenum 147) -> (linenum 147)
stmt: (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) -> (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 150) (funcall think_idle self))) -> (lambda (self) (begin (linenum 150) (funcall think_idle self)))
expr: (begin (linenum 150) (funcall think_idle self)) -> (begin (linenum 150) (funcall think_idle self))
stmt: (linenum 150) -> (linenum 150)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08507050 05 8096         ln 150 
08507053 2A 01           tymark #"(r)r" 
08507055 5A 00           lload 0 
08507057 24 02           tailcall_s think_idle 
08507059 1A              clearenv 
0850705A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 walk1_random) -> (array btaiWalk 0 walk1_random)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: walk1_random -> walk1_random
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 169) -> (linenum 169)
stmt: (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) -> (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 172) (funcall think_idle self))) -> (lambda (self) (begin (linenum 172) (funcall think_idle self)))
expr: (begin (linenum 172) (funcall think_idle self)) -> (begin (linenum 172) (funcall think_idle self))
stmt: (linenum 172) -> (linenum 172)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08507940 05 80AC         ln 172 
08507943 2A 01           tymark #"(r)r" 
08507945 5A 00           lload 0 
08507947 24 02           tailcall_s think_idle 
08507949 1A              clearenv 
0850794A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 180) -> (linenum 180)
stmt: (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) -> (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)))
expr: (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)) -> (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))
expr: (array btaiRun 10 null) -> (array btaiRun 10 null)
expr: btaiRun -> btaiRun
expr: 10 -> 10
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
stmt: (linenum 188) -> (linenum 188)
stmt: (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) -> (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)))
expr: (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)) -> (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))
expr: (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) -> (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self))))
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 191) (funcall think_fire self))) -> (lambda (self) (begin (linenum 191) (funcall think_fire self)))
expr: (begin (linenum 191) (funcall think_fire self)) -> (begin (linenum 191) (funcall think_fire self))
stmt: (linenum 191) -> (linenum 191)
expr: (funcall think_fire self) -> (funcall think_fire self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08508230 05 80BF         ln 191 
08508233 2A 01           tymark #"(r)r" 
08508235 5A 00           lload 0 
08508237 24 02           tailcall_s think_fire 
08508239 1A              clearenv 
0850823A 29              ret 

expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
stmt: (linenum 200) -> (linenum 200)
stmt: (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) -> (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand))
expr: (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand) -> (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)
expr: "stand1" -> "stand1"
expr: 0 -> 0
expr: 30 -> 30
expr: stand1_mf -> stand1_mf
expr: stand -> stand
stmt: (linenum 203) -> (linenum 203)
stmt: (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) -> (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk))
expr: (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk) -> (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)
expr: "walk1" -> "walk1"
expr: 0 -> 0
expr: 32 -> 32
expr: walk1_mf -> walk1_mf
expr: walk -> walk
stmt: (linenum 206) -> (linenum 206)
stmt: (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) -> (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk))
expr: (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk) -> (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)
expr: "walk2" -> "walk2"
expr: 0 -> 0
expr: 10 -> 10
expr: walk2_mf -> walk2_mf
expr: walk -> walk
stmt: (linenum 209) -> (linenum 209)
stmt: (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) -> (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run))
expr: (funcall btDyBuildMove "run" 2 8 run_mf run) -> (funcall btDyBuildMove "run" 2 8 run_mf run)
expr: "run" -> "run"
expr: 2 -> 2
expr: 8 -> 8
expr: run_mf -> run_mf
expr: run -> run
stmt: (linenum 212) -> (linenum 212)
stmt: (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) -> (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run))
expr: (funcall btDyBuildMove "attack1" 2 8 attack1_mf run) -> (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)
expr: "attack1" -> "attack1"
expr: 2 -> 2
expr: 8 -> 8
expr: attack1_mf -> attack1_mf
expr: run -> run
stmt: (linenum 216) -> (linenum 216)
expr: (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)) -> (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))
expr: "This A = %p, run=%p, this.run=%p\n" -> "This A = %p, run=%p, this.run=%p\n"
expr: this -> this
expr: run -> run
expr: (objref this run) -> (objref this run)
expr: this -> this
BLK (null), SA No, Capture=Yes
085083C0 05 7D           ln 125 
085083C2 20              mark 
085083C3 20              mark 
085083C4 12 01           load btaiStand 
085083C6 46              push_0 
085083C7 10 02           push #!<svm_blk_t:085066E0> 
085083C9 80              array 
085083CA 20              mark 
085083CB 12 01           load btaiStand 
085083CD 46              push_0 
085083CE 42              push_null 
085083CF 80              array 
085083D0 20              mark 
085083D1 12 01           load btaiStand 
085083D3 46              push_0 
085083D4 42              push_null 
085083D5 80              array 
085083D6 20              mark 
085083D7 12 01           load btaiStand 
085083D9 46              push_0 
085083DA 42              push_null 
085083DB 80              array 
085083DC 20              mark 
085083DD 12 01           load btaiStand 
085083DF 46              push_0 
085083E0 42              push_null 
085083E1 80              array 
085083E2 20              mark 
085083E3 12 01           load btaiStand 
085083E5 46              push_0 
085083E6 42              push_null 
085083E7 80              array 
085083E8 20              mark 
085083E9 12 01           load btaiStand 
085083EB 46              push_0 
085083EC 42              push_null 
085083ED 80              array 
085083EE 20              mark 
085083EF 12 01           load btaiStand 
085083F1 46              push_0 
085083F2 42              push_null 
085083F3 80              array 
085083F4 20              mark 
085083F5 12 01           load btaiStand 
085083F7 46              push_0 
085083F8 42              push_null 
085083F9 80              array 
085083FA 20              mark 
085083FB 12 01           load btaiStand 
085083FD 46              push_0 
085083FE 42              push_null 
085083FF 80              array 
08508400 20              mark 
08508401 12 01           load btaiStand 
08508403 46              push_0 
08508404 42              push_null 
08508405 80              array 
08508406 20              mark 
08508407 12 01           load btaiStand 
08508409 46              push_0 
0850840A 42              push_null 
0850840B 80              array 
0850840C 20              mark 
0850840D 12 01           load btaiStand 
0850840F 46              push_0 
08508410 42              push_null 
08508411 80              array 
08508412 20              mark 
08508413 12 01           load btaiStand 
08508415 46              push_0 
08508416 42              push_null 
08508417 80              array 
08508418 20              mark 
08508419 12 01           load btaiStand 
0850841B 46              push_0 
0850841C 42              push_null 
0850841D 80              array 
0850841E 20              mark 
0850841F 12 01           load btaiStand 
08508421 46              push_0 
08508422 42              push_null 
08508423 80              array 
08508424 20              mark 
08508425 12 01           load btaiStand 
08508427 46              push_0 
08508428 42              push_null 
08508429 80              array 
0850842A 20              mark 
0850842B 12 01           load btaiStand 
0850842D 46              push_0 
0850842E 42              push_null 
0850842F 80              array 
08508430 20              mark 
08508431 12 01           load btaiStand 
08508433 46              push_0 
08508434 42              push_null 
08508435 80              array 
08508436 20              mark 
08508437 12 01           load btaiStand 
08508439 46              push_0 
0850843A 42              push_null 
0850843B 80              array 
0850843C 20              mark 
0850843D 12 01           load btaiStand 
0850843F 46              push_0 
08508440 42              push_null 
08508441 80              array 
08508442 20              mark 
08508443 12 01           load btaiStand 
08508445 46              push_0 
08508446 42              push_null 
08508447 80              array 
08508448 20              mark 
08508449 12 01           load btaiStand 
0850844B 46              push_0 
0850844C 42              push_null 
0850844D 80              array 
0850844E 20              mark 
0850844F 12 01           load btaiStand 
08508451 46              push_0 
08508452 42              push_null 
08508453 80              array 
08508454 20              mark 
08508455 12 01           load btaiStand 
08508457 46              push_0 
08508458 42              push_null 
08508459 80              array 
0850845A 20              mark 
0850845B 12 01           load btaiStand 
0850845D 46              push_0 
0850845E 42              push_null 
0850845F 80              array 
08508460 20              mark 
08508461 12 01           load btaiStand 
08508463 46              push_0 
08508464 42              push_null 
08508465 80              array 
08508466 20              mark 
08508467 12 01           load btaiStand 
08508469 46              push_0 
0850846A 42              push_null 
0850846B 80              array 
0850846C 20              mark 
0850846D 12 01           load btaiStand 
0850846F 46              push_0 
08508470 42              push_null 
08508471 80              array 
08508472 20              mark 
08508473 12 01           load btaiStand 
08508475 46              push_0 
08508476 42              push_null 
08508477 80              array 
08508478 20              mark 
08508479 12 01           load btaiStand 
0850847B 46              push_0 
0850847C 42              push_null 
0850847D 80              array 
0850847E 80              array 
0850847F 13 03           store stand1_mf 
08508481 05 8093         ln 147 
08508484 20              mark 
08508485 20              mark 
08508486 12 04           load btaiWalk 
08508488 49              push_3 
08508489 10 05           push #!<svm_blk_t:08506FD0> 
0850848B 80              array 
0850848C 20              mark 
0850848D 12 04           load btaiWalk 
0850848F 4B              push_5 
08508490 42              push_null 
08508491 80              array 
08508492 20              mark 
08508493 12 04           load btaiWalk 
08508495 49              push_3 
08508496 42              push_null 
08508497 80              array 
08508498 20              mark 
08508499 12 04           load btaiWalk 
0850849B 48              push_2 
0850849C 42              push_null 
0850849D 80              array 
0850849E 20              mark 
0850849F 12 04           load btaiWalk 
085084A1 48              push_2 
085084A2 42              push_null 
085084A3 80              array 
085084A4 20              mark 
085084A5 12 04           load btaiWalk 
085084A7 48              push_2 
085084A8 42              push_null 
085084A9 80              array 
085084AA 20              mark 
085084AB 12 04           load btaiWalk 
085084AD 4B              push_5 
085084AE 42              push_null 
085084AF 80              array 
085084B0 20              mark 
085084B1 12 04           load btaiWalk 
085084B3 4B              push_5 
085084B4 42              push_null 
085084B5 80              array 
085084B6 20              mark 
085084B7 12 04           load btaiWalk 
085084B9 48              push_2 
085084BA 42              push_null 
085084BB 80              array 
085084BC 20              mark 
085084BD 12 04           load btaiWalk 
085084BF 46              push_0 
085084C0 12 06           load walk1_random 
085084C2 80              array 
085084C3 20              mark 
085084C4 12 04           load btaiWalk 
085084C6 46              push_0 
085084C7 42              push_null 
085084C8 80              array 
085084C9 20              mark 
085084CA 12 04           load btaiWalk 
085084CC 46              push_0 
085084CD 42              push_null 
085084CE 80              array 
085084CF 20              mark 
085084D0 12 04           load btaiWalk 
085084D2 46              push_0 
085084D3 42              push_null 
085084D4 80              array 
085084D5 20              mark 
085084D6 12 04           load btaiWalk 
085084D8 46              push_0 
085084D9 42              push_null 
085084DA 80              array 
085084DB 20              mark 
085084DC 12 04           load btaiWalk 
085084DE 46              push_0 
085084DF 42              push_null 
085084E0 80              array 
085084E1 20              mark 
085084E2 12 04           load btaiWalk 
085084E4 46              push_0 
085084E5 42              push_null 
085084E6 80              array 
085084E7 20              mark 
085084E8 12 04           load btaiWalk 
085084EA 46              push_0 
085084EB 42              push_null 
085084EC 80              array 
085084ED 20              mark 
085084EE 12 04           load btaiWalk 
085084F0 46              push_0 
085084F1 42              push_null 
085084F2 80              array 
085084F3 20              mark 
085084F4 12 04           load btaiWalk 
085084F6 46              push_0 
085084F7 42              push_null 
085084F8 80              array 
085084F9 20              mark 
085084FA 12 04           load btaiWalk 
085084FC 46              push_0 
085084FD 42              push_null 
085084FE 80              array 
085084FF 20              mark 
08508500 12 04           load btaiWalk 
08508502 46              push_0 
08508503 42              push_null 
08508504 80              array 
08508505 20              mark 
08508506 12 04           load btaiWalk 
08508508 46              push_0 
08508509 42              push_null 
0850850A 80              array 
0850850B 20              mark 
0850850C 12 04           load btaiWalk 
0850850E 46              push_0 
0850850F 42              push_null 
08508510 80              array 
08508511 20              mark 
08508512 12 04           load btaiWalk 
08508514 46              push_0 
08508515 42              push_null 
08508516 80              array 
08508517 20              mark 
08508518 12 04           load btaiWalk 
0850851A 46              push_0 
0850851B 42              push_null 
0850851C 80              array 
0850851D 20              mark 
0850851E 12 04           load btaiWalk 
08508520 46              push_0 
08508521 42              push_null 
08508522 80              array 
08508523 20              mark 
08508524 12 04           load btaiWalk 
08508526 46              push_0 
08508527 42              push_null 
08508528 80              array 
08508529 20              mark 
0850852A 12 04           load btaiWalk 
0850852C 46              push_0 
0850852D 42              push_null 
0850852E 80              array 
0850852F 20              mark 
08508530 12 04           load btaiWalk 
08508532 46              push_0 
08508533 42              push_null 
08508534 80              array 
08508535 20              mark 
08508536 12 04           load btaiWalk 
08508538 46              push_0 
08508539 42              push_null 
0850853A 80              array 
0850853B 20              mark 
0850853C 12 04           load btaiWalk 
0850853E 46              push_0 
0850853F 42              push_null 
08508540 80              array 
08508541 20              mark 
08508542 12 04           load btaiWalk 
08508544 46              push_0 
08508545 42              push_null 
08508546 80              array 
08508547 80              array 
08508548 13 07           store walk1_mf 
0850854A 05 80A9         ln 169 
0850854D 20              mark 
0850854E 20              mark 
0850854F 12 04           load btaiWalk 
08508551 49              push_3 
08508552 10 08           push #!<svm_blk_t:085078C0> 
08508554 80              array 
08508555 20              mark 
08508556 12 04           load btaiWalk 
08508558 4B              push_5 
08508559 42              push_null 
0850855A 80              array 
0850855B 20              mark 
0850855C 12 04           load btaiWalk 
0850855E 49              push_3 
0850855F 42              push_null 
08508560 80              array 
08508561 20              mark 
08508562 12 04           load btaiWalk 
08508564 48              push_2 
08508565 42              push_null 
08508566 80              array 
08508567 20              mark 
08508568 12 04           load btaiWalk 
0850856A 48              push_2 
0850856B 42              push_null 
0850856C 80              array 
0850856D 20              mark 
0850856E 12 04           load btaiWalk 
08508570 48              push_2 
08508571 42              push_null 
08508572 80              array 
08508573 20              mark 
08508574 12 04           load btaiWalk 
08508576 4B              push_5 
08508577 42              push_null 
08508578 80              array 
08508579 20              mark 
0850857A 12 04           load btaiWalk 
0850857C 4B              push_5 
0850857D 42              push_null 
0850857E 80              array 
0850857F 20              mark 
08508580 12 04           load btaiWalk 
08508582 48              push_2 
08508583 42              push_null 
08508584 80              array 
08508585 20              mark 
08508586 12 04           load btaiWalk 
08508588 46              push_0 
08508589 42              push_null 
0850858A 80              array 
0850858B 80              array 
0850858C 13 09           store walk2_mf 
0850858E 05 80B4         ln 180 
08508591 20              mark 
08508592 20              mark 
08508593 12 0A           load btaiRun 
08508595 57 0A           push_sv_p 10 
08508597 42              push_null 
08508598 80              array 
08508599 20              mark 
0850859A 12 0A           load btaiRun 
0850859C 57 0B           push_sv_p 11 
0850859E 42              push_null 
0850859F 80              array 
085085A0 20              mark 
085085A1 12 0A           load btaiRun 
085085A3 57 0B           push_sv_p 11 
085085A5 42              push_null 
085085A6 80              array 
085085A7 20              mark 
085085A8 12 0A           load btaiRun 
085085AA 57 0F           push_sv_p 15 
085085AC 42              push_null 
085085AD 80              array 
085085AE 20              mark 
085085AF 12 0A           load btaiRun 
085085B1 57 0B           push_sv_p 11 
085085B3 42              push_null 
085085B4 80              array 
085085B5 20              mark 
085085B6 12 0A           load btaiRun 
085085B8 57 0F           push_sv_p 15 
085085BA 42              push_null 
085085BB 80              array 
085085BC 20              mark 
085085BD 12 0A           load btaiRun 
085085BF 57 0F           push_sv_p 15 
085085C1 42              push_null 
085085C2 80              array 
085085C3 80              array 
085085C4 13 0B           store run_mf 
085085C6 05 80BC         ln 188 
085085C9 20              mark 
085085CA 20              mark 
085085CB 12 0C           load btaiCharge 
085085CD 46              push_0 
085085CE 10 0D           push #!<svm_blk_t:085081B0> 
085085D0 80              array 
085085D1 20              mark 
085085D2 12 0C           load btaiCharge 
085085D4 46              push_0 
085085D5 42              push_null 
085085D6 80              array 
085085D7 20              mark 
085085D8 12 0C           load btaiCharge 
085085DA 46              push_0 
085085DB 42              push_null 
085085DC 80              array 
085085DD 20              mark 
085085DE 12 0C           load btaiCharge 
085085E0 46              push_0 
085085E1 42              push_null 
085085E2 80              array 
085085E3 20              mark 
085085E4 12 0C           load btaiCharge 
085085E6 46              push_0 
085085E7 42              push_null 
085085E8 80              array 
085085E9 20              mark 
085085EA 12 0C           load btaiCharge 
085085EC 46              push_0 
085085ED 42              push_null 
085085EE 80              array 
085085EF 20              mark 
085085F0 12 0C           load btaiCharge 
085085F2 46              push_0 
085085F3 42              push_null 
085085F4 80              array 
085085F5 20              mark 
085085F6 12 0C           load btaiCharge 
085085F8 46              push_0 
085085F9 42              push_null 
085085FA 80              array 
085085FB 20              mark 
085085FC 12 0C           load btaiCharge 
085085FE 46              push_0 
085085FF 42              push_null 
08508600 80              array 
08508601 20              mark 
08508602 12 0C           load btaiCharge 
08508604 46              push_0 
08508605 42              push_null 
08508606 80              array 
08508607 20              mark 
08508608 12 0C           load btaiCharge 
0850860A 46              push_0 
0850860B 42              push_null 
0850860C 80              array 
0850860D 20              mark 
0850860E 12 0C           load btaiCharge 
08508610 46              push_0 
08508611 42              push_null 
08508612 80              array 
08508613 80              array 
08508614 13 0E           store attack1_mf 
08508616 05 80C8         ln 200 
08508619 2A 0F           tymark #"(Csrrrr)r" 
0850861B 10 10           push "stand1" 
0850861D 46              push_0 
0850861E 57 1E           push_sv_p 30 
08508620 12 03           load stand1_mf 
08508622 12 11           load stand 
08508624 23 12           call_s btDyBuildMove 
08508626 13 13           store stand1_mfi 
08508628 05 80CB         ln 203 
0850862B 2A 0F           tymark #"(Csrrrr)r" 
0850862D 10 14           push "walk1" 
0850862F 46              push_0 
08508630 57 20           push_sv_p 32 
08508632 12 07           load walk1_mf 
08508634 12 15           load walk 
08508636 23 12           call_s btDyBuildMove 
08508638 13 16           store walk1_mfi 
0850863A 05 80CE         ln 206 
0850863D 2A 0F           tymark #"(Csrrrr)r" 
0850863F 10 17           push "walk2" 
08508641 46              push_0 
08508642 57 0A           push_sv_p 10 
08508644 12 09           load walk2_mf 
08508646 12 15           load walk 
08508648 23 12           call_s btDyBuildMove 
0850864A 13 18           store walk2_mfi 
0850864C 05 80D1         ln 209 
0850864F 2A 0F           tymark #"(Csrrrr)r" 
08508651 10 19           push "run" 
08508653 48              push_2 
08508654 57 08           push_sv_p 8 
08508656 12 0B           load run_mf 
08508658 12 1A           load run 
0850865A 23 12           call_s btDyBuildMove 
0850865C 13 1B           store run_mfi 
0850865E 05 80D4         ln 212 
08508661 2A 0F           tymark #"(Csrrrr)r" 
08508663 10 1C           push "attack1" 
08508665 48              push_2 
08508666 57 08           push_sv_p 8 
08508668 12 0E           load attack1_mf 
0850866A 12 1A           load run 
0850866C 23 12           call_s btDyBuildMove 
0850866E 13 1D           store attack1_mfi 
08508670 05 80D8         ln 216 
08508673 2A 1E           tymark #"(Csrrr)r" 
08508675 10 1F           push "This A = %p, run=%p, this.run=%p\n" 
08508677 19              push_self 
08508678 12 1A           load run 
0850867A 19              push_self 
0850867B 64 1A           loadindex_s run 
0850867D 24 20           tailcall_s gc_printf 
0850867F 29              ret 

stmt: (linenum 222) -> (linenum 222)
stmt: (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))) -> (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 226) -> (dbgmark "game_sv/MonsterGeneric.bs" 226)
stmt: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: "passive_sheep: ctor\n" -> "passive_sheep: ctor\n"
stmt: (linenum 227) -> (linenum 227)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_sheep, SA Yes, Capture=Yes
08508F70 02 0180E2       dbgmark "game_sv/MonsterGeneric.bs" 226 
08508F74 2A 02           tymark #"(Cs)r" 
08508F76 10 03           push "passive_sheep: ctor\n" 
08508F78 23 04           call_s gc_printf 
08508F7A 11              pop 
08508F7B 05 80E3         ln 227 
08508F7E 20              mark 
08508F7F 5A 01           lload 1 
08508F81 5A 00           lload 0 
08508F83 C20E            call_super 
08508F85 1A              clearenv 
08508F86 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 232) -> (dbgmark "game_sv/MonsterGeneric.bs" 232)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 234) -> (linenum 234)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
085098B0 02 0180E8       dbgmark "game_sv/MonsterGeneric.bs" 232 
085098B4 2A 02           tymark #"()r" 
085098B6 23 03           call_s btRandom 
085098B8 10 04           push 0.100000 
085098BA 7A 111400       jmp_cond_b ge 085098D2 
085098BE 05 80EA         ln 234 
085098C1 2A 05           tymark #"(rrrrr)r" 
085098C3 5A 00           lload 0 
085098C5 48              push_2 
085098C6 5A 00           lload 0 
085098C8 64 06           loadindex_s snd_idle 
085098CA 59 6400         push_sv_f 1 
085098CD 47              push_1 
085098CE 23 07           call_s btSound 
085098D0 1A              clearenv 
085098D1 29              ret 
085098D2 42              push_null 
085098D3 1A              clearenv 
085098D4 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 241) -> (dbgmark "game_sv/MonsterGeneric.bs" 241)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 243) -> (linenum 243)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 244) -> (linenum 244)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 246) -> (linenum 246)
stmt: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: self -> self
expr: "models/monsters/sheep/sheep.model" -> "models/monsters/sheep/sheep.model"
stmt: (linenum 247) -> (linenum 247)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 248) -> (linenum 248)
stmt: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: "sound/animal/sheep_idle1" -> "sound/animal/sheep_idle1"
expr: self -> self
stmt: (linenum 250) -> (linenum 250)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 251) -> (linenum 251)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 252) -> (linenum 252)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 256) -> (linenum 256)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0850A220 02 0180F1       dbgmark "game_sv/MonsterGeneric.bs" 241 
0850A224 2A 02           tymark #"(Csr)r" 
0850A226 10 03           push "monster_sheep: init A self=%p\n" 
0850A228 5A 00           lload 0 
0850A22A 23 04           call_s gc_printf 
0850A22C 11              pop 
0850A22D 05 80F3         ln 243 
0850A230 49              push_3 
0850A231 36              dup_f 
0850A232 5A 00           lload 0 
0850A234 65 05           storeindex_s solidtype 
0850A236 11              pop 
0850A237 05 80F4         ln 244 
0850A23A 48              push_2 
0850A23B 36              dup_f 
0850A23C 5A 00           lload 0 
0850A23E 65 06           storeindex_s movetype 
0850A240 11              pop 
0850A241 05 80F6         ln 246 
0850A244 2A 07           tymark #"(rCs)r" 
0850A246 5A 00           lload 0 
0850A248 10 08           push "models/monsters/sheep/sheep.model" 
0850A24A 23 09           call_s btSetModel 
0850A24C 11              pop 
0850A24D 05 80F7         ln 247 
0850A250 10 0A           push "sound/soldier/solsght1" 
0850A252 30              dup 
0850A253 5A 00           lload 0 
0850A255 65 0B           storeindex_s snd_sight 
0850A257 11              pop 
0850A258 05 80F8         ln 248 
0850A25B 10 0C           push "sound/animal/sheep_idle1" 
0850A25D 30              dup 
0850A25E 5A 00           lload 0 
0850A260 65 0D           storeindex_s snd_idle 
0850A262 11              pop 
0850A263 05 80FA         ln 250 
0850A266 20              mark 
0850A267 58 10           push_sv_n 16 
0850A269 58 10           push_sv_n 16 
0850A26B 58 10           push_sv_n 16 
0850A26D 84              vector 
0850A26E 30              dup 
0850A26F 5A 00           lload 0 
0850A271 65 0E           storeindex_s mins 
0850A273 11              pop 
0850A274 05 80FB         ln 251 
0850A277 20              mark 
0850A278 57 10           push_sv_p 16 
0850A27A 57 10           push_sv_p 16 
0850A27C 57 28           push_sv_p 40 
0850A27E 84              vector 
0850A27F 30              dup 
0850A280 5A 00           lload 0 
0850A282 65 0F           storeindex_s maxs 
0850A284 11              pop 
0850A285 05 80FC         ln 252 
0850A288 57 1E           push_sv_p 30 
0850A28A 36              dup_f 
0850A28B 5A 00           lload 0 
0850A28D 65 10           storeindex_s health 
0850A28F 11              pop 
0850A290 05 8100         ln 256 
0850A293 2A 11           tymark #"(r)r" 
0850A295 5A 00           lload 0 
0850A297 24 12           tailcall_s btWalkPassiveStart 
0850A299 1A              clearenv 
0850A29A 29              ret 

stmt: (linenum 260) -> (linenum 260)
stmt: (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))) -> (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 264) -> (dbgmark "game_sv/MonsterGeneric.bs" 264)
stmt: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: "passive_pig: ctor\n" -> "passive_pig: ctor\n"
stmt: (linenum 265) -> (linenum 265)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_pig, SA Yes, Capture=Yes
0850AB90 02 018108       dbgmark "game_sv/MonsterGeneric.bs" 264 
0850AB94 2A 02           tymark #"(Cs)r" 
0850AB96 10 03           push "passive_pig: ctor\n" 
0850AB98 23 04           call_s gc_printf 
0850AB9A 11              pop 
0850AB9B 05 8109         ln 265 
0850AB9E 20              mark 
0850AB9F 5A 01           lload 1 
0850ABA1 5A 00           lload 0 
0850ABA3 C20E            call_super 
0850ABA5 1A              clearenv 
0850ABA6 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 270) -> (dbgmark "game_sv/MonsterGeneric.bs" 270)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 272) -> (linenum 272)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0850B4D0 02 01810E       dbgmark "game_sv/MonsterGeneric.bs" 270 
0850B4D4 2A 02           tymark #"()r" 
0850B4D6 23 03           call_s btRandom 
0850B4D8 10 04           push 0.100000 
0850B4DA 7A 111400       jmp_cond_b ge 0850B4F2 
0850B4DE 05 8110         ln 272 
0850B4E1 2A 05           tymark #"(rrrrr)r" 
0850B4E3 5A 00           lload 0 
0850B4E5 48              push_2 
0850B4E6 5A 00           lload 0 
0850B4E8 64 06           loadindex_s snd_idle 
0850B4EA 59 6400         push_sv_f 1 
0850B4ED 47              push_1 
0850B4EE 23 07           call_s btSound 
0850B4F0 1A              clearenv 
0850B4F1 29              ret 
0850B4F2 42              push_null 
0850B4F3 1A              clearenv 
0850B4F4 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 279) -> (dbgmark "game_sv/MonsterGeneric.bs" 279)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 281) -> (linenum 281)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 282) -> (linenum 282)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 284) -> (linenum 284)
stmt: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: self -> self
expr: "models/monsters/pig/pig.model" -> "models/monsters/pig/pig.model"
stmt: (linenum 285) -> (linenum 285)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 286) -> (linenum 286)
stmt: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: "sound/animal/pig0" -> "sound/animal/pig0"
expr: self -> self
stmt: (linenum 288) -> (linenum 288)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 289) -> (linenum 289)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 290) -> (linenum 290)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 294) -> (linenum 294)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0850BE20 02 018117       dbgmark "game_sv/MonsterGeneric.bs" 279 
0850BE24 2A 02           tymark #"(Csr)r" 
0850BE26 10 03           push "monster_sheep: init A self=%p\n" 
0850BE28 5A 00           lload 0 
0850BE2A 23 04           call_s gc_printf 
0850BE2C 11              pop 
0850BE2D 05 8119         ln 281 
0850BE30 49              push_3 
0850BE31 36              dup_f 
0850BE32 5A 00           lload 0 
0850BE34 65 05           storeindex_s solidtype 
0850BE36 11              pop 
0850BE37 05 811A         ln 282 
0850BE3A 48              push_2 
0850BE3B 36              dup_f 
0850BE3C 5A 00           lload 0 
0850BE3E 65 06           storeindex_s movetype 
0850BE40 11              pop 
0850BE41 05 811C         ln 284 
0850BE44 2A 07           tymark #"(rCs)r" 
0850BE46 5A 00           lload 0 
0850BE48 10 08           push "models/monsters/pig/pig.model" 
0850BE4A 23 09           call_s btSetModel 
0850BE4C 11              pop 
0850BE4D 05 811D         ln 285 
0850BE50 10 0A           push "sound/soldier/solsght1" 
0850BE52 30              dup 
0850BE53 5A 00           lload 0 
0850BE55 65 0B           storeindex_s snd_sight 
0850BE57 11              pop 
0850BE58 05 811E         ln 286 
0850BE5B 10 0C           push "sound/animal/pig0" 
0850BE5D 30              dup 
0850BE5E 5A 00           lload 0 
0850BE60 65 0D           storeindex_s snd_idle 
0850BE62 11              pop 
0850BE63 05 8120         ln 288 
0850BE66 20              mark 
0850BE67 58 10           push_sv_n 16 
0850BE69 58 10           push_sv_n 16 
0850BE6B 58 10           push_sv_n 16 
0850BE6D 84              vector 
0850BE6E 30              dup 
0850BE6F 5A 00           lload 0 
0850BE71 65 0E           storeindex_s mins 
0850BE73 11              pop 
0850BE74 05 8121         ln 289 
0850BE77 20              mark 
0850BE78 57 10           push_sv_p 16 
0850BE7A 57 10           push_sv_p 16 
0850BE7C 57 28           push_sv_p 40 
0850BE7E 84              vector 
0850BE7F 30              dup 
0850BE80 5A 00           lload 0 
0850BE82 65 0F           storeindex_s maxs 
0850BE84 11              pop 
0850BE85 05 8122         ln 290 
0850BE88 57 1E           push_sv_p 30 
0850BE8A 36              dup_f 
0850BE8B 5A 00           lload 0 
0850BE8D 65 10           storeindex_s health 
0850BE8F 11              pop 
0850BE90 05 8126         ln 294 
0850BE93 2A 11           tymark #"(r)r" 
0850BE95 5A 00           lload 0 
0850BE97 24 12           tailcall_s btWalkPassiveStart 
0850BE99 1A              clearenv 
0850BE9A 29              ret 

stmt: (linenum 298) -> (linenum 298)
stmt: (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))))))) -> (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))))))
expr: (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))) -> (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 303) -> (dbgmark "game_sv/MonsterGeneric.bs" 303)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_army, SA Yes, Capture=Yes
0850C780 02 01812F       dbgmark "game_sv/MonsterGeneric.bs" 303 
0850C784 20              mark 
0850C785 5A 01           lload 1 
0850C787 5A 00           lload 0 
0850C789 C20E            call_super 
0850C78B 1A              clearenv 
0850C78C 29              ret 

stmt: (linenum 308) -> (linenum 308)
expr: (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))))) -> (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))))))
expr: (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))) -> (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 312) -> (dbgmark "game_sv/MonsterGeneric.bs" 312)
stmt: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: "monster_enemyhead: ctor\n" -> "monster_enemyhead: ctor\n"
stmt: (linenum 313) -> (linenum 313)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_enemyhead, SA Yes, Capture=Yes
0850D080 02 018138       dbgmark "game_sv/MonsterGeneric.bs" 312 
0850D084 2A 02           tymark #"(Cs)r" 
0850D086 10 03           push "monster_enemyhead: ctor\n" 
0850D088 23 04           call_s gc_printf 
0850D08A 11              pop 
0850D08B 05 8139         ln 313 
0850D08E 20              mark 
0850D08F 5A 01           lload 1 
0850D091 5A 00           lload 0 
0850D093 C20E            call_super 
0850D095 1A              clearenv 
0850D096 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 318) -> (dbgmark "game_sv/MonsterGeneric.bs" 318)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 320) -> (linenum 320)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0850D9C0 02 01813E       dbgmark "game_sv/MonsterGeneric.bs" 318 
0850D9C4 2A 02           tymark #"()r" 
0850D9C6 23 03           call_s btRandom 
0850D9C8 10 04           push 0.100000 
0850D9CA 7A 111400       jmp_cond_b ge 0850D9E2 
0850D9CE 05 8140         ln 320 
0850D9D1 2A 05           tymark #"(rrrrr)r" 
0850D9D3 5A 00           lload 0 
0850D9D5 48              push_2 
0850D9D6 5A 00           lload 0 
0850D9D8 64 06           loadindex_s snd_idle 
0850D9DA 59 6400         push_sv_f 1 
0850D9DD 47              push_1 
0850D9DE 23 07           call_s btSound 
0850D9E0 1A              clearenv 
0850D9E1 29              ret 
0850D9E2 42              push_null 
0850D9E3 1A              clearenv 
0850D9E4 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 327) -> (dbgmark "game_sv/MonsterGeneric.bs" 327)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 331) -> (linenum 331)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 332) -> (linenum 332)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 335) -> (linenum 335)
expr: (funcall BT_FireRocket self org dir 60 600 160) -> (funcall BT_FireRocket self org dir 60 600 160)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 60 -> 60
expr: 600 -> 600
expr: 160 -> 160
BLK think_fire, SA Yes, Capture=Yes
08506640 02 018147       dbgmark "game_sv/MonsterGeneric.bs" 327 
08506644 42              push_null 
08506645 16 02           lexbind org 
08506647 42              push_null 
08506648 16 03           lexbind dir 
0850664A 05 814B         ln 331 
0850664D 2A 04           tymark #"(r)r" 
0850664F 5A 02           lload 2 
08506651 23 05           call_s BT_AimOrigin 
08506653 5B 01           lstore 1 
08506655 05 814C         ln 332 
08506658 2A 06           tymark #"(rrr)r" 
0850665A 5A 02           lload 2 
0850665C 5A 02           lload 2 
0850665E 64 07           loadindex_s enemy 
08506660 45 5802         push_sv 600 
08506663 23 08           call_s BT_AimDirection 
08506665 5B 00           lstore 0 
08506667 05 814F         ln 335 
0850666A 2A 09           tymark #"(rrrrrr)r" 
0850666C 5A 02           lload 2 
0850666E 5A 01           lload 1 
08506670 5A 00           lload 0 
08506672 57 3C           push_sv_p 60 
08506674 45 5802         push_sv 600 
08506677 57 A0           push_sv_p 160 
08506679 24 0A           tailcall_s BT_FireRocket 
0850667B 1A              clearenv 
0850667C 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 340) -> (dbgmark "game_sv/MonsterGeneric.bs" 340)
stmt: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: "monster_enemyhead: init A self=%p\n" -> "monster_enemyhead: init A self=%p\n"
expr: self -> self
stmt: (linenum 342) -> (linenum 342)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 343) -> (linenum 343)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 345) -> (linenum 345)
stmt: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: self -> self
expr: "models/monsters/enemyhead/enemyhead.model" -> "models/monsters/enemyhead/enemyhead.model"
stmt: (linenum 346) -> (linenum 346)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 347) -> (linenum 347)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 349) -> (linenum 349)
stmt: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (binary + (objref self origin) (vector 0 0 256)) -> (binary + (objref self origin) (vector 0 0 256))
expr: (objref self origin) -> (objref self origin)
expr: self -> self
expr: (vector 0 0 256) -> (vector 0 0 256)
expr: 0 -> 0
expr: 0 -> 0
expr: 256 -> 256
expr: self -> self
stmt: (linenum 351) -> (linenum 351)
stmt: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (vector (unary - 64) (unary - 64) (unary - 32)) -> (vector (unary - 64) (unary - 64) (unary - 32))
expr: (unary - 64) -> -64
expr: (unary - 64) -> -64
expr: (unary - 32) -> -32
expr: self -> self
stmt: (linenum 352) -> (linenum 352)
stmt: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (vector 64 64 64) -> (vector 64 64 64)
expr: 64 -> 64
expr: 64 -> 64
expr: 64 -> 64
expr: self -> self
stmt: (linenum 353) -> (linenum 353)
stmt: (objset! self health 900) -> (objset! self health 900)
expr: (objset! self health 900) -> (objset! self health 900)
expr: 900 -> 900
expr: self -> self
stmt: (linenum 357) -> (linenum 357)
expr: (funcall btFlymonsterStart self) -> (funcall btFlymonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0850ED50 02 018154       dbgmark "game_sv/MonsterGeneric.bs" 340 
0850ED54 2A 02           tymark #"(Csr)r" 
0850ED56 10 03           push "monster_enemyhead: init A self=%p\n" 
0850ED58 5A 00           lload 0 
0850ED5A 23 04           call_s gc_printf 
0850ED5C 11              pop 
0850ED5D 05 8156         ln 342 
0850ED60 49              push_3 
0850ED61 36              dup_f 
0850ED62 5A 00           lload 0 
0850ED64 65 05           storeindex_s solidtype 
0850ED66 11              pop 
0850ED67 05 8157         ln 343 
0850ED6A 48              push_2 
0850ED6B 36              dup_f 
0850ED6C 5A 00           lload 0 
0850ED6E 65 06           storeindex_s movetype 
0850ED70 11              pop 
0850ED71 05 8159         ln 345 
0850ED74 2A 07           tymark #"(rCs)r" 
0850ED76 5A 00           lload 0 
0850ED78 10 08           push "models/monsters/enemyhead/enemyhead.model" 
0850ED7A 23 09           call_s btSetModel 
0850ED7C 11              pop 
0850ED7D 05 815A         ln 346 
0850ED80 10 0A           push "sound/soldier/solsght1" 
0850ED82 30              dup 
0850ED83 5A 00           lload 0 
0850ED85 65 0B           storeindex_s snd_sight 
0850ED87 11              pop 
0850ED88 05 815B         ln 347 
0850ED8B 10 0C           push "sound/soldier/solidle1" 
0850ED8D 30              dup 
0850ED8E 5A 00           lload 0 
0850ED90 65 0D           storeindex_s snd_idle 
0850ED92 11              pop 
0850ED93 05 815D         ln 349 
0850ED96 5A 00           lload 0 
0850ED98 64 0E           loadindex_s origin 
0850ED9A 20              mark 
0850ED9B 46              push_0 
0850ED9C 46              push_0 
0850ED9D 45 0001         push_sv 256 
0850EDA0 84              vector 
0850EDA1 9F              add 
0850EDA2 30              dup 
0850EDA3 5A 00           lload 0 
0850EDA5 65 0E           storeindex_s origin 
0850EDA7 11              pop 
0850EDA8 05 815F         ln 351 
0850EDAB 20              mark 
0850EDAC 58 40           push_sv_n 64 
0850EDAE 58 40           push_sv_n 64 
0850EDB0 58 20           push_sv_n 32 
0850EDB2 84              vector 
0850EDB3 30              dup 
0850EDB4 5A 00           lload 0 
0850EDB6 65 0F           storeindex_s mins 
0850EDB8 11              pop 
0850EDB9 05 8160         ln 352 
0850EDBC 20              mark 
0850EDBD 57 40           push_sv_p 64 
0850EDBF 57 40           push_sv_p 64 
0850EDC1 57 40           push_sv_p 64 
0850EDC3 84              vector 
0850EDC4 30              dup 
0850EDC5 5A 00           lload 0 
0850EDC7 65 10           storeindex_s maxs 
0850EDC9 11              pop 
0850EDCA 05 8161         ln 353 
0850EDCD 45 8403         push_sv 900 
0850EDD0 36              dup_f 
0850EDD1 5A 00           lload 0 
0850EDD3 65 11           storeindex_s health 
0850EDD5 11              pop 
0850EDD6 05 8165         ln 357 
0850EDD9 2A 12           tymark #"(r)r" 
0850EDDB 5A 00           lload 0 
0850EDDD 24 13           tailcall_s btFlymonsterStart 
0850EDDF 1A              clearenv 
0850EDE0 29              ret 

BLK (null), SA No, Capture=Yes
0850EFC0 02 0102         dbgmark "game_sv/MonsterGeneric.bs" 2 
0850EFC3 C202 020304     begin_class monster_generic2 ActorBase p 
0850EFC8 42              push_null 
0850EFC9 97 050006       tybind stand1_mf () s 
0850EFCD 42              push_null 
0850EFCE 97 070006       tybind walk1_mf () s 
0850EFD2 42              push_null 
0850EFD3 97 080006       tybind walk2_mf () s 
0850EFD7 42              push_null 
0850EFD8 97 090006       tybind stand1_mfi () s 
0850EFDC 42              push_null 
0850EFDD 97 0A0006       tybind walk1_mfi () s 
0850EFE1 42              push_null 
0850EFE2 97 0B0006       tybind walk2_mfi () s 
0850EFE6 42              push_null 
0850EFE7 97 0C0006       tybind run_mf () s 
0850EFEB 42              push_null 
0850EFEC 97 0D0006       tybind attack1_mf () s 
0850EFF0 42              push_null 
0850EFF1 97 0E0006       tybind run_mfi () s 
0850EFF5 42              push_null 
0850EFF6 97 0F0006       tybind attack1_mfi () s 
0850EFFA 10 10           push #!<svm_blk_t:084FC240> 
0850EFFC 97 111200       tybind think_idle #"(r)r" () 
0850F000 10 13           push #!<svm_blk_t:084FCC30> 
0850F002 97 141200       tybind init #"(r)r" () 
0850F006 10 15           push #!<svm_blk_t:084FD5C0> 
0850F008 97 161200       tybind deinit #"(r)r" () 
0850F00C 10 17           push #!<svm_blk_t:084FDEB0> 
0850F00E 97 181900       tybind blocked #"(rr)r" () 
0850F012 10 1A           push #!<svm_blk_t:084FE7A0> 
0850F014 97 1B1900       tybind touch #"(rr)r" () 
0850F018 10 1C           push #!<svm_blk_t:084FF090> 
0850F01A 97 1D1900       tybind use #"(rr)r" () 
0850F01E 10 1E           push #!<svm_blk_t:084FF980> 
0850F020 97 1F2000       tybind pain #"(rrr)r" () 
0850F024 10 21           push #!<svm_blk_t:08500270> 
0850F026 97 222000       tybind die #"(rrr)r" () 
0850F02A 10 23           push #!<svm_blk_t:08500B70> 
0850F02C 97 242000       tybind cmdmsg #"(rrr)r" () 
0850F030 10 25           push #!<svm_blk_t:08501460> 
0850F032 97 261200       tybind stand #"(r)r" () 
0850F036 10 27           push #!<svm_blk_t:08501D80> 
0850F038 97 281200       tybind walk1_random #"(r)r" () 
0850F03C 10 29           push #!<svm_blk_t:085026C0> 
0850F03E 97 2A1200       tybind walk #"(r)r" () 
0850F042 10 2B           push #!<svm_blk_t:08502FE0> 
0850F044 97 2C1200       tybind run #"(r)r" () 
0850F048 10 2D           push #!<svm_blk_t:085038E0> 
0850F04A 97 2E1200       tybind missile #"(r)r" () 
0850F04E 10 2F           push #!<svm_blk_t:08504200> 
0850F050 97 301200       tybind think_fire #"(r)r" () 
0850F054 10 31           push #!<svm_blk_t:08504B40> 
0850F056 97 321200       tybind melee #"(r)r" () 
0850F05A 10 33           push #!<svm_blk_t:08505450> 
0850F05C 97 021904       tybind monster_generic2 #"(rr)r" p 
0850F060 20              mark 
0850F061 10 34           push #!<svm_blk_t:085082C0> 
0850F063 21              call 
0850F064 C206            end_class 
0850F066 11              pop 
0850F067 05 80DE         ln 222 
0850F06A C202 350204     begin_class passive_sheep monster_generic2 p 
0850F06F 10 36           push #!<svm_blk_t:08508EE0> 
0850F071 97 351904       tybind passive_sheep #"(rr)r" p 
0850F075 10 37           push #!<svm_blk_t:08509810> 
0850F077 97 111200       tybind think_idle #"(r)r" () 
0850F07B 10 38           push #!<svm_blk_t:0850A160> 
0850F07D 97 141200       tybind init #"(r)r" () 
0850F081 C206            end_class 
0850F083 11              pop 
0850F084 05 8104         ln 260 
0850F087 C202 390204     begin_class passive_pig monster_generic2 p 
0850F08C 10 3A           push #!<svm_blk_t:0850AB00> 
0850F08E 97 391904       tybind passive_pig #"(rr)r" p 
0850F092 10 3B           push #!<svm_blk_t:0850B430> 
0850F094 97 111200       tybind think_idle #"(r)r" () 
0850F098 10 3C           push #!<svm_blk_t:0850BD60> 
0850F09A 97 141200       tybind init #"(r)r" () 
0850F09E C206            end_class 
0850F0A0 11              pop 
0850F0A1 05 812A         ln 298 
0850F0A4 C202 3D0204     begin_class monster_army monster_generic2 p 
0850F0A9 10 3E           push #!<svm_blk_t:0850C700> 
0850F0AB 97 3D1904       tybind monster_army #"(rr)r" p 
0850F0AF C206            end_class 
0850F0B1 11              pop 
0850F0B2 05 8134         ln 308 
0850F0B5 C202 3F0204     begin_class monster_enemyhead monster_generic2 p 
0850F0BA 10 40           push #!<svm_blk_t:0850CFF0> 
0850F0BC 97 3F1904       tybind monster_enemyhead #"(rr)r" p 
0850F0C0 10 41           push #!<svm_blk_t:0850D920> 
0850F0C2 97 111200       tybind think_idle #"(r)r" () 
0850F0C6 10 42           push #!<svm_blk_t:0850E250> 
0850F0C8 97 301200       tybind think_fire #"(r)r" () 
0850F0CC 10 43           push #!<svm_blk_t:0850EC80> 
0850F0CE 97 141200       tybind init #"(r)r" () 
0850F0D2 C206            end_class 
0850F0D4 29              ret 

Add Slot 08511BA0 stand1_mf r
Add Slot 08511C30 walk1_mf r
Add Slot 08511CC0 walk2_mf r
Add Slot 08511D50 stand1_mfi r
Add Slot 08511DE0 walk1_mfi r
Add Slot 08511E70 walk2_mfi r
Add Slot 08511F00 run_mf r
Add Slot 08511F90 attack1_mf r
Add Slot 08512020 run_mfi r
Add Slot 085120B0 attack1_mfi r
This A = 08511670, run=08502FE0, this.run=08502FE0
BTSV_ScriptInit: Called
Eval:  load("game/sv_main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/sv_main.bs") -> (funcall load "game/sv_main.bs")
expr: "game/sv_main.bs" -> "game/sv_main.bs"
BLK (null), SA No, Capture=Yes
08524300 02 0101         dbgmark "<eval-str>" 1 
08524303 2A 02           tymark #"(Cs)r" 
08524305 10 03           push "game/sv_main.bs" 
08524307 24 04           tailcall_s load 
08524309 1A              clearenv 
0852430A 29              ret 

stmt: (dbgmark "game/sv_main.bs" 1) -> (dbgmark "game/sv_main.bs" 1)
stmt: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: "BGBScript Server Main Start\n" -> "BGBScript Server Main Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (funcall printf "BGBScript Server Main End\n") -> (funcall printf "BGBScript Server Main End\n")
expr: "BGBScript Server Main End\n" -> "BGBScript Server Main End\n"
BLK (null), SA No, Capture=Yes
08525010 02 0101         dbgmark "game/sv_main.bs" 1 
08525013 2A 02           tymark #"(Cs)r" 
08525015 10 03           push "BGBScript Server Main Start\n" 
08525017 23 04           call_s gc_printf 
08525019 11              pop 
0852501A 05 05           ln 5 
0852501C 2A 02           tymark #"(Cs)r" 
0852501E 10 05           push "BGBScript Server Main End\n" 
08525020 24 04           tailcall_s gc_printf 
08525022 1A              clearenv 
08525023 29              ret 

BGBScript Server Main Start
BGBScript Server Main End
()
Add Slot 0852B690 light PXBTGE_Light_s;
Add Slot 0852B760 item PXBTGE_ItemInfo_s;
Add Slot 0852B840 groundEntity PXBTGE_Entity_s;
Add Slot 0852B920 chain PXBTGE_Entity_s;
Add Slot 0852B9D0 enemy PXBTGE_Entity_s;
Add Slot 0852BA60 owner PXBTGE_Entity_s;
Add Slot 0852BB10 goalEntity PXBTGE_Entity_s;
Add Slot 0852BBC0 moveTarget PXBTGE_Entity_s;
Add Slot 0852BC70 oldEnemy PXBTGE_Entity_s;
Add Slot 0852BD20 linkNext PXBTGE_Entity_s;
Add Slot 0852BDD0 linkFirst PXBTGE_Entity_s;
Add Slot 0852BE80 entNextNode PXBTGE_Entity_s;
Add Slot 0852BF30 entNode PXBTGE_EntityNode_s;
Add Slot 0852CFB0 triggerEntity PXBTGE_Entity_s;
Add Slot 0852E0A0 teamLeader PXBTGE_Entity_s;
Add Slot 0852F240 gui_ctx PXBTCMUI_Context_s;
00: 0.1189 0.1189 0.1189
01: 0.2059 0.0000 0.0000
02: 0.0000 0.2059 0.0000
03: 0.1456 0.1456 0.0000
04: 0.0000 0.0000 0.2059
05: 0.1456 0.0000 0.1456
06: 0.0000 0.1456 0.1456
07: 0.1710 0.1026 0.0513
08: 0.1026 0.1710 0.0513
09: 0.1681 0.0841 0.0841
0A: 0.0841 0.1681 0.0841
0B: 0.1373 0.1373 0.0686
0C: 0.0841 0.0841 0.1681
0D: 0.1373 0.0686 0.1373
0E: 0.0686 0.1373 0.1373
0F: 0.0513 0.1026 0.1710
10: 0.1321 0.1321 0.1321
11: 0.2288 0.0000 0.0000
12: 0.0000 0.2288 0.0000
13: 0.1618 0.1618 0.0000
14: 0.0000 0.0000 0.2288
15: 0.1618 0.0000 0.1618
16: 0.0000 0.1618 0.1618
17: 0.1900 0.1140 0.0570
18: 0.1140 0.1900 0.0570
19: 0.1868 0.0934 0.0934
1A: 0.0934 0.1868 0.0934
1B: 0.1525 0.1525 0.0763
1C: 0.0934 0.0934 0.1868
1D: 0.1525 0.0763 0.1525
1E: 0.0763 0.1525 0.1525
1F: 0.0570 0.1140 0.1900
20: 0.1468 0.1468 0.1468
21: 0.2542 0.0000 0.0000
22: 0.0000 0.2542 0.0000
23: 0.1797 0.1797 0.0000
24: 0.0000 0.0000 0.2542
25: 0.1797 0.0000 0.1797
26: 0.0000 0.1797 0.1797
27: 0.2111 0.1267 0.0633
28: 0.1267 0.2111 0.0633
29: 0.2075 0.1038 0.1038
2A: 0.1038 0.2075 0.1038
2B: 0.1695 0.1695 0.0847
2C: 0.1038 0.1038 0.2075
2D: 0.1695 0.0847 0.1695
2E: 0.0847 0.1695 0.1695
2F: 0.0633 0.1267 0.2111
30: 0.1631 0.1631 0.1631
31: 0.2824 0.0000 0.0000
32: 0.0000 0.2824 0.0000
33: 0.1997 0.1997 0.0000
34: 0.0000 0.0000 0.2824
35: 0.1997 0.0000 0.1997
36: 0.0000 0.1997 0.1997
37: 0.2345 0.1407 0.0704
38: 0.1407 0.2345 0.0704
39: 0.2306 0.1153 0.1153
3A: 0.1153 0.2306 0.1153
3B: 0.1883 0.1883 0.0941
3C: 0.1153 0.1153 0.2306
3D: 0.1883 0.0941 0.1883
3E: 0.0941 0.1883 0.1883
3F: 0.0704 0.1407 0.2345
40: 0.1812 0.1812 0.1812
41: 0.3138 0.0000 0.0000
42: 0.0000 0.3138 0.0000
43: 0.2219 0.2219 0.0000
44: 0.0000 0.0000 0.3138
45: 0.2219 0.0000 0.2219
46: 0.0000 0.2219 0.2219
47: 0.2606 0.1564 0.0782
48: 0.1564 0.2606 0.0782
49: 0.2562 0.1281 0.1281
4A: 0.1281 0.2562 0.1281
4B: 0.2092 0.2092 0.1046
4C: 0.1281 0.1281 0.2562
4D: 0.2092 0.1046 0.2092
4E: 0.1046 0.2092 0.2092
4F: 0.0782 0.1564 0.2606
50: 0.2013 0.2013 0.2013
51: 0.3487 0.0000 0.0000
52: 0.0000 0.3487 0.0000
53: 0.2466 0.2466 0.0000
54: 0.0000 0.0000 0.3487
55: 0.2466 0.0000 0.2466
56: 0.0000 0.2466 0.2466
57: 0.2896 0.1737 0.0869
58: 0.1737 0.2896 0.0869
59: 0.2847 0.1423 0.1423
5A: 0.1423 0.2847 0.1423
5B: 0.2325 0.2325 0.1162
5C: 0.1423 0.1423 0.2847
5D: 0.2325 0.1162 0.2325
5E: 0.1162 0.2325 0.2325
5F: 0.0869 0.1737 0.2896
60: 0.2237 0.2237 0.2237
61: 0.3874 0.0000 0.0000
62: 0.0000 0.3874 0.0000
63: 0.2739 0.2739 0.0000
64: 0.0000 0.0000 0.3874
65: 0.2739 0.0000 0.2739
66: 0.0000 0.2739 0.2739
67: 0.3217 0.1930 0.0965
68: 0.1930 0.3217 0.0965
69: 0.3163 0.1582 0.1582
6A: 0.1582 0.3163 0.1582
6B: 0.2583 0.2583 0.1291
6C: 0.1582 0.1582 0.3163
6D: 0.2583 0.1291 0.2583
6E: 0.1291 0.2583 0.2583
6F: 0.0965 0.1930 0.3217
70: 0.2485 0.2485 0.2485
71: 0.4305 0.0000 0.0000
72: 0.0000 0.4305 0.0000
73: 0.3044 0.3044 0.0000
74: 0.0000 0.0000 0.4305
75: 0.3044 0.0000 0.3044
76: 0.0000 0.3044 0.3044
77: 0.3575 0.2145 0.1072
78: 0.2145 0.3575 0.1072
79: 0.3515 0.1757 0.1757
7A: 0.1757 0.3515 0.1757
7B: 0.2870 0.2870 0.1435
7C: 0.1757 0.1757 0.3515
7D: 0.2870 0.1435 0.2870
7E: 0.1435 0.2870 0.2870
7F: 0.1072 0.2145 0.3575
80: 0.2761 0.2761 0.2761
81: 0.4783 0.0000 0.0000
82: 0.0000 0.4783 0.0000
83: 0.3382 0.3382 0.0000
84: 0.0000 0.0000 0.4783
85: 0.3382 0.0000 0.3382
86: 0.0000 0.3382 0.3382
87: 0.3972 0.2383 0.1192
88: 0.2383 0.3972 0.1192
89: 0.3905 0.1953 0.1953
8A: 0.1953 0.3905 0.1953
8B: 0.3189 0.3189 0.1594
8C: 0.1953 0.1953 0.3905
8D: 0.3189 0.1594 0.3189
8E: 0.1594 0.3189 0.3189
8F: 0.1192 0.2383 0.3972
90: 0.3068 0.3068 0.3068
91: 0.5314 0.0000 0.0000
92: 0.0000 0.5314 0.0000
93: 0.3758 0.3758 0.0000
94: 0.0000 0.0000 0.5314
95: 0.3758 0.0000 0.3758
96: 0.0000 0.3758 0.3758
97: 0.4413 0.2648 0.1324
98: 0.2648 0.4413 0.1324
99: 0.4339 0.2170 0.2170
9A: 0.2170 0.4339 0.2170
9B: 0.3543 0.3543 0.1771
9C: 0.2170 0.2170 0.4339
9D: 0.3543 0.1771 0.3543
9E: 0.1771 0.3543 0.3543
9F: 0.1324 0.2648 0.4413
A0: 0.3409 0.3409 0.3409
A1: 0.5905 0.0000 0.0000
A2: 0.0000 0.5905 0.0000
A3: 0.4175 0.4175 0.0000
A4: 0.0000 0.0000 0.5905
A5: 0.4175 0.0000 0.4175
A6: 0.0000 0.4175 0.4175
A7: 0.4904 0.2942 0.1471
A8: 0.2942 0.4904 0.1471
A9: 0.4821 0.2411 0.2411
AA: 0.2411 0.4821 0.2411
AB: 0.3937 0.3937 0.1968
AC: 0.2411 0.2411 0.4821
AD: 0.3937 0.1968 0.3937
AE: 0.1968 0.3937 0.3937
AF: 0.1471 0.2942 0.4904
B0: 0.3788 0.3788 0.3788
B1: 0.6561 0.0000 0.0000
B2: 0.0000 0.6561 0.0000
B3: 0.4639 0.4639 0.0000
B4: 0.0000 0.0000 0.6561
B5: 0.4639 0.0000 0.4639
B6: 0.0000 0.4639 0.4639
B7: 0.5449 0.3269 0.1635
B8: 0.3269 0.5449 0.1635
B9: 0.5357 0.2679 0.2679
BA: 0.2679 0.5357 0.2679
BB: 0.4374 0.4374 0.2187
BC: 0.2679 0.2679 0.5357
BD: 0.4374 0.2187 0.4374
BE: 0.2187 0.4374 0.4374
BF: 0.1635 0.3269 0.5449
C0: 0.4209 0.4209 0.4209
C1: 0.7290 0.0000 0.0000
C2: 0.0000 0.7290 0.0000
C3: 0.5155 0.5155 0.0000
C4: 0.0000 0.0000 0.7290
C5: 0.5155 0.0000 0.5155
C6: 0.0000 0.5155 0.5155
C7: 0.6054 0.3632 0.1816
C8: 0.3632 0.6054 0.1816
C9: 0.5952 0.2976 0.2976
CA: 0.2976 0.5952 0.2976
CB: 0.4860 0.4860 0.2430
CC: 0.2976 0.2976 0.5952
CD: 0.4860 0.2430 0.4860
CE: 0.2430 0.4860 0.4860
CF: 0.1816 0.3632 0.6054
D0: 0.4677 0.4677 0.4677
D1: 0.8100 0.0000 0.0000
D2: 0.0000 0.8100 0.0000
D3: 0.5728 0.5728 0.0000
D4: 0.0000 0.0000 0.8100
D5: 0.5728 0.0000 0.5728
D6: 0.0000 0.5728 0.5728
D7: 0.6727 0.4036 0.2018
D8: 0.4036 0.6727 0.2018
D9: 0.6614 0.3307 0.3307
DA: 0.3307 0.6614 0.3307
DB: 0.5400 0.5400 0.2700
DC: 0.3307 0.3307 0.6614
DD: 0.5400 0.2700 0.5400
DE: 0.2700 0.5400 0.5400
DF: 0.2018 0.4036 0.6727
E0: 0.5196 0.5196 0.5196
E1: 0.9000 0.0000 0.0000
E2: 0.0000 0.9000 0.0000
E3: 0.6364 0.6364 0.0000
E4: 0.0000 0.0000 0.9000
E5: 0.6364 0.0000 0.6364
E6: 0.0000 0.6364 0.6364
E7: 0.7474 0.4484 0.2242
E8: 0.4484 0.7474 0.2242
E9: 0.7348 0.3674 0.3674
EA: 0.3674 0.7348 0.3674
EB: 0.6000 0.6000 0.3000
EC: 0.3674 0.3674 0.7348
ED: 0.6000 0.3000 0.6000
EE: 0.3000 0.6000 0.6000
EF: 0.2242 0.4484 0.7474
F0: 0.5774 0.5774 0.5774
F1: 1.0000 0.0000 0.0000
F2: 0.0000 1.0000 0.0000
F3: 0.7071 0.7071 0.0000
F4: 0.0000 0.0000 1.0000
F5: 0.7071 0.0000 0.7071
F6: 0.0000 0.7071 0.7071
F7: 0.8305 0.4983 0.2491
F8: 0.4983 0.8305 0.2491
F9: 0.8165 0.4082 0.4082
FA: 0.4082 0.8165 0.4082
FB: 0.6667 0.6667 0.3333
FC: 0.4082 0.4082 0.8165
FD: 0.6667 0.3333 0.6667
FE: 0.3333 0.6667 0.6667
FF: 0.2491 0.4983 0.8305
BTGE_Voxel_LoadDungeonType: 1 none
Adler32: Fail  6DA618C2 2C672E24
BTGE_Voxel_LoadDungeonType: 1 none: OK
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick
Adler32: Fail  5C1D0EA6 8A5FAF93
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick: OK
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick
Adler32: Fail  37090EA6 1CAF2313
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick: OK
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick
Adler32: Fail  D4423C22 BDC75C8E
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick: OK
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick
Adler32: Fail  8469FB06 CE61042E
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick: OK
BTGE_Voxel_LoadDungeonType: 8 break_px_brick
Adler32: Fail  2D34FB06 D37E5EB8
BTGE_Voxel_LoadDungeonType: 8 break_px_brick: OK
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick
Adler32: Fail  6DA9B4D1 6A4DFF7B
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick: OK
BTGE_Voxel_LoadDungeonType: 10 break_py_brick
Adler32: Fail  3886B463 A50C6515
BTGE_Voxel_LoadDungeonType: 10 break_py_brick: OK
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick
Adler32: Fail  EC9F7922 EB864AD4
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick
Adler32: Fail  DA580EA6 4787974F
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick
Adler32: Fail  251B0EA6 2F52ECD6
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick
Adler32: Fail  F2243C22 23C27781
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick
Adler32: Fail  8469FB06 3EB70E02
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick
Adler32: Fail  2D34FB06 99BB1203
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick
Adler32: Fail  6DA9B4D1 2B21F290
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick
Adler32: Fail  3886B463 E59E2CDA
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick
Adler32: Fail  28024F64 85F6787F
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick
Adler32: Fail  B26D1CD2 389510F3
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick
Adler32: Fail  DE3B8945 0FA3968A
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick
Adler32: Fail  551E9045 FBF8072A
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick
Adler32: Fail  ACAAA395 6AF77091
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick: OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,-1,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,-1,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,1,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,1,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
Adler32: Fail  3A9CBB36 35700B2E
Adler32: Fail  281164E6 E278911B
PNG: Check Fail: Offs=109 2->0
PNG: Check Fail: Offs=30998 30->0
BTGE_ServerInitFunc: BTGE_DecodeClientUpdate Pass 0EBA1352
BTGE_DecodeClientConnect
btFindSpawnpoint: 1 spawnpoints
BTGE_ServerInitFunc: btsvFreeUpdate Pass 0EBA1A50
BTGE_ClientInitFunc: BTCL_DecodeUpdate Pass 51891285
camera: 4
SoundRec: Sound overrun
BTCL_SetupClientEntFrameWMdl: Model Changed
BTCL_SetupClientEntFrameWMdl: New wmdl instance
skel loaded, 2 bones, 0 solids
AC3D_LoadModel: loading 'models/weapons/v_blast/v_blast1.ac'
GroupMergeVecsFrac 1: 398 xyz, 705 st, 784 face
GroupMergeVecsFrac 2: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 1: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 2: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 1: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 2: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 1: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 2: 116 xyz, 617 st, 224 face
Hitbox: 0 22.990 Org=(-4.936 -15.016 -4.513) Rad=(0.116 0.905 0.122)
Hitbox: 1 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 0742D520
anim active: 0, 5 frames
anim pow: 5, 4 frames
anim idle1: 9, 24 frames
anim idle2: 33, 20 frames
anim putway: 53, 3 frames
Setup FBO
BTGE_Voxel_DeltaRegionBuffer: Buffer Space Check
BTGE_ClientInitFunc: BTCL_ComposeUpdate Pass 51891249
BTGE_Voxel_AllocRegionForPoint: Pt=(0,0,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,0,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(0,-512,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTCL_DecodeLDelta: (ldelta 1 (st 0) (fl 33537) (texname ()) (boxval 0.0 0.0 0.0) (maxs 0.0 0.0 0.0) (mins 0.0 0.0 0.0) (coeff 0.862069 0.862069 1.0) (val 10000.0 0.0) (clr 1.0 1.0 1.0) (dir 0.0 0.0 0.0) (org 0.0 0.0 2048.0))
stmt: (dbgmark "<eval-str>" 5) -> (dbgmark "<eval-str>" 5)
stmt: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: "Client Stuff Eval: Begin\n" -> "Client Stuff Eval: Begin\n"
stmt: (linenum 7) -> (linenum 7)
stmt: (vars (btcl_clientstuff_vol)) -> (vars (btcl_clientstuff_vol))
expr: () -> ()
stmt: (linenum 8) -> (linenum 8)
stmt: (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)) -> (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400))
expr: (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400) -> (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)
expr: "images/faces/anim/robotface0_aa" -> "images/faces/anim/robotface0_aa"
expr: (unary - 200) -> -200
expr: (unary - 150) -> -150
expr: 400 -> 400
expr: 400 -> 400
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: btcl_clientstuff_vol -> btcl_clientstuff_vol
expr: (unary - 1) -> -1
stmt: (linenum 13) -> (linenum 13)
stmt: (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))) -> (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))
stmt: (dbgmark "<eval-str>" 15) -> (dbgmark "<eval-str>" 15)
expr: (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)) -> (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))
expr: (funcall PDGL_KeyDown K_SHIFT) -> (funcall PDGL_KeyDown K_SHIFT)
expr: K_SHIFT -> 134
expr: () -> ()
expr: (begin) -> ()
BLK BTCL_ClientStuff_Draw, SA No, Capture=Yes
05DD9310 02 010F         dbgmark "<eval-str>" 15 
05DD9313 2A 02           tymark #"(r)r" 
05DD9315 57 86           push_sv_p 134 
05DD9317 23 03           call_s PDGL_KeyDown 
05DD9319 78 0500         jmp_false 05DD9321 
05DD931C 42              push_null 
05DD931D 1F 04           cast_s r 
05DD931F 1A              clearenv 
05DD9320 29              ret 
05DD9321 42              push_null 
05DD9322 1A              clearenv 
05DD9323 29              ret 

stmt: (linenum 25) -> (linenum 25)
expr: (funcall printf "Client Stuff Eval: End\n") -> (funcall printf "Client Stuff Eval: End\n")
expr: "Client Stuff Eval: End\n" -> "Client Stuff Eval: End\n"
BLK (null), SA No, Capture=Yes
05DD91A0 02 0105         dbgmark "<eval-str>" 5 
05DD91A3 2A 02           tymark #"(Cs)r" 
05DD91A5 10 03           push "Client Stuff Eval: Begin\n" 
05DD91A7 23 04           call_s gc_printf 
05DD91A9 11              pop 
05DD91AA 05 07           ln 7 
05DD91AC 42              push_null 
05DD91AD 14 05           bind btcl_clientstuff_vol 
05DD91AF 05 08           ln 8 
05DD91B1 2A 06           tymark #"(Csrrrr)r" 
05DD91B3 10 07           push "images/faces/anim/robotface0_aa" 
05DD91B5 58 C8           push_sv_n 200 
05DD91B7 58 96           push_sv_n 150 
05DD91B9 45 9001         push_sv 400 
05DD91BC 45 9001         push_sv 400 
05DD91BF 23 08           call_s LBXGL_BrushDraw2D_CreateDisplayImage2 
05DD91C1 13 05           store btcl_clientstuff_vol 
05DD91C3 05 0B           ln 11 
05DD91C5 2A 09           tymark #"(rr)r" 
05DD91C7 12 05           load btcl_clientstuff_vol 
05DD91C9 58 01           push_sv_n 1 
05DD91CB 23 0A           call_s LBXGL_BrushDraw2D_SetObjectOrdinal 
05DD91CD 11              pop 
05DD91CE 05 0D           ln 13 
05DD91D0 10 0B           push #!<svm_blk_t:05DD9280> 
05DD91D2 97 0C0D00       tybind BTCL_ClientStuff_Draw #"()r" () 
05DD91D6 05 19           ln 25 
05DD91D8 2A 02           tymark #"(Cs)r" 
05DD91DA 10 0E           push "Client Stuff Eval: End\n" 
05DD91DC 24 04           tailcall_s gc_printf 
05DD91DE 29              ret 

Client Stuff Eval: Begin
Client Stuff Eval: End
Texture: Missing-Base: textures/env/bkgtst
LBXGL_SkyBox_LoadSky: bkgtst
Texture: Missing-Base: textures/env/stars
LBXGL_SkyBox_LoadSky: stars
Texture: Missing-Base: textures/env/bkgr
LBXGL_SkyBox_LoadSky: bkgr
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,-512,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
SoundRec: Sound overrun
RNG Init
Th 00001D58 4332 1000496C
SoundRec: Sound overrun
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x084E3760
mov [esi+248], 15
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x064A0090
call @0x0F3E3585
mov [esp+4], eax
call @0x0F3E22B6
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F3E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x064A01B0
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F3E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x064A0390
call @0x0F3E18D9
mov [esp+4], eax
call @0x0F3E16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F3E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
SoundRec: Sound overrun
Load Patch sound/player/jump1 (4096)
MainAVIHeader:
dwMicroSecPerFrame=100000
dwMaxBytesPerSec=0
dwPaddingGranularity=0
dwFlags=16
dwTotalFrames=8
dwInitialFrames=0
dwStreams=1
dwSuggestedBufferSize=0
dwWidth=256
dwHeight=256

AVIStreamHeader(0):
fccType=vids
fccHandler=rpza
dwFlags=0
wPriority=0
wLanguage=0
dwInitialFrames=0
dwScale=1024
dwRate=10240
dwStart=0
dwLength=8
dwSuggestedBufferSize=0
dwQuality=0
dwSampleSize=0
rcFrame=left:0 top:0 right:0 bottom:0

BITMAPINFOHEADER(0):
biSize=40
biWidth=256
biHeight=256
biPlanes=1
biBitCount=32
biCompression=azpr
biSizeImage=262144
biXPelsPerMeter=0
biYPelsPerMeter=0
biClrUsed=0
biClrImportant=0

AVI: Index 8 ents
AVI: codec api
VFW: Init
fccType: vidc
fccHandler: mrle
fccType: vidc
fccHandler: msvc
fccType: vidc
fccHandler: uyvy
fccType: vidc
fccHandler: yuy2
fccType: vidc
fccHandler: yvyu
fccType: vidc
fccHandler: iyuv
fccType: vidc
fccHandler: i420
fccType: vidc
fccHandler: yvu9
fccType: vidc
fccHandler: cvid
fccType: vidc
fccHandler: fps1
fccType: vidc
fccHandler: hfyu
fccType: vidc
fccHandler: lags
fccType: vidc
fccHandler: x264
fccType: vidc
fccHandler: xvid
fccType: vidc
fccHandler: ffds
fccType: vidc
fccHandler: lwlr
fccType: vidc
fccHandler: btic
fccType: vidc
fccHandler: bt1c
fccType: vidc
fccHandler: bt1d
fccType: vidc
fccHandler: bt2c
fccType: vidc
fccHandler: bt1h
MJPG: Init
MBTC: Init
MBTC: Init
RPZA: Init
Th 00001D64 3700 0F111500
PDGL: Main Break
app1 shutdown
BGBGC_DeinitThread
GC: Termination Request (bgbgc_spawngc<0)
GC: Collect Loop Exited
