CmdLine: '"F:\bgbtech_misc\bgbtech_engine\engine0.exe" '
Th 000000C8 10256 0FBC1FFF
SpaceNew(0): _flonum_t C0000000..D0000000
SpaceNew(1): _fixint_t D0000000..E0000000
SpaceNew(2): _ustring_t E0000000..E1000000
SpaceNew(3): _usymbol_t E1000000..E2000000
SpaceNew(4): _char_t E2000000..E2010000
Th 000000CC 7552 00641500
mounting F:\bgbtech_misc\bgbtech_engine as /
mounting F:\bgbtech_misc\bgbtech_engine\resource as /
vfexwad_vfmount: No Module Data engine0.exe
DYLL_MetaPath_LoadDB2: engine0_meta.txt engine0
Load DB 'engine0_meta.txt': fail
vfexwad_vfmount: No Module Data ntdll.dll
DYLL_MetaPath_LoadDB2: ntdll_meta.txt ntdll
Load DB 'ntdll_meta.txt': fail
vfexwad_vfmount: No Module Data kernel32.dll
DYLL_MetaPath_LoadDB2: kernel32_meta.txt kernel32
Load DB 'kernel32_meta.txt': fail
vfexwad_vfmount: No Module Data KERNELBASE.dll
DYLL_MetaPath_LoadDB2: KERNELBASE_meta.txt KERNELBASE
Load DB 'KERNELBASE_meta.txt': fail
Got Module Data 09780020 905216
DYLL_MetaPath_LoadDB2: btgecm_meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm (14297 keys, 51438 lines)
Load DB 'exwad/btgecm/meta.txt': pass
vfexwad_vfmount: No Module Data bgbbtjpg.dll
DYLL_MetaPath_LoadDB2: bgbbtjpg_meta.txt bgbbtjpg
Load DB 'bgbbtjpg_meta.txt': fail
vfexwad_vfmount: No Module Data bgbdy.dll
DYLL_MetaPath_LoadDB2: bgbdy_meta.txt bgbdy
Load DB 'bgbdy_meta.txt': fail
vfexwad_vfmount: No Module Data bgbgc.dll
DYLL_MetaPath_LoadDB2: bgbgc_meta.txt bgbgc
Load DB 'bgbgc_meta.txt': fail
vfexwad_vfmount: No Module Data bgbasm.dll
DYLL_MetaPath_LoadDB2: bgbasm_meta.txt bgbasm
Load DB 'bgbasm_meta.txt': fail
vfexwad_vfmount: No Module Data zpack.dll
DYLL_MetaPath_LoadDB2: zpack_meta.txt zpack
Load DB 'zpack_meta.txt': fail
vfexwad_vfmount: No Module Data libbgbmid.dll
DYLL_MetaPath_LoadDB2: libbgbmid_meta.txt libbgbmid
DYLL_MetaPath_LoadDB2: bgbmid_meta.txt libbgbmid
Load DB 'libbgbmid_meta.txt': fail
vfexwad_vfmount: No Module Data libvecmath.dll
DYLL_MetaPath_LoadDB2: libvecmath_meta.txt libvecmath
DYLL_MetaPath_LoadDB2: vecmath_meta.txt libvecmath
Load DB 'libvecmath_meta.txt': fail
vfexwad_vfmount: No Module Data WINMM.dll
DYLL_MetaPath_LoadDB2: WINMM_meta.txt WINMM
Load DB 'WINMM_meta.txt': fail
vfexwad_vfmount: No Module Data msvcrt.dll
DYLL_MetaPath_LoadDB2: msvcrt_meta.txt msvcrt
Load DB 'msvcrt_meta.txt': fail
vfexwad_vfmount: No Module Data USER32.dll
DYLL_MetaPath_LoadDB2: USER32_meta.txt USER32
Load DB 'USER32_meta.txt': fail
vfexwad_vfmount: No Module Data GDI32.dll
DYLL_MetaPath_LoadDB2: GDI32_meta.txt GDI32
Load DB 'GDI32_meta.txt': fail
vfexwad_vfmount: No Module Data LPK.dll
DYLL_MetaPath_LoadDB2: LPK_meta.txt LPK
Load DB 'LPK_meta.txt': fail
vfexwad_vfmount: No Module Data USP10.dll
DYLL_MetaPath_LoadDB2: USP10_meta.txt USP10
Load DB 'USP10_meta.txt': fail
vfexwad_vfmount: No Module Data ADVAPI32.dll
DYLL_MetaPath_LoadDB2: ADVAPI32_meta.txt ADVAPI32
Load DB 'ADVAPI32_meta.txt': fail
vfexwad_vfmount: No Module Data sechost.dll
DYLL_MetaPath_LoadDB2: sechost_meta.txt sechost
Load DB 'sechost_meta.txt': fail
vfexwad_vfmount: No Module Data RPCRT4.dll
DYLL_MetaPath_LoadDB2: RPCRT4_meta.txt RPCRT4
Load DB 'RPCRT4_meta.txt': fail
vfexwad_vfmount: No Module Data SspiCli.dll
DYLL_MetaPath_LoadDB2: SspiCli_meta.txt SspiCli
Load DB 'SspiCli_meta.txt': fail
vfexwad_vfmount: No Module Data CRYPTBASE.dll
DYLL_MetaPath_LoadDB2: CRYPTBASE_meta.txt CRYPTBASE
Load DB 'CRYPTBASE_meta.txt': fail
vfexwad_vfmount: No Module Data MSVFW32.dll
DYLL_MetaPath_LoadDB2: MSVFW32_meta.txt MSVFW32
Load DB 'MSVFW32_meta.txt': fail
vfexwad_vfmount: No Module Data SHELL32.dll
DYLL_MetaPath_LoadDB2: SHELL32_meta.txt SHELL32
Load DB 'SHELL32_meta.txt': fail
vfexwad_vfmount: No Module Data SHLWAPI.dll
DYLL_MetaPath_LoadDB2: SHLWAPI_meta.txt SHLWAPI
Load DB 'SHLWAPI_meta.txt': fail
vfexwad_vfmount: No Module Data COMCTL32.dll
DYLL_MetaPath_LoadDB2: COMCTL32_meta.txt COMCTL32
Load DB 'COMCTL32_meta.txt': fail
Got Module Data 09B60020 1159168
DYLL_MetaPath_LoadDB2: bgbsvm_meta.txt bgbsvm
DYLL_MetaPath_LoadDB2: exwad/bgbsvm/meta.txt bgbsvm
DYLL_MetaPath_LoadDB2: exwad/bgbsvm/meta.txt bgbsvm (10537 keys, 37724 lines)
Load DB 'exwad/bgbsvm/meta.txt': pass
vfexwad_vfmount: No Module Data bgbnet.dll
DYLL_MetaPath_LoadDB2: bgbnet_meta.txt bgbnet
Load DB 'bgbnet_meta.txt': fail
vfexwad_vfmount: No Module Data WSOCK32.dll
DYLL_MetaPath_LoadDB2: WSOCK32_meta.txt WSOCK32
Load DB 'WSOCK32_meta.txt': fail
vfexwad_vfmount: No Module Data WS2_32.dll
DYLL_MetaPath_LoadDB2: WS2_32_meta.txt WS2_32
Load DB 'WS2_32_meta.txt': fail
vfexwad_vfmount: No Module Data NSI.dll
DYLL_MetaPath_LoadDB2: NSI_meta.txt NSI
Load DB 'NSI_meta.txt': fail
vfexwad_vfmount: No Module Data ole32.dll
DYLL_MetaPath_LoadDB2: ole32_meta.txt ole32
Load DB 'ole32_meta.txt': fail
Got Module Data 09E50020 1417216
DYLL_MetaPath_LoadDB2: liblbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: lbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2 (23062 keys, 82451 lines)
Load DB 'exwad/liblbxgl2/meta.txt': pass
vfexwad_vfmount: No Module Data libpdgl.dll
DYLL_MetaPath_LoadDB2: libpdgl_meta.txt libpdgl
DYLL_MetaPath_LoadDB2: pdgl_meta.txt libpdgl
Load DB 'libpdgl_meta.txt': fail
vfexwad_vfmount: No Module Data libpdglui.dll
DYLL_MetaPath_LoadDB2: libpdglui_meta.txt libpdglui
DYLL_MetaPath_LoadDB2: pdglui_meta.txt libpdglui
Load DB 'libpdglui_meta.txt': fail
vfexwad_vfmount: No Module Data SETUPAPI.dll
DYLL_MetaPath_LoadDB2: SETUPAPI_meta.txt SETUPAPI
Load DB 'SETUPAPI_meta.txt': fail
vfexwad_vfmount: No Module Data CFGMGR32.dll
DYLL_MetaPath_LoadDB2: CFGMGR32_meta.txt CFGMGR32
Load DB 'CFGMGR32_meta.txt': fail
vfexwad_vfmount: No Module Data OLEAUT32.dll
DYLL_MetaPath_LoadDB2: OLEAUT32_meta.txt OLEAUT32
Load DB 'OLEAUT32_meta.txt': fail
vfexwad_vfmount: No Module Data DEVOBJ.dll
DYLL_MetaPath_LoadDB2: DEVOBJ_meta.txt DEVOBJ
Load DB 'DEVOBJ_meta.txt': fail
vfexwad_vfmount: No Module Data IMM32.DLL
DYLL_MetaPath_LoadDB2: IMM32_meta.txt IMM32
Load DB 'IMM32_meta.txt': fail
vfexwad_vfmount: No Module Data MSCTF.dll
DYLL_MetaPath_LoadDB2: MSCTF_meta.txt MSCTF
Load DB 'MSCTF_meta.txt': fail
DYLL_LoadLibraryI: Load game_base.dll
DYLL_LoadLibraryI: Load resource/game_base.dll
DYLL_MetaPath_LoadDB2: cc_usr/metapath.txt (null)
mounting F:\bgbtech_misc\bgbtech_engine\resource_mini as /
DYLL_LoadLibraryI: Load rasw_opengl32.dll
DYLL_LoadLibraryI: Success Loading rasw_opengl32.dll
vfexwad_vfmount: No Module Data rasw_opengl32.dll
DYLL_MetaPath_LoadDB2: rasw_opengl32_meta.txt rasw_opengl32
Load DB 'rasw_opengl32': fail
DYLL_LoadLibrary: Loaded rasw_opengl32
OpenGL Vendor=BGBTech
OpenGL Renderer=BGBRASW
OpenGL Version=1.2
OpenGL Extensions=<[[
 ]]>

PDGL: Startup
loading font 'unicode':'fonts/unifont.bfn'
loading font 'fixed_B':'fonts/fixed_b.bfn'
loading font 'fixed_16px':'fonts/fixed_cp437_16px.bfn'
loading font 'fixed_32px':'fonts/fixed_32px.bfn'
loading font 'fixed_64px':'fonts/fixed_64px.bfn'
loading font 'fixed':'fonts/fixed_cp437_8px.bfn'
loading font 'fixed_cp437_8px':'fonts/fixed_cp437_8px.bfn'
loading font 'gfx':'fonts/gfx.bfn'
Load Patch instruments/acpiano (0)
LBXGL_Particle_Init
PDGL: Textures Init
PDGL_InitShader
PDGL_InitShader: Fail
DYLL_LoadLibraryI: Load clientx86.dll
DYLL_LoadLibraryI: Load resource/clientx86.dll
DYLL_LoadLibraryI: Success Loading resource/clientx86.dll
Got Module Data 0DEC0020 536576
DYLL_MetaPath_LoadDB2: clientx86_meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86 (23061 keys, 82448 lines)
Load DB 'clientx86': pass
DYLL_LoadLibrary: Loaded clientx86
BTGE_ClientInitFunc: BTCL_NewWorld Pass 0B7E12DF
stmt: (dbgmark "bsvm/init.bs" 1) -> (dbgmark "bsvm/init.bs" 1)
stmt: (flag extern (import "bsvm/init/Exceptions")) -> (flag extern (import "bsvm/init/Exceptions"))
stmt: (linenum 2) -> (linenum 2)
expr: (flag extern (import "bsvm/init/Errors")) -> (flag extern (import "bsvm/init/Errors"))
BLK (null), SA No, Capture=Yes
083AB750 02 0101         dbgmark "bsvm/init.bs" 1 
083AB753 9A 0203         import "bsvm/init/Exceptions" Ce 
083AB756 05 02           ln 2 
083AB758 9A 0403         import "bsvm/init/Errors" Ce 
083AB75B 42              push_null 
083AB75C 1A              clearenv 
083AB75D 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 1) -> (dbgmark "bsvm/init/Exceptions.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin)))))) -> (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin))))))
expr: (rlambda Exception () (begin)) -> (rlambda Exception () (begin))
expr: (begin) -> ()
BLK Exception, SA No, Capture=Yes
083AD620 42              push_null 
083AD621 1A              clearenv 
083AD622 29              ret 

expr: (rlambda Exception (str) (begin)) -> (rlambda Exception (str) (begin))
expr: (begin) -> ()
BLK Exception, SA Yes, Capture=Yes
083ADF30 42              push_null 
083ADF31 1A              clearenv 
083ADF32 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 11) -> (dbgmark "bsvm/init/Exceptions.bs" 11)
stmt: (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))))))) -> (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))))))
expr: (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))) -> (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 14) -> (dbgmark "bsvm/init/Exceptions.bs" 14)
expr: (funcall super) -> (funcall super)
BLK NullPointerException, SA No, Capture=Yes
083AEA40 02 010E         dbgmark "bsvm/init/Exceptions.bs" 14 
083AEA43 20              mark 
083AEA44 C20E            call_super 
083AEA46 1A              clearenv 
083AEA47 29              ret 

expr: (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))) -> (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 16) -> (dbgmark "bsvm/init/Exceptions.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK NullPointerException, SA Yes, Capture=Yes
083AF430 02 0110         dbgmark "bsvm/init/Exceptions.bs" 16 
083AF433 20              mark 
083AF434 5A 00           lload 0 
083AF436 C20E            call_super 
083AF438 1A              clearenv 
083AF439 29              ret 

stmt: (linenum 19) -> (linenum 19)
stmt: (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))))))) -> (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))))))
expr: (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))) -> (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 22) -> (dbgmark "bsvm/init/Exceptions.bs" 22)
expr: (funcall super) -> (funcall super)
BLK CastFailException, SA No, Capture=Yes
083AFD20 02 0116         dbgmark "bsvm/init/Exceptions.bs" 22 
083AFD23 20              mark 
083AFD24 C20E            call_super 
083AFD26 1A              clearenv 
083AFD27 29              ret 

expr: (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))) -> (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 24) -> (dbgmark "bsvm/init/Exceptions.bs" 24)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK CastFailException, SA Yes, Capture=Yes
083B0610 02 0118         dbgmark "bsvm/init/Exceptions.bs" 24 
083B0613 20              mark 
083B0614 5A 00           lload 0 
083B0616 C20E            call_super 
083B0618 1A              clearenv 
083B0619 29              ret 

stmt: (linenum 27) -> (linenum 27)
stmt: (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))))))) -> (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))))))
expr: (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))) -> (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 30) -> (dbgmark "bsvm/init/Exceptions.bs" 30)
expr: (funcall super) -> (funcall super)
BLK BoundsCheckException, SA No, Capture=Yes
083B0F00 02 011E         dbgmark "bsvm/init/Exceptions.bs" 30 
083B0F03 20              mark 
083B0F04 C20E            call_super 
083B0F06 1A              clearenv 
083B0F07 29              ret 

expr: (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))) -> (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 32) -> (dbgmark "bsvm/init/Exceptions.bs" 32)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK BoundsCheckException, SA Yes, Capture=Yes
083B17F0 02 0120         dbgmark "bsvm/init/Exceptions.bs" 32 
083B17F3 20              mark 
083B17F4 5A 00           lload 0 
083B17F6 C20E            call_super 
083B17F8 1A              clearenv 
083B17F9 29              ret 

stmt: (linenum 35) -> (linenum 35)
expr: (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))))))) -> (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))))))
expr: (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))) -> (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 38) -> (dbgmark "bsvm/init/Exceptions.bs" 38)
expr: (funcall super) -> (funcall super)
BLK RightsCheckException, SA No, Capture=Yes
083B20E0 02 0126         dbgmark "bsvm/init/Exceptions.bs" 38 
083B20E3 20              mark 
083B20E4 C20E            call_super 
083B20E6 1A              clearenv 
083B20E7 29              ret 

expr: (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))) -> (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 40) -> (dbgmark "bsvm/init/Exceptions.bs" 40)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK RightsCheckException, SA Yes, Capture=Yes
083B29D0 02 0128         dbgmark "bsvm/init/Exceptions.bs" 40 
083B29D3 20              mark 
083B29D4 5A 00           lload 0 
083B29D6 C20E            call_super 
083B29D8 1A              clearenv 
083B29D9 29              ret 

BLK (null), SA No, Capture=Yes
083B2AF0 02 0101         dbgmark "bsvm/init/Exceptions.bs" 1 
083B2AF3 C200 0200       begin_package bsvm/init () 
083B2AF7 05 03           ln 3 
083B2AF9 C202 030004     begin_class Exception () p 
083B2AFE 10 05           push #!<svm_blk_t:083AD5A0> 
083B2B00 97 030604       tybind Exception #"()r" p 
083B2B04 10 07           push #!<svm_blk_t:083ADEB0> 
083B2B06 97 030804       tybind Exception #"(r)r" p 
083B2B0A C206            end_class 
083B2B0C 11              pop 
083B2B0D 02 010B         dbgmark "bsvm/init/Exceptions.bs" 11 
083B2B10 C202 090304     begin_class NullPointerException Exception p 
083B2B15 10 0A           push #!<svm_blk_t:083AE9C0> 
083B2B17 97 090604       tybind NullPointerException #"()r" p 
083B2B1B 10 0B           push #!<svm_blk_t:083AF3B0> 
083B2B1D 97 090804       tybind NullPointerException #"(r)r" p 
083B2B21 C206            end_class 
083B2B23 11              pop 
083B2B24 05 13           ln 19 
083B2B26 C202 0C0304     begin_class CastFailException Exception p 
083B2B2B 10 0D           push #!<svm_blk_t:083AFCA0> 
083B2B2D 97 0C0604       tybind CastFailException #"()r" p 
083B2B31 10 0E           push #!<svm_blk_t:083B0590> 
083B2B33 97 0C0804       tybind CastFailException #"(r)r" p 
083B2B37 C206            end_class 
083B2B39 11              pop 
083B2B3A 05 1B           ln 27 
083B2B3C C202 0F0304     begin_class BoundsCheckException Exception p 
083B2B41 10 10           push #!<svm_blk_t:083B0E80> 
083B2B43 97 0F0604       tybind BoundsCheckException #"()r" p 
083B2B47 10 11           push #!<svm_blk_t:083B1770> 
083B2B49 97 0F0804       tybind BoundsCheckException #"(r)r" p 
083B2B4D C206            end_class 
083B2B4F 11              pop 
083B2B50 05 23           ln 35 
083B2B52 C202 120304     begin_class RightsCheckException Exception p 
083B2B57 10 13           push #!<svm_blk_t:083B2060> 
083B2B59 97 120604       tybind RightsCheckException #"()r" p 
083B2B5D 10 14           push #!<svm_blk_t:083B2950> 
083B2B5F 97 120804       tybind RightsCheckException #"(r)r" p 
083B2B63 C206            end_class 
083B2B65 C204            end_package 
083B2B67 11              pop 
083B2B68 29              ret 

stmt: (dbgmark "bsvm/init/Errors.bs" 1) -> (dbgmark "bsvm/init/Errors.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))))))) -> (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))))))
expr: (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))) -> (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 6) -> (dbgmark "bsvm/init/Errors.bs" 6)
expr: (funcall super) -> (funcall super)
BLK Error, SA No, Capture=Yes
083B79A0 02 0106         dbgmark "bsvm/init/Errors.bs" 6 
083B79A3 20              mark 
083B79A4 C20E            call_super 
083B79A6 1A              clearenv 
083B79A7 29              ret 

expr: (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))) -> (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 8) -> (dbgmark "bsvm/init/Errors.bs" 8)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK Error, SA Yes, Capture=Yes
083B8290 02 0108         dbgmark "bsvm/init/Errors.bs" 8 
083B8293 20              mark 
083B8294 5A 00           lload 0 
083B8296 C20E            call_super 
083B8298 1A              clearenv 
083B8299 29              ret 

stmt: (linenum 11) -> (linenum 11)
expr: (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))))))) -> (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))))))
expr: (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))) -> (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 14) -> (dbgmark "bsvm/init/Errors.bs" 14)
expr: (funcall super) -> (funcall super)
BLK IllegalAccessError, SA No, Capture=Yes
083B8B80 02 010E         dbgmark "bsvm/init/Errors.bs" 14 
083B8B83 20              mark 
083B8B84 C20E            call_super 
083B8B86 1A              clearenv 
083B8B87 29              ret 

expr: (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))) -> (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 16) -> (dbgmark "bsvm/init/Errors.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK IllegalAccessError, SA Yes, Capture=Yes
083B9470 02 0110         dbgmark "bsvm/init/Errors.bs" 16 
083B9473 20              mark 
083B9474 5A 00           lload 0 
083B9476 C20E            call_super 
083B9478 1A              clearenv 
083B9479 29              ret 

BLK (null), SA No, Capture=Yes
083B78D0 02 0101         dbgmark "bsvm/init/Errors.bs" 1 
083B78D3 C200 0200       begin_package bsvm/init () 
083B78D7 05 03           ln 3 
083B78D9 C202 030405     begin_class Error Exception p 
083B78DE 10 06           push #!<svm_blk_t:083B7920> 
083B78E0 97 030705       tybind Error #"()r" p 
083B78E4 10 08           push #!<svm_blk_t:083B8210> 
083B78E6 97 030905       tybind Error #"(r)r" p 
083B78EA C206            end_class 
083B78EC 11              pop 
083B78ED 05 0B           ln 11 
083B78EF C202 0A0305     begin_class IllegalAccessError Error p 
083B78F4 10 0B           push #!<svm_blk_t:083B8B00> 
083B78F6 97 0A0705       tybind IllegalAccessError #"()r" p 
083B78FA 10 0C           push #!<svm_blk_t:083B93F0> 
083B78FC 97 0A0905       tybind IllegalAccessError #"(r)r" p 
083B7900 C206            end_class 
083B7902 C204            end_package 
083B7904 11              pop 
083B7905 29              ret 

stmt: (dbgmark "game_cl/main.bs" 1) -> (dbgmark "game_cl/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: "BGBScript Client Start\n" -> "BGBScript Client Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))))) -> (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))) -> (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))) -> (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")) -> (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))
stmt: (dbgmark "game_cl/main.bs" 9) -> (dbgmark "game_cl/main.bs" 9)
expr: (funcall printf "BTCL_ScriptInit: Called\n") -> (funcall printf "BTCL_ScriptInit: Called\n")
expr: "BTCL_ScriptInit: Called\n" -> "BTCL_ScriptInit: Called\n"
BLK BTCL_ScriptInit, SA No, Capture=Yes
083BBD00 02 0109         dbgmark "game_cl/main.bs" 9 
083BBD03 2A 02           tymark #"(Cs)r" 
083BBD05 10 03           push "BTCL_ScriptInit: Called\n" 
083BBD07 24 04           tailcall_s gc_printf 
083BBD09 1A              clearenv 
083BBD0A 29              ret 

stmt: (linenum 12) -> (linenum 12)
stmt: (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))) -> (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))
expr: (rlambda (cast void BTCL_ScriptDrawUI) () (begin)) -> (rlambda (cast void BTCL_ScriptDrawUI) () (begin))
expr: (begin) -> ()
BLK BTCL_ScriptDrawUI, SA No, Capture=Yes
083BC610 42              push_null 
083BC611 1A              clearenv 
083BC612 29              ret 

BLK (null), SA No, Capture=Yes
083BC6C0 02 0101         dbgmark "game_cl/main.bs" 1 
083BC6C3 9A 0203         import "C" n 
083BC6C6 05 03           ln 3 
083BC6C8 2A 04           tymark #"(Cs)r" 
083BC6CA 10 05           push "BGBScript Client Start\n" 
083BC6CC 23 06           call_s gc_printf 
083BC6CE 11              pop 
083BC6CF 05 05           ln 5 
083BC6D1 C200 0703       begin_package C/game_cl/main n 
083BC6D5 05 07           ln 7 
083BC6D7 10 08           push #!<svm_blk_t:083BBC70> 
083BC6D9 97 090A00       tybind BTCL_ScriptInit #"()v" () 
083BC6DD 05 0C           ln 12 
083BC6DF 10 0B           push #!<svm_blk_t:083BC590> 
083BC6E1 97 0C0A00       tybind BTCL_ScriptDrawUI #"()v" () 
083BC6E5 C204            end_package 
083BC6E7 11              pop 
083BC6E8 29              ret 

BGBScript Client Start
BSVM_Pop: Stack Underflow @ 083BC6C0
BTCL_ScriptInit: Called
DYLL_LoadLibraryI: Load serverx86.dll
DYLL_LoadLibraryI: Load resource/serverx86.dll
DYLL_LoadLibraryI: Success Loading resource/serverx86.dll
Got Module Data 0EEE0020 798720
DYLL_MetaPath_LoadDB2: serverx86_meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86 (16002 keys, 57329 lines)
Load DB 'serverx86': pass
DYLL_LoadLibrary: Loaded serverx86
BTGE_ServerInitFunc: btsvBindWorld Pass 0ED61EF1
BTGE_ClientInitFunc: BTCL_BindWorld Pass 0B7E1091
BTGE_ClientInitFunc: BTCL_BindBrushWorld Pass 0B7E119A
Th 00000B98 8224 00E6100F
PDGL: Main
Net Init Low (Winsock).
BTGE_ClientInitFunc: BTCL_HandleInput Pass 0B7E10DC
  hostname=GAMMA4-W7
  IPv4=192.168.1.100
TCP Initialized
Meta0_Init
BSXRP Init
Meta0: new port 18512, service bsxrp-server
BTGE_ServerInitFunc: btsvStepWorld Pass 0ED61D61
BTGE_ServerInitFunc: btsvComposeUpdate Pass 0ED61C71
BTGE_ServerInitFunc: btsvFinishUpdate Pass 0ED618A2
PDGLUI_InitRift: No Device
BTGE_ClientInitFunc: BTCL_StepWorld Pass 0B7E1118
BTGE_ClientInitFunc: BTCL_SetupClientFrame Pass 0B7E1316
Texture: Missing-Base: textures/env/space1
LBXGL_SkyBox_LoadSky: space1
BTGE_ClientInitFunc: BTCL_Draw2D Pass 0B7E116D
new frag
new frag
SoundRec: Sound overrun
Eval:  load("game/main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/main.bs") -> (funcall load "game/main.bs")
expr: "game/main.bs" -> "game/main.bs"
BLK (null), SA No, Capture=Yes
086447D0 02 0101         dbgmark "<eval-str>" 1 
086447D3 2A 02           tymark #"(Cs)r" 
086447D5 10 03           push "game/main.bs" 
086447D7 24 04           tailcall_s load 
086447D9 1A              clearenv 
086447DA 29              ret 

stmt: (dbgmark "game/main.bs" 6) -> (dbgmark "game/main.bs" 6)
stmt: (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)) -> (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))
stmt: (dbgmark "game/main.bs" 8) -> (dbgmark "game/main.bs" 8)
stmt: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: "menu" -> "menu"
stmt: (linenum 10) -> (linenum 10)
stmt: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: "&New Game" -> "&New Game"
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: "ng_peaceful" -> "ng_peaceful"
expr: "Peaceful" -> "Peaceful"
stmt: (linenum 12) -> (linenum 12)
stmt: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: "ng_easy" -> "ng_easy"
expr: "Easy" -> "Easy"
stmt: (linenum 13) -> (linenum 13)
stmt: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: "ng_medium" -> "ng_medium"
expr: "Medium" -> "Medium"
stmt: (linenum 14) -> (linenum 14)
stmt: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: "ng_hard" -> "ng_hard"
expr: "Hard" -> "Hard"
stmt: (linenum 15) -> (linenum 15)
stmt: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: "ng_nightmare" -> "ng_nightmare"
expr: "Nightmare" -> "Nightmare"
stmt: (linenum 16) -> (linenum 16)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 18) -> (linenum 18)
stmt: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: "&Load Game" -> "&Load Game"
stmt: (linenum 19) -> (linenum 19)
stmt: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: "sv_load1" -> "sv_load1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 20) -> (linenum 20)
stmt: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: "sv_load2" -> "sv_load2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 21) -> (linenum 21)
stmt: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: "sv_load3" -> "sv_load3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 22) -> (linenum 22)
stmt: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: "sv_load4" -> "sv_load4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 23) -> (linenum 23)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 25) -> (linenum 25)
stmt: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: "&Save Game" -> "&Save Game"
stmt: (linenum 26) -> (linenum 26)
stmt: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: "sv_save1" -> "sv_save1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 27) -> (linenum 27)
stmt: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: "sv_save2" -> "sv_save2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 28) -> (linenum 28)
stmt: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: "sv_save3" -> "sv_save3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 29) -> (linenum 29)
stmt: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: "sv_save4" -> "sv_save4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 30) -> (linenum 30)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: "Help" -> "Help"
stmt: (linenum 34) -> (linenum 34)
stmt: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: "help_generic" -> "help_generic"
expr: "General" -> "General"
stmt: (linenum 35) -> (linenum 35)
stmt: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: "help_about" -> "help_about"
expr: "About" -> "About"
stmt: (linenum 36) -> (linenum 36)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 38) -> (linenum 38)
expr: (funcall PDGLUI_EndMenu) -> (funcall PDGLUI_EndMenu)
BLK Game_CreateMainMenu, SA No, Capture=Yes
08646820 02 0108         dbgmark "game/main.bs" 8 
08646823 2A 02           tymark #"(Cs)r" 
08646825 10 03           push "menu" 
08646827 23 04           call_s PDGLUI_BeginMenu 
08646829 11              pop 
0864682A 05 0A           ln 10 
0864682C 2A 02           tymark #"(Cs)r" 
0864682E 10 05           push "&New Game" 
08646830 23 06           call_s PDGLUI_BeginSubMenu 
08646832 11              pop 
08646833 05 0B           ln 11 
08646835 2A 07           tymark #"(CsCs)r" 
08646837 10 08           push "ng_peaceful" 
08646839 10 09           push "Peaceful" 
0864683B 23 0A           call_s PDGLUI_MenuItem 
0864683D 11              pop 
0864683E 05 0C           ln 12 
08646840 2A 07           tymark #"(CsCs)r" 
08646842 10 0B           push "ng_easy" 
08646844 10 0C           push "Easy" 
08646846 23 0A           call_s PDGLUI_MenuItem 
08646848 11              pop 
08646849 05 0D           ln 13 
0864684B 2A 07           tymark #"(CsCs)r" 
0864684D 10 0D           push "ng_medium" 
0864684F 10 0E           push "Medium" 
08646851 23 0A           call_s PDGLUI_MenuItem 
08646853 11              pop 
08646854 05 0E           ln 14 
08646856 2A 07           tymark #"(CsCs)r" 
08646858 10 0F           push "ng_hard" 
0864685A 10 10           push "Hard" 
0864685C 23 0A           call_s PDGLUI_MenuItem 
0864685E 11              pop 
0864685F 05 0F           ln 15 
08646861 2A 07           tymark #"(CsCs)r" 
08646863 10 11           push "ng_nightmare" 
08646865 10 12           push "Nightmare" 
08646867 23 0A           call_s PDGLUI_MenuItem 
08646869 11              pop 
0864686A 05 10           ln 16 
0864686C 2A 13           tymark #"()r" 
0864686E 23 14           call_s PDGLUI_EndSubMenu 
08646870 11              pop 
08646871 05 12           ln 18 
08646873 2A 02           tymark #"(Cs)r" 
08646875 10 15           push "&Load Game" 
08646877 23 06           call_s PDGLUI_BeginSubMenu 
08646879 11              pop 
0864687A 05 13           ln 19 
0864687C 2A 07           tymark #"(CsCs)r" 
0864687E 10 16           push "sv_load1" 
08646880 10 17           push "Game 1" 
08646882 23 0A           call_s PDGLUI_MenuItem 
08646884 11              pop 
08646885 05 14           ln 20 
08646887 2A 07           tymark #"(CsCs)r" 
08646889 10 18           push "sv_load2" 
0864688B 10 19           push "Game 2" 
0864688D 23 0A           call_s PDGLUI_MenuItem 
0864688F 11              pop 
08646890 05 15           ln 21 
08646892 2A 07           tymark #"(CsCs)r" 
08646894 10 1A           push "sv_load3" 
08646896 10 1B           push "Game 3" 
08646898 23 0A           call_s PDGLUI_MenuItem 
0864689A 11              pop 
0864689B 05 16           ln 22 
0864689D 2A 07           tymark #"(CsCs)r" 
0864689F 10 1C           push "sv_load4" 
086468A1 10 1D           push "Game 4" 
086468A3 23 0A           call_s PDGLUI_MenuItem 
086468A5 11              pop 
086468A6 05 17           ln 23 
086468A8 2A 13           tymark #"()r" 
086468AA 23 14           call_s PDGLUI_EndSubMenu 
086468AC 11              pop 
086468AD 05 19           ln 25 
086468AF 2A 02           tymark #"(Cs)r" 
086468B1 10 1E           push "&Save Game" 
086468B3 23 06           call_s PDGLUI_BeginSubMenu 
086468B5 11              pop 
086468B6 05 1A           ln 26 
086468B8 2A 07           tymark #"(CsCs)r" 
086468BA 10 1F           push "sv_save1" 
086468BC 10 17           push "Game 1" 
086468BE 23 0A           call_s PDGLUI_MenuItem 
086468C0 11              pop 
086468C1 05 1B           ln 27 
086468C3 2A 07           tymark #"(CsCs)r" 
086468C5 10 20           push "sv_save2" 
086468C7 10 19           push "Game 2" 
086468C9 23 0A           call_s PDGLUI_MenuItem 
086468CB 11              pop 
086468CC 05 1C           ln 28 
086468CE 2A 07           tymark #"(CsCs)r" 
086468D0 10 21           push "sv_save3" 
086468D2 10 1B           push "Game 3" 
086468D4 23 0A           call_s PDGLUI_MenuItem 
086468D6 11              pop 
086468D7 05 1D           ln 29 
086468D9 2A 07           tymark #"(CsCs)r" 
086468DB 10 22           push "sv_save4" 
086468DD 10 1D           push "Game 4" 
086468DF 23 0A           call_s PDGLUI_MenuItem 
086468E1 11              pop 
086468E2 05 1E           ln 30 
086468E4 2A 13           tymark #"()r" 
086468E6 23 14           call_s PDGLUI_EndSubMenu 
086468E8 11              pop 
086468E9 05 21           ln 33 
086468EB 2A 02           tymark #"(Cs)r" 
086468ED 10 23           push "Help" 
086468EF 23 06           call_s PDGLUI_BeginSubMenu 
086468F1 11              pop 
086468F2 05 22           ln 34 
086468F4 2A 07           tymark #"(CsCs)r" 
086468F6 10 24           push "help_generic" 
086468F8 10 25           push "General" 
086468FA 23 0A           call_s PDGLUI_MenuItem 
086468FC 11              pop 
086468FD 05 23           ln 35 
086468FF 2A 07           tymark #"(CsCs)r" 
08646901 10 26           push "help_about" 
08646903 10 27           push "About" 
08646905 23 0A           call_s PDGLUI_MenuItem 
08646907 11              pop 
08646908 05 24           ln 36 
0864690A 2A 13           tymark #"()r" 
0864690C 23 14           call_s PDGLUI_EndSubMenu 
0864690E 11              pop 
0864690F 05 26           ln 38 
08646911 2A 13           tymark #"()r" 
08646913 24 28           tailcall_s PDGLUI_EndMenu 
08646915 1A              clearenv 
08646916 29              ret 

stmt: (linenum 41) -> (linenum 41)
stmt: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: "BGBScript Main Start\n" -> "BGBScript Main Start\n"
stmt: (linenum 43) -> (linenum 43)
stmt: (flag extern (import "game_cl/main")) -> (flag extern (import "game_cl/main"))
stmt: (linenum 45) -> (linenum 45)
stmt: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
expr: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
stmt: (linenum 47) -> (linenum 47)
expr: (funcall printf "BGBScript Main End\n") -> (funcall printf "BGBScript Main End\n")
expr: "BGBScript Main End\n" -> "BGBScript Main End\n"
BLK (null), SA No, Capture=Yes
08646A00 02 0106         dbgmark "game/main.bs" 6 
08646A03 10 02           push #!<svm_blk_t:08646700> 
08646A05 97 030400       tybind Game_CreateMainMenu #"()r" () 
08646A09 05 29           ln 41 
08646A0B 2A 05           tymark #"(Cs)r" 
08646A0D 10 06           push "BGBScript Main Start\n" 
08646A0F 23 07           call_s gc_printf 
08646A11 11              pop 
08646A12 05 2B           ln 43 
08646A14 9A 0809         import "game_cl/main" Ce 
08646A17 05 2D           ln 45 
08646A19 2A 04           tymark #"()r" 
08646A1B 23 03           call_s Game_CreateMainMenu 
08646A1D 11              pop 
08646A1E 05 2F           ln 47 
08646A20 2A 05           tymark #"(Cs)r" 
08646A22 10 0A           push "BGBScript Main End\n" 
08646A24 24 07           tailcall_s gc_printf 
08646A26 29              ret 

BGBScript Main Start
BGBScript Main End
()
new frag
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x08643240
call @0x008E18D9
mov [esp+4], eax
call @0x008E16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BTGE_ClientInitFunc: BTCL_FlushWorld Pass 0B7E12CB
BTGE_ServerInitFunc: BTGE_WorldTeardown Pass 0ED621D0
BTGE_ClientInitFunc: BTCL_LoadMapFile Pass 0B7E1136
BTGE_ServerInitFunc: BTSV_LoadMapFile Pass 0ED61F82
Map Loaded: 0 brushes, 4 ents, 1 lights
BTGE_ServerInitFunc: btsvSpawnWorld Pass 0ED61DC0
BT_SpawnWorld 0D85A5A0
stmt: (dbgmark "game_sv/main.bs" 1) -> (dbgmark "game_sv/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: "BGBScript Server Start\n" -> "BGBScript Server Start\n"
stmt: (linenum 5) -> (linenum 5)
stmt: (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))))) -> (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))) -> (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))) -> (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")) -> (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))
stmt: (dbgmark "game_sv/main.bs" 9) -> (dbgmark "game_sv/main.bs" 9)
expr: (funcall printf "BTSV_ScriptInit: Called\n") -> (funcall printf "BTSV_ScriptInit: Called\n")
expr: "BTSV_ScriptInit: Called\n" -> "BTSV_ScriptInit: Called\n"
BLK BTSV_ScriptInit, SA No, Capture=Yes
0864FC70 02 0109         dbgmark "game_sv/main.bs" 9 
0864FC73 2A 02           tymark #"(Cs)r" 
0864FC75 10 03           push "BTSV_ScriptInit: Called\n" 
0864FC77 24 04           tailcall_s gc_printf 
0864FC79 1A              clearenv 
0864FC7A 29              ret 

stmt: (linenum 13) -> (linenum 13)
stmt: (flag extern (import "game_sv/EntityBase")) -> (flag extern (import "game_sv/EntityBase"))
stmt: (linenum 14) -> (linenum 14)
expr: (flag extern (import "game_sv/MonsterGeneric")) -> (flag extern (import "game_sv/MonsterGeneric"))
BLK (null), SA No, Capture=Yes
0864FD20 02 0101         dbgmark "game_sv/main.bs" 1 
0864FD23 9A 0203         import "C" n 
0864FD26 05 03           ln 3 
0864FD28 2A 04           tymark #"(Cs)r" 
0864FD2A 10 05           push "BGBScript Server Start\n" 
0864FD2C 23 06           call_s gc_printf 
0864FD2E 11              pop 
0864FD2F 05 05           ln 5 
0864FD31 C200 0703       begin_package C/game_sv/main n 
0864FD35 05 07           ln 7 
0864FD37 10 08           push #!<svm_blk_t:0864FBE0> 
0864FD39 97 090A00       tybind BTSV_ScriptInit #"()v" () 
0864FD3D C204            end_package 
0864FD3F 11              pop 
0864FD40 05 0D           ln 13 
0864FD42 9A 0B0C         import "game_sv/EntityBase" Ce 
0864FD45 05 0E           ln 14 
0864FD47 9A 0D0C         import "game_sv/MonsterGeneric" Ce 
0864FD4A 42              push_null 
0864FD4B 29              ret 

BGBScript Server Start
stmt: (dbgmark "game_sv/EntityBase.bs" 1) -> (dbgmark "game_sv/EntityBase.bs" 1)
stmt: (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin)))))) -> (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin))))))
expr: () -> ()
expr: () -> ()
expr: (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))) -> (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 9) -> (dbgmark "game_sv/EntityBase.bs" 9)
stmt: (set! entity ent) -> (set! entity ent)
expr: ent -> ent
stmt: (linenum 10) -> (linenum 10)
expr: (set! spawnEntity sent) -> (set! spawnEntity sent)
expr: sent -> sent
BLK EntityBase, SA Yes, Capture=Yes
08652540 02 0109         dbgmark "game_sv/EntityBase.bs" 9 
08652543 5A 01           lload 1 
08652545 13 02           store entity 
08652547 05 0A           ln 10 
08652549 5A 00           lload 0 
0865254B 30              dup 
0865254C 13 03           store spawnEntity 
0865254E 1A              clearenv 
0865254F 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
08652E50 42              push_null 
08652E51 1A              clearenv 
08652E52 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
08653740 42              push_null 
08653741 1A              clearenv 
08653742 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
08654030 42              push_null 
08654031 1A              clearenv 
08654032 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
08654920 42              push_null 
08654921 1A              clearenv 
08654922 29              ret 

expr: (rlambda die (self other damage) (begin)) -> (rlambda die (self other damage) (begin))
expr: (begin) -> ()
BLK die, SA Yes, Capture=Yes
08655230 42              push_null 
08655231 1A              clearenv 
08655232 29              ret 

expr: (rlambda prethink (self) (begin)) -> (rlambda prethink (self) (begin))
expr: (begin) -> ()
BLK prethink, SA Yes, Capture=Yes
08655B20 42              push_null 
08655B21 1A              clearenv 
08655B22 29              ret 

stmt: (dbgmark "game_sv/EntityBase.bs" 21) -> (dbgmark "game_sv/EntityBase.bs" 21)
expr: (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin)))))) -> (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin))))))
expr: (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))) -> (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 26) -> (dbgmark "game_sv/EntityBase.bs" 26)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK ActorBase, SA Yes, Capture=Yes
08656410 02 011A         dbgmark "game_sv/EntityBase.bs" 26 
08656413 20              mark 
08656414 5A 01           lload 1 
08656416 5A 00           lload 0 
08656418 C20E            call_super 
0865641A 1A              clearenv 
0865641B 29              ret 

expr: (rlambda stand (self) (begin)) -> (rlambda stand (self) (begin))
expr: (begin) -> ()
BLK stand, SA Yes, Capture=Yes
08656D00 42              push_null 
08656D01 1A              clearenv 
08656D02 29              ret 

expr: (rlambda walk (self) (begin)) -> (rlambda walk (self) (begin))
expr: (begin) -> ()
BLK walk, SA Yes, Capture=Yes
086575F0 42              push_null 
086575F1 1A              clearenv 
086575F2 29              ret 

expr: (rlambda run (self) (begin)) -> (rlambda run (self) (begin))
expr: (begin) -> ()
BLK run, SA Yes, Capture=Yes
08657EE0 42              push_null 
08657EE1 1A              clearenv 
08657EE2 29              ret 

expr: (rlambda missile (self) (begin)) -> (rlambda missile (self) (begin))
expr: (begin) -> ()
BLK missile, SA Yes, Capture=Yes
086587D0 42              push_null 
086587D1 1A              clearenv 
086587D2 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
086590C0 42              push_null 
086590C1 1A              clearenv 
086590C2 29              ret 

BLK (null), SA No, Capture=Yes
08659210 02 0101         dbgmark "game_sv/EntityBase.bs" 1 
08659213 C202 020003     begin_class EntityBase () p 
08659218 42              push_null 
08659219 97 040003       tybind entity () p 
0865921D 42              push_null 
0865921E 97 050003       tybind spawnEntity () p 
08659222 10 06           push #!<svm_blk_t:086524B0> 
08659224 97 020703       tybind EntityBase #"(rr)r" p 
08659228 10 08           push #!<svm_blk_t:08652DD0> 
0865922A 97 090703       tybind use #"(rr)r" p 
0865922E 10 0A           push #!<svm_blk_t:086536C0> 
08659230 97 0B0703       tybind touch #"(rr)r" p 
08659234 10 0C           push #!<svm_blk_t:08653FB0> 
08659236 97 0D0703       tybind blocked #"(rr)r" p 
0865923A 10 0E           push #!<svm_blk_t:086548A0> 
0865923C 97 0F1003       tybind pain #"(rrr)r" p 
08659240 10 11           push #!<svm_blk_t:086551B0> 
08659242 97 121003       tybind die #"(rrr)r" p 
08659246 10 13           push #!<svm_blk_t:08655AA0> 
08659248 97 141503       tybind prethink #"(r)r" p 
0865924C C206            end_class 
0865924E 11              pop 
0865924F 02 0115         dbgmark "game_sv/EntityBase.bs" 21 
08659252 C202 160203     begin_class ActorBase EntityBase p 
08659257 10 17           push #!<svm_blk_t:08656390> 
08659259 97 160703       tybind ActorBase #"(rr)r" p 
0865925D 10 18           push #!<svm_blk_t:08656C80> 
0865925F 97 191503       tybind stand #"(r)r" p 
08659263 10 1A           push #!<svm_blk_t:08657570> 
08659265 97 1B1503       tybind walk #"(r)r" p 
08659269 10 1C           push #!<svm_blk_t:08657E60> 
0865926B 97 1D1503       tybind run #"(r)r" p 
0865926F 10 1E           push #!<svm_blk_t:08658750> 
08659271 97 1F1503       tybind missile #"(r)r" p 
08659275 10 20           push #!<svm_blk_t:08659040> 
08659277 97 211503       tybind melee #"(r)r" p 
0865927B C206            end_class 
0865927D 29              ret 

Add Slot 0865A380 entity r
Add Slot 0865A520 spawnEntity r
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 2) -> (dbgmark "game_sv/MonsterGeneric.bs" 2)
stmt: (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))))))) -> (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))))))
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 19) -> (dbgmark "game_sv/MonsterGeneric.bs" 19)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 21) -> (linenum 21)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0865D5F0 02 0113         dbgmark "game_sv/MonsterGeneric.bs" 19 
0865D5F3 2A 02           tymark #"()r" 
0865D5F5 23 03           call_s btRandom 
0865D5F7 10 04           push 0.100000 
0865D5F9 7A 111300       jmp_cond_b ge 0865D610 
0865D5FD 05 15           ln 21 
0865D5FF 2A 05           tymark #"(rrrrr)r" 
0865D601 5A 00           lload 0 
0865D603 48              push_2 
0865D604 5A 00           lload 0 
0865D606 64 06           loadindex_s snd_idle 
0865D608 59 6400         push_sv_f 1 
0865D60B 47              push_1 
0865D60C 23 07           call_s btSound 
0865D60E 1A              clearenv 
0865D60F 29              ret 
0865D610 42              push_null 
0865D611 1A              clearenv 
0865D612 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 30) -> (dbgmark "game_sv/MonsterGeneric.bs" 30)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 31) -> (linenum 31)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: self -> self
expr: "models/monsters/soldier/soldier.model" -> "models/monsters/soldier/soldier.model"
stmt: (linenum 34) -> (linenum 34)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 35) -> (linenum 35)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 37) -> (linenum 37)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (vector (unary - 16) (unary - 16) (unary - 24)) -> (vector (unary - 16) (unary - 16) (unary - 24))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 24) -> -24
expr: self -> self
stmt: (linenum 38) -> (linenum 38)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 39) -> (linenum 39)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 43) -> (linenum 43)
expr: (funcall btWalkmonsterStart self) -> (funcall btWalkmonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0865E000 02 011E         dbgmark "game_sv/MonsterGeneric.bs" 30 
0865E003 49              push_3 
0865E004 36              dup_f 
0865E005 5A 00           lload 0 
0865E007 65 02           storeindex_s solidtype 
0865E009 11              pop 
0865E00A 05 1F           ln 31 
0865E00C 48              push_2 
0865E00D 36              dup_f 
0865E00E 5A 00           lload 0 
0865E010 65 03           storeindex_s movetype 
0865E012 11              pop 
0865E013 05 21           ln 33 
0865E015 2A 04           tymark #"(rCs)r" 
0865E017 5A 00           lload 0 
0865E019 10 05           push "models/monsters/soldier/soldier.model" 
0865E01B 23 06           call_s btSetModel 
0865E01D 11              pop 
0865E01E 05 22           ln 34 
0865E020 10 07           push "sound/soldier/solsght1" 
0865E022 30              dup 
0865E023 5A 00           lload 0 
0865E025 65 08           storeindex_s snd_sight 
0865E027 11              pop 
0865E028 05 23           ln 35 
0865E02A 10 09           push "sound/soldier/solidle1" 
0865E02C 30              dup 
0865E02D 5A 00           lload 0 
0865E02F 65 0A           storeindex_s snd_idle 
0865E031 11              pop 
0865E032 05 25           ln 37 
0865E034 20              mark 
0865E035 58 10           push_sv_n 16 
0865E037 58 10           push_sv_n 16 
0865E039 58 18           push_sv_n 24 
0865E03B 84              vector 
0865E03C 30              dup 
0865E03D 5A 00           lload 0 
0865E03F 65 0B           storeindex_s mins 
0865E041 11              pop 
0865E042 05 26           ln 38 
0865E044 20              mark 
0865E045 57 10           push_sv_p 16 
0865E047 57 10           push_sv_p 16 
0865E049 57 28           push_sv_p 40 
0865E04B 84              vector 
0865E04C 30              dup 
0865E04D 5A 00           lload 0 
0865E04F 65 0C           storeindex_s maxs 
0865E051 11              pop 
0865E052 05 27           ln 39 
0865E054 57 1E           push_sv_p 30 
0865E056 36              dup_f 
0865E057 5A 00           lload 0 
0865E059 65 0D           storeindex_s health 
0865E05B 11              pop 
0865E05C 05 2B           ln 43 
0865E05E 2A 0E           tymark #"(r)r" 
0865E060 5A 00           lload 0 
0865E062 24 0F           tailcall_s btWalkmonsterStart 
0865E064 1A              clearenv 
0865E065 29              ret 

expr: (rlambda deinit (self) (begin)) -> (rlambda deinit (self) (begin))
expr: (begin) -> ()
BLK deinit, SA Yes, Capture=Yes
0865E950 42              push_null 
0865E951 1A              clearenv 
0865E952 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
0865F240 42              push_null 
0865F241 1A              clearenv 
0865F242 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
0865FB30 42              push_null 
0865FB31 1A              clearenv 
0865FB32 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
08660420 42              push_null 
08660421 1A              clearenv 
08660422 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
08660D10 42              push_null 
08660D11 1A              clearenv 
08660D12 29              ret 

expr: (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) -> (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 65) -> (dbgmark "game_sv/MonsterGeneric.bs" 65)
expr: (funcall BT_EntityRobotExplode self) -> (funcall BT_EntityRobotExplode self)
expr: self -> self
BLK die, SA Yes, Capture=Yes
08661610 02 0141         dbgmark "game_sv/MonsterGeneric.bs" 65 
08661613 2A 02           tymark #"(r)r" 
08661615 5A 02           lload 2 
08661617 24 03           tailcall_s BT_EntityRobotExplode 
08661619 1A              clearenv 
0866161A 29              ret 

expr: (rlambda cmdmsg (self other str) (begin)) -> (rlambda cmdmsg (self other str) (begin))
expr: (begin) -> ()
BLK cmdmsg, SA Yes, Capture=Yes
08661F00 42              push_null 
08661F01 1A              clearenv 
08661F02 29              ret 

expr: (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) -> (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 73) -> (dbgmark "game_sv/MonsterGeneric.bs" 73)
expr: (funcall btSetMove self stand1_mfi) -> (funcall btSetMove self stand1_mfi)
expr: self -> self
expr: stand1_mfi -> stand1_mfi
BLK stand, SA Yes, Capture=Yes
08662800 02 0149         dbgmark "game_sv/MonsterGeneric.bs" 73 
08662803 2A 02           tymark #"(rr)r" 
08662805 5A 00           lload 0 
08662807 12 03           load stand1_mfi 
08662809 24 04           tailcall_s btSetMove 
0866280B 1A              clearenv 
0866280C 29              ret 

expr: (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) -> (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 78) -> (dbgmark "game_sv/MonsterGeneric.bs" 78)
expr: (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)) -> (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
BLK walk1_random, SA Yes, Capture=Yes
08663130 02 014E         dbgmark "game_sv/MonsterGeneric.bs" 78 
08663133 2A 02           tymark #"()r" 
08663135 23 03           call_s btRandom 
08663137 10 04           push 0.100000 
08663139 7A 100800       jmp_cond_b le 08663145 
0866313D 2A 05           tymark #"(rr)r" 
0866313F 5A 00           lload 0 
08663141 12 06           load walk1_mfi 
08663143 24 07           tailcall_s btSetMove 
08663145 42              push_null 
08663146 1A              clearenv 
08663147 29              ret 

expr: (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) -> (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 84) -> (dbgmark "game_sv/MonsterGeneric.bs" 84)
expr: (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)) -> (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.500000 -> 0.500000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
expr: (funcall btSetMove self walk2_mfi) -> (funcall btSetMove self walk2_mfi)
expr: self -> self
expr: walk2_mfi -> walk2_mfi
BLK walk, SA Yes, Capture=Yes
08663A70 02 0154         dbgmark "game_sv/MonsterGeneric.bs" 84 
08663A73 2A 02           tymark #"()r" 
08663A75 23 03           call_s btRandom 
08663A77 59 3200         push_sv_f 0.5 
08663A7A 7A 100800       jmp_cond_b le 08663A86 
08663A7E 2A 04           tymark #"(rr)r" 
08663A80 5A 00           lload 0 
08663A82 12 05           load walk1_mfi 
08663A84 24 06           tailcall_s btSetMove 
08663A86 2A 04           tymark #"(rr)r" 
08663A88 5A 00           lload 0 
08663A8A 12 07           load walk2_mfi 
08663A8C 24 06           tailcall_s btSetMove 
08663A8E 1A              clearenv 
08663A8F 29              ret 

expr: (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) -> (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 91) -> (dbgmark "game_sv/MonsterGeneric.bs" 91)
expr: (funcall btSetMove self run_mfi) -> (funcall btSetMove self run_mfi)
expr: self -> self
expr: run_mfi -> run_mfi
BLK run, SA Yes, Capture=Yes
08664380 02 015B         dbgmark "game_sv/MonsterGeneric.bs" 91 
08664383 2A 02           tymark #"(rr)r" 
08664385 5A 00           lload 0 
08664387 12 03           load run_mfi 
08664389 24 04           tailcall_s btSetMove 
0866438B 1A              clearenv 
0866438C 29              ret 

expr: (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) -> (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 93) -> (dbgmark "game_sv/MonsterGeneric.bs" 93)
expr: (funcall btSetMove self attack1_mfi) -> (funcall btSetMove self attack1_mfi)
expr: self -> self
expr: attack1_mfi -> attack1_mfi
BLK missile, SA Yes, Capture=Yes
08664C80 02 015D         dbgmark "game_sv/MonsterGeneric.bs" 93 
08664C83 2A 02           tymark #"(rr)r" 
08664C85 5A 00           lload 0 
08664C87 12 03           load attack1_mfi 
08664C89 24 04           tailcall_s btSetMove 
08664C8B 1A              clearenv 
08664C8C 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 97) -> (dbgmark "game_sv/MonsterGeneric.bs" 97)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 101) -> (linenum 101)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 102) -> (linenum 102)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 105) -> (linenum 105)
expr: (funcall BT_FireBlaster self org dir 25 600 32) -> (funcall BT_FireBlaster self org dir 25 600 32)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 25 -> 25
expr: 600 -> 600
expr: 32 -> 32
BLK think_fire, SA Yes, Capture=Yes
086655B0 02 0161         dbgmark "game_sv/MonsterGeneric.bs" 97 
086655B3 42              push_null 
086655B4 16 02           lexbind org 
086655B6 42              push_null 
086655B7 16 03           lexbind dir 
086655B9 05 65           ln 101 
086655BB 2A 04           tymark #"(r)r" 
086655BD 5A 02           lload 2 
086655BF 23 05           call_s BT_AimOrigin 
086655C1 5B 01           lstore 1 
086655C3 05 66           ln 102 
086655C5 2A 06           tymark #"(rrr)r" 
086655C7 5A 02           lload 2 
086655C9 5A 02           lload 2 
086655CB 64 07           loadindex_s enemy 
086655CD 45 5802         push_sv 600 
086655D0 23 08           call_s BT_AimDirection 
086655D2 5B 00           lstore 0 
086655D4 05 69           ln 105 
086655D6 2A 09           tymark #"(rrrrrr)r" 
086655D8 5A 02           lload 2 
086655DA 5A 01           lload 1 
086655DC 5A 00           lload 0 
086655DE 57 19           push_sv_p 25 
086655E0 45 5802         push_sv 600 
086655E3 57 20           push_sv_p 32 
086655E5 24 0A           tailcall_s BT_FireBlaster 
086655E7 1A              clearenv 
086655E8 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
08665ED0 42              push_null 
08665ED1 1A              clearenv 
08665ED2 29              ret 

expr: (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))) -> (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 115) -> (dbgmark "game_sv/MonsterGeneric.bs" 115)
stmt: (funcall super ent sent) -> (funcall super ent sent)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
stmt: (linenum 118) -> (linenum 118)
expr: (methodcall this init ent) -> (methodcall this init ent)
expr: ent -> ent
expr: this -> this
BLK monster_generic2, SA Yes, Capture=Yes
086667F0 02 0173         dbgmark "game_sv/MonsterGeneric.bs" 115 
086667F3 20              mark 
086667F4 5A 01           lload 1 
086667F6 5A 00           lload 0 
086667F8 C20E            call_super 
086667FA 11              pop 
086667FB 05 76           ln 118 
086667FD 2A 02           tymark #"(r)r" 
086667FF 5A 01           lload 1 
08666801 19              push_self 
08666802 28 03           methodtailcall_s init 
08666804 1A              clearenv 
08666805 29              ret 

expr: (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))) -> (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))
stmt: (linenum 125) -> (linenum 125)
stmt: (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) -> (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)))
expr: (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)) -> (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))
expr: (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) -> (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self))))
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 128) (funcall think_idle self))) -> (lambda (self) (begin (linenum 128) (funcall think_idle self)))
expr: (begin (linenum 128) (funcall think_idle self)) -> (begin (linenum 128) (funcall think_idle self))
stmt: (linenum 128) -> (linenum 128)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08667A70 05 8080         ln 128 
08667A73 2A 01           tymark #"(r)r" 
08667A75 5A 00           lload 0 
08667A77 24 02           tailcall_s think_idle 
08667A79 1A              clearenv 
08667A7A 29              ret 

expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
stmt: (linenum 147) -> (linenum 147)
stmt: (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) -> (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 150) (funcall think_idle self))) -> (lambda (self) (begin (linenum 150) (funcall think_idle self)))
expr: (begin (linenum 150) (funcall think_idle self)) -> (begin (linenum 150) (funcall think_idle self))
stmt: (linenum 150) -> (linenum 150)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08668360 05 8096         ln 150 
08668363 2A 01           tymark #"(r)r" 
08668365 5A 00           lload 0 
08668367 24 02           tailcall_s think_idle 
08668369 1A              clearenv 
0866836A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 walk1_random) -> (array btaiWalk 0 walk1_random)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: walk1_random -> walk1_random
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 169) -> (linenum 169)
stmt: (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) -> (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 172) (funcall think_idle self))) -> (lambda (self) (begin (linenum 172) (funcall think_idle self)))
expr: (begin (linenum 172) (funcall think_idle self)) -> (begin (linenum 172) (funcall think_idle self))
stmt: (linenum 172) -> (linenum 172)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08668C50 05 80AC         ln 172 
08668C53 2A 01           tymark #"(r)r" 
08668C55 5A 00           lload 0 
08668C57 24 02           tailcall_s think_idle 
08668C59 1A              clearenv 
08668C5A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 180) -> (linenum 180)
stmt: (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) -> (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)))
expr: (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)) -> (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))
expr: (array btaiRun 10 null) -> (array btaiRun 10 null)
expr: btaiRun -> btaiRun
expr: 10 -> 10
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
stmt: (linenum 188) -> (linenum 188)
stmt: (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) -> (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)))
expr: (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)) -> (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))
expr: (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) -> (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self))))
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 191) (funcall think_fire self))) -> (lambda (self) (begin (linenum 191) (funcall think_fire self)))
expr: (begin (linenum 191) (funcall think_fire self)) -> (begin (linenum 191) (funcall think_fire self))
stmt: (linenum 191) -> (linenum 191)
expr: (funcall think_fire self) -> (funcall think_fire self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08669540 05 80BF         ln 191 
08669543 2A 01           tymark #"(r)r" 
08669545 5A 00           lload 0 
08669547 24 02           tailcall_s think_fire 
08669549 1A              clearenv 
0866954A 29              ret 

expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
stmt: (linenum 200) -> (linenum 200)
stmt: (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) -> (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand))
expr: (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand) -> (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)
expr: "stand1" -> "stand1"
expr: 0 -> 0
expr: 30 -> 30
expr: stand1_mf -> stand1_mf
expr: stand -> stand
stmt: (linenum 203) -> (linenum 203)
stmt: (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) -> (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk))
expr: (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk) -> (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)
expr: "walk1" -> "walk1"
expr: 0 -> 0
expr: 32 -> 32
expr: walk1_mf -> walk1_mf
expr: walk -> walk
stmt: (linenum 206) -> (linenum 206)
stmt: (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) -> (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk))
expr: (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk) -> (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)
expr: "walk2" -> "walk2"
expr: 0 -> 0
expr: 10 -> 10
expr: walk2_mf -> walk2_mf
expr: walk -> walk
stmt: (linenum 209) -> (linenum 209)
stmt: (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) -> (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run))
expr: (funcall btDyBuildMove "run" 2 8 run_mf run) -> (funcall btDyBuildMove "run" 2 8 run_mf run)
expr: "run" -> "run"
expr: 2 -> 2
expr: 8 -> 8
expr: run_mf -> run_mf
expr: run -> run
stmt: (linenum 212) -> (linenum 212)
stmt: (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) -> (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run))
expr: (funcall btDyBuildMove "attack1" 2 8 attack1_mf run) -> (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)
expr: "attack1" -> "attack1"
expr: 2 -> 2
expr: 8 -> 8
expr: attack1_mf -> attack1_mf
expr: run -> run
stmt: (linenum 216) -> (linenum 216)
expr: (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)) -> (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))
expr: "This A = %p, run=%p, this.run=%p\n" -> "This A = %p, run=%p, this.run=%p\n"
expr: this -> this
expr: run -> run
expr: (objref this run) -> (objref this run)
expr: this -> this
BLK (null), SA No, Capture=Yes
086696D0 05 7D           ln 125 
086696D2 20              mark 
086696D3 20              mark 
086696D4 12 01           load btaiStand 
086696D6 46              push_0 
086696D7 10 02           push #!<svm_blk_t:086679F0> 
086696D9 80              array 
086696DA 20              mark 
086696DB 12 01           load btaiStand 
086696DD 46              push_0 
086696DE 42              push_null 
086696DF 80              array 
086696E0 20              mark 
086696E1 12 01           load btaiStand 
086696E3 46              push_0 
086696E4 42              push_null 
086696E5 80              array 
086696E6 20              mark 
086696E7 12 01           load btaiStand 
086696E9 46              push_0 
086696EA 42              push_null 
086696EB 80              array 
086696EC 20              mark 
086696ED 12 01           load btaiStand 
086696EF 46              push_0 
086696F0 42              push_null 
086696F1 80              array 
086696F2 20              mark 
086696F3 12 01           load btaiStand 
086696F5 46              push_0 
086696F6 42              push_null 
086696F7 80              array 
086696F8 20              mark 
086696F9 12 01           load btaiStand 
086696FB 46              push_0 
086696FC 42              push_null 
086696FD 80              array 
086696FE 20              mark 
086696FF 12 01           load btaiStand 
08669701 46              push_0 
08669702 42              push_null 
08669703 80              array 
08669704 20              mark 
08669705 12 01           load btaiStand 
08669707 46              push_0 
08669708 42              push_null 
08669709 80              array 
0866970A 20              mark 
0866970B 12 01           load btaiStand 
0866970D 46              push_0 
0866970E 42              push_null 
0866970F 80              array 
08669710 20              mark 
08669711 12 01           load btaiStand 
08669713 46              push_0 
08669714 42              push_null 
08669715 80              array 
08669716 20              mark 
08669717 12 01           load btaiStand 
08669719 46              push_0 
0866971A 42              push_null 
0866971B 80              array 
0866971C 20              mark 
0866971D 12 01           load btaiStand 
0866971F 46              push_0 
08669720 42              push_null 
08669721 80              array 
08669722 20              mark 
08669723 12 01           load btaiStand 
08669725 46              push_0 
08669726 42              push_null 
08669727 80              array 
08669728 20              mark 
08669729 12 01           load btaiStand 
0866972B 46              push_0 
0866972C 42              push_null 
0866972D 80              array 
0866972E 20              mark 
0866972F 12 01           load btaiStand 
08669731 46              push_0 
08669732 42              push_null 
08669733 80              array 
08669734 20              mark 
08669735 12 01           load btaiStand 
08669737 46              push_0 
08669738 42              push_null 
08669739 80              array 
0866973A 20              mark 
0866973B 12 01           load btaiStand 
0866973D 46              push_0 
0866973E 42              push_null 
0866973F 80              array 
08669740 20              mark 
08669741 12 01           load btaiStand 
08669743 46              push_0 
08669744 42              push_null 
08669745 80              array 
08669746 20              mark 
08669747 12 01           load btaiStand 
08669749 46              push_0 
0866974A 42              push_null 
0866974B 80              array 
0866974C 20              mark 
0866974D 12 01           load btaiStand 
0866974F 46              push_0 
08669750 42              push_null 
08669751 80              array 
08669752 20              mark 
08669753 12 01           load btaiStand 
08669755 46              push_0 
08669756 42              push_null 
08669757 80              array 
08669758 20              mark 
08669759 12 01           load btaiStand 
0866975B 46              push_0 
0866975C 42              push_null 
0866975D 80              array 
0866975E 20              mark 
0866975F 12 01           load btaiStand 
08669761 46              push_0 
08669762 42              push_null 
08669763 80              array 
08669764 20              mark 
08669765 12 01           load btaiStand 
08669767 46              push_0 
08669768 42              push_null 
08669769 80              array 
0866976A 20              mark 
0866976B 12 01           load btaiStand 
0866976D 46              push_0 
0866976E 42              push_null 
0866976F 80              array 
08669770 20              mark 
08669771 12 01           load btaiStand 
08669773 46              push_0 
08669774 42              push_null 
08669775 80              array 
08669776 20              mark 
08669777 12 01           load btaiStand 
08669779 46              push_0 
0866977A 42              push_null 
0866977B 80              array 
0866977C 20              mark 
0866977D 12 01           load btaiStand 
0866977F 46              push_0 
08669780 42              push_null 
08669781 80              array 
08669782 20              mark 
08669783 12 01           load btaiStand 
08669785 46              push_0 
08669786 42              push_null 
08669787 80              array 
08669788 20              mark 
08669789 12 01           load btaiStand 
0866978B 46              push_0 
0866978C 42              push_null 
0866978D 80              array 
0866978E 80              array 
0866978F 13 03           store stand1_mf 
08669791 05 8093         ln 147 
08669794 20              mark 
08669795 20              mark 
08669796 12 04           load btaiWalk 
08669798 49              push_3 
08669799 10 05           push #!<svm_blk_t:086682E0> 
0866979B 80              array 
0866979C 20              mark 
0866979D 12 04           load btaiWalk 
0866979F 4B              push_5 
086697A0 42              push_null 
086697A1 80              array 
086697A2 20              mark 
086697A3 12 04           load btaiWalk 
086697A5 49              push_3 
086697A6 42              push_null 
086697A7 80              array 
086697A8 20              mark 
086697A9 12 04           load btaiWalk 
086697AB 48              push_2 
086697AC 42              push_null 
086697AD 80              array 
086697AE 20              mark 
086697AF 12 04           load btaiWalk 
086697B1 48              push_2 
086697B2 42              push_null 
086697B3 80              array 
086697B4 20              mark 
086697B5 12 04           load btaiWalk 
086697B7 48              push_2 
086697B8 42              push_null 
086697B9 80              array 
086697BA 20              mark 
086697BB 12 04           load btaiWalk 
086697BD 4B              push_5 
086697BE 42              push_null 
086697BF 80              array 
086697C0 20              mark 
086697C1 12 04           load btaiWalk 
086697C3 4B              push_5 
086697C4 42              push_null 
086697C5 80              array 
086697C6 20              mark 
086697C7 12 04           load btaiWalk 
086697C9 48              push_2 
086697CA 42              push_null 
086697CB 80              array 
086697CC 20              mark 
086697CD 12 04           load btaiWalk 
086697CF 46              push_0 
086697D0 12 06           load walk1_random 
086697D2 80              array 
086697D3 20              mark 
086697D4 12 04           load btaiWalk 
086697D6 46              push_0 
086697D7 42              push_null 
086697D8 80              array 
086697D9 20              mark 
086697DA 12 04           load btaiWalk 
086697DC 46              push_0 
086697DD 42              push_null 
086697DE 80              array 
086697DF 20              mark 
086697E0 12 04           load btaiWalk 
086697E2 46              push_0 
086697E3 42              push_null 
086697E4 80              array 
086697E5 20              mark 
086697E6 12 04           load btaiWalk 
086697E8 46              push_0 
086697E9 42              push_null 
086697EA 80              array 
086697EB 20              mark 
086697EC 12 04           load btaiWalk 
086697EE 46              push_0 
086697EF 42              push_null 
086697F0 80              array 
086697F1 20              mark 
086697F2 12 04           load btaiWalk 
086697F4 46              push_0 
086697F5 42              push_null 
086697F6 80              array 
086697F7 20              mark 
086697F8 12 04           load btaiWalk 
086697FA 46              push_0 
086697FB 42              push_null 
086697FC 80              array 
086697FD 20              mark 
086697FE 12 04           load btaiWalk 
08669800 46              push_0 
08669801 42              push_null 
08669802 80              array 
08669803 20              mark 
08669804 12 04           load btaiWalk 
08669806 46              push_0 
08669807 42              push_null 
08669808 80              array 
08669809 20              mark 
0866980A 12 04           load btaiWalk 
0866980C 46              push_0 
0866980D 42              push_null 
0866980E 80              array 
0866980F 20              mark 
08669810 12 04           load btaiWalk 
08669812 46              push_0 
08669813 42              push_null 
08669814 80              array 
08669815 20              mark 
08669816 12 04           load btaiWalk 
08669818 46              push_0 
08669819 42              push_null 
0866981A 80              array 
0866981B 20              mark 
0866981C 12 04           load btaiWalk 
0866981E 46              push_0 
0866981F 42              push_null 
08669820 80              array 
08669821 20              mark 
08669822 12 04           load btaiWalk 
08669824 46              push_0 
08669825 42              push_null 
08669826 80              array 
08669827 20              mark 
08669828 12 04           load btaiWalk 
0866982A 46              push_0 
0866982B 42              push_null 
0866982C 80              array 
0866982D 20              mark 
0866982E 12 04           load btaiWalk 
08669830 46              push_0 
08669831 42              push_null 
08669832 80              array 
08669833 20              mark 
08669834 12 04           load btaiWalk 
08669836 46              push_0 
08669837 42              push_null 
08669838 80              array 
08669839 20              mark 
0866983A 12 04           load btaiWalk 
0866983C 46              push_0 
0866983D 42              push_null 
0866983E 80              array 
0866983F 20              mark 
08669840 12 04           load btaiWalk 
08669842 46              push_0 
08669843 42              push_null 
08669844 80              array 
08669845 20              mark 
08669846 12 04           load btaiWalk 
08669848 46              push_0 
08669849 42              push_null 
0866984A 80              array 
0866984B 20              mark 
0866984C 12 04           load btaiWalk 
0866984E 46              push_0 
0866984F 42              push_null 
08669850 80              array 
08669851 20              mark 
08669852 12 04           load btaiWalk 
08669854 46              push_0 
08669855 42              push_null 
08669856 80              array 
08669857 80              array 
08669858 13 07           store walk1_mf 
0866985A 05 80A9         ln 169 
0866985D 20              mark 
0866985E 20              mark 
0866985F 12 04           load btaiWalk 
08669861 49              push_3 
08669862 10 08           push #!<svm_blk_t:08668BD0> 
08669864 80              array 
08669865 20              mark 
08669866 12 04           load btaiWalk 
08669868 4B              push_5 
08669869 42              push_null 
0866986A 80              array 
0866986B 20              mark 
0866986C 12 04           load btaiWalk 
0866986E 49              push_3 
0866986F 42              push_null 
08669870 80              array 
08669871 20              mark 
08669872 12 04           load btaiWalk 
08669874 48              push_2 
08669875 42              push_null 
08669876 80              array 
08669877 20              mark 
08669878 12 04           load btaiWalk 
0866987A 48              push_2 
0866987B 42              push_null 
0866987C 80              array 
0866987D 20              mark 
0866987E 12 04           load btaiWalk 
08669880 48              push_2 
08669881 42              push_null 
08669882 80              array 
08669883 20              mark 
08669884 12 04           load btaiWalk 
08669886 4B              push_5 
08669887 42              push_null 
08669888 80              array 
08669889 20              mark 
0866988A 12 04           load btaiWalk 
0866988C 4B              push_5 
0866988D 42              push_null 
0866988E 80              array 
0866988F 20              mark 
08669890 12 04           load btaiWalk 
08669892 48              push_2 
08669893 42              push_null 
08669894 80              array 
08669895 20              mark 
08669896 12 04           load btaiWalk 
08669898 46              push_0 
08669899 42              push_null 
0866989A 80              array 
0866989B 80              array 
0866989C 13 09           store walk2_mf 
0866989E 05 80B4         ln 180 
086698A1 20              mark 
086698A2 20              mark 
086698A3 12 0A           load btaiRun 
086698A5 57 0A           push_sv_p 10 
086698A7 42              push_null 
086698A8 80              array 
086698A9 20              mark 
086698AA 12 0A           load btaiRun 
086698AC 57 0B           push_sv_p 11 
086698AE 42              push_null 
086698AF 80              array 
086698B0 20              mark 
086698B1 12 0A           load btaiRun 
086698B3 57 0B           push_sv_p 11 
086698B5 42              push_null 
086698B6 80              array 
086698B7 20              mark 
086698B8 12 0A           load btaiRun 
086698BA 57 0F           push_sv_p 15 
086698BC 42              push_null 
086698BD 80              array 
086698BE 20              mark 
086698BF 12 0A           load btaiRun 
086698C1 57 0B           push_sv_p 11 
086698C3 42              push_null 
086698C4 80              array 
086698C5 20              mark 
086698C6 12 0A           load btaiRun 
086698C8 57 0F           push_sv_p 15 
086698CA 42              push_null 
086698CB 80              array 
086698CC 20              mark 
086698CD 12 0A           load btaiRun 
086698CF 57 0F           push_sv_p 15 
086698D1 42              push_null 
086698D2 80              array 
086698D3 80              array 
086698D4 13 0B           store run_mf 
086698D6 05 80BC         ln 188 
086698D9 20              mark 
086698DA 20              mark 
086698DB 12 0C           load btaiCharge 
086698DD 46              push_0 
086698DE 10 0D           push #!<svm_blk_t:086694C0> 
086698E0 80              array 
086698E1 20              mark 
086698E2 12 0C           load btaiCharge 
086698E4 46              push_0 
086698E5 42              push_null 
086698E6 80              array 
086698E7 20              mark 
086698E8 12 0C           load btaiCharge 
086698EA 46              push_0 
086698EB 42              push_null 
086698EC 80              array 
086698ED 20              mark 
086698EE 12 0C           load btaiCharge 
086698F0 46              push_0 
086698F1 42              push_null 
086698F2 80              array 
086698F3 20              mark 
086698F4 12 0C           load btaiCharge 
086698F6 46              push_0 
086698F7 42              push_null 
086698F8 80              array 
086698F9 20              mark 
086698FA 12 0C           load btaiCharge 
086698FC 46              push_0 
086698FD 42              push_null 
086698FE 80              array 
086698FF 20              mark 
08669900 12 0C           load btaiCharge 
08669902 46              push_0 
08669903 42              push_null 
08669904 80              array 
08669905 20              mark 
08669906 12 0C           load btaiCharge 
08669908 46              push_0 
08669909 42              push_null 
0866990A 80              array 
0866990B 20              mark 
0866990C 12 0C           load btaiCharge 
0866990E 46              push_0 
0866990F 42              push_null 
08669910 80              array 
08669911 20              mark 
08669912 12 0C           load btaiCharge 
08669914 46              push_0 
08669915 42              push_null 
08669916 80              array 
08669917 20              mark 
08669918 12 0C           load btaiCharge 
0866991A 46              push_0 
0866991B 42              push_null 
0866991C 80              array 
0866991D 20              mark 
0866991E 12 0C           load btaiCharge 
08669920 46              push_0 
08669921 42              push_null 
08669922 80              array 
08669923 80              array 
08669924 13 0E           store attack1_mf 
08669926 05 80C8         ln 200 
08669929 2A 0F           tymark #"(Csrrrr)r" 
0866992B 10 10           push "stand1" 
0866992D 46              push_0 
0866992E 57 1E           push_sv_p 30 
08669930 12 03           load stand1_mf 
08669932 12 11           load stand 
08669934 23 12           call_s btDyBuildMove 
08669936 13 13           store stand1_mfi 
08669938 05 80CB         ln 203 
0866993B 2A 0F           tymark #"(Csrrrr)r" 
0866993D 10 14           push "walk1" 
0866993F 46              push_0 
08669940 57 20           push_sv_p 32 
08669942 12 07           load walk1_mf 
08669944 12 15           load walk 
08669946 23 12           call_s btDyBuildMove 
08669948 13 16           store walk1_mfi 
0866994A 05 80CE         ln 206 
0866994D 2A 0F           tymark #"(Csrrrr)r" 
0866994F 10 17           push "walk2" 
08669951 46              push_0 
08669952 57 0A           push_sv_p 10 
08669954 12 09           load walk2_mf 
08669956 12 15           load walk 
08669958 23 12           call_s btDyBuildMove 
0866995A 13 18           store walk2_mfi 
0866995C 05 80D1         ln 209 
0866995F 2A 0F           tymark #"(Csrrrr)r" 
08669961 10 19           push "run" 
08669963 48              push_2 
08669964 57 08           push_sv_p 8 
08669966 12 0B           load run_mf 
08669968 12 1A           load run 
0866996A 23 12           call_s btDyBuildMove 
0866996C 13 1B           store run_mfi 
0866996E 05 80D4         ln 212 
08669971 2A 0F           tymark #"(Csrrrr)r" 
08669973 10 1C           push "attack1" 
08669975 48              push_2 
08669976 57 08           push_sv_p 8 
08669978 12 0E           load attack1_mf 
0866997A 12 1A           load run 
0866997C 23 12           call_s btDyBuildMove 
0866997E 13 1D           store attack1_mfi 
08669980 05 80D8         ln 216 
08669983 2A 1E           tymark #"(Csrrr)r" 
08669985 10 1F           push "This A = %p, run=%p, this.run=%p\n" 
08669987 19              push_self 
08669988 12 1A           load run 
0866998A 19              push_self 
0866998B 64 1A           loadindex_s run 
0866998D 24 20           tailcall_s gc_printf 
0866998F 29              ret 

stmt: (linenum 222) -> (linenum 222)
stmt: (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))) -> (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 226) -> (dbgmark "game_sv/MonsterGeneric.bs" 226)
stmt: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: "passive_sheep: ctor\n" -> "passive_sheep: ctor\n"
stmt: (linenum 227) -> (linenum 227)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_sheep, SA Yes, Capture=Yes
0866A280 02 0180E2       dbgmark "game_sv/MonsterGeneric.bs" 226 
0866A284 2A 02           tymark #"(Cs)r" 
0866A286 10 03           push "passive_sheep: ctor\n" 
0866A288 23 04           call_s gc_printf 
0866A28A 11              pop 
0866A28B 05 80E3         ln 227 
0866A28E 20              mark 
0866A28F 5A 01           lload 1 
0866A291 5A 00           lload 0 
0866A293 C20E            call_super 
0866A295 1A              clearenv 
0866A296 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 232) -> (dbgmark "game_sv/MonsterGeneric.bs" 232)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 234) -> (linenum 234)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0866ABC0 02 0180E8       dbgmark "game_sv/MonsterGeneric.bs" 232 
0866ABC4 2A 02           tymark #"()r" 
0866ABC6 23 03           call_s btRandom 
0866ABC8 10 04           push 0.100000 
0866ABCA 7A 111400       jmp_cond_b ge 0866ABE2 
0866ABCE 05 80EA         ln 234 
0866ABD1 2A 05           tymark #"(rrrrr)r" 
0866ABD3 5A 00           lload 0 
0866ABD5 48              push_2 
0866ABD6 5A 00           lload 0 
0866ABD8 64 06           loadindex_s snd_idle 
0866ABDA 59 6400         push_sv_f 1 
0866ABDD 47              push_1 
0866ABDE 23 07           call_s btSound 
0866ABE0 1A              clearenv 
0866ABE1 29              ret 
0866ABE2 42              push_null 
0866ABE3 1A              clearenv 
0866ABE4 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 241) -> (dbgmark "game_sv/MonsterGeneric.bs" 241)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 243) -> (linenum 243)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 244) -> (linenum 244)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 246) -> (linenum 246)
stmt: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: self -> self
expr: "models/monsters/sheep/sheep.model" -> "models/monsters/sheep/sheep.model"
stmt: (linenum 247) -> (linenum 247)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 248) -> (linenum 248)
stmt: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: "sound/animal/sheep_idle1" -> "sound/animal/sheep_idle1"
expr: self -> self
stmt: (linenum 250) -> (linenum 250)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 251) -> (linenum 251)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 252) -> (linenum 252)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 256) -> (linenum 256)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0866B530 02 0180F1       dbgmark "game_sv/MonsterGeneric.bs" 241 
0866B534 2A 02           tymark #"(Csr)r" 
0866B536 10 03           push "monster_sheep: init A self=%p\n" 
0866B538 5A 00           lload 0 
0866B53A 23 04           call_s gc_printf 
0866B53C 11              pop 
0866B53D 05 80F3         ln 243 
0866B540 49              push_3 
0866B541 36              dup_f 
0866B542 5A 00           lload 0 
0866B544 65 05           storeindex_s solidtype 
0866B546 11              pop 
0866B547 05 80F4         ln 244 
0866B54A 48              push_2 
0866B54B 36              dup_f 
0866B54C 5A 00           lload 0 
0866B54E 65 06           storeindex_s movetype 
0866B550 11              pop 
0866B551 05 80F6         ln 246 
0866B554 2A 07           tymark #"(rCs)r" 
0866B556 5A 00           lload 0 
0866B558 10 08           push "models/monsters/sheep/sheep.model" 
0866B55A 23 09           call_s btSetModel 
0866B55C 11              pop 
0866B55D 05 80F7         ln 247 
0866B560 10 0A           push "sound/soldier/solsght1" 
0866B562 30              dup 
0866B563 5A 00           lload 0 
0866B565 65 0B           storeindex_s snd_sight 
0866B567 11              pop 
0866B568 05 80F8         ln 248 
0866B56B 10 0C           push "sound/animal/sheep_idle1" 
0866B56D 30              dup 
0866B56E 5A 00           lload 0 
0866B570 65 0D           storeindex_s snd_idle 
0866B572 11              pop 
0866B573 05 80FA         ln 250 
0866B576 20              mark 
0866B577 58 10           push_sv_n 16 
0866B579 58 10           push_sv_n 16 
0866B57B 58 10           push_sv_n 16 
0866B57D 84              vector 
0866B57E 30              dup 
0866B57F 5A 00           lload 0 
0866B581 65 0E           storeindex_s mins 
0866B583 11              pop 
0866B584 05 80FB         ln 251 
0866B587 20              mark 
0866B588 57 10           push_sv_p 16 
0866B58A 57 10           push_sv_p 16 
0866B58C 57 28           push_sv_p 40 
0866B58E 84              vector 
0866B58F 30              dup 
0866B590 5A 00           lload 0 
0866B592 65 0F           storeindex_s maxs 
0866B594 11              pop 
0866B595 05 80FC         ln 252 
0866B598 57 1E           push_sv_p 30 
0866B59A 36              dup_f 
0866B59B 5A 00           lload 0 
0866B59D 65 10           storeindex_s health 
0866B59F 11              pop 
0866B5A0 05 8100         ln 256 
0866B5A3 2A 11           tymark #"(r)r" 
0866B5A5 5A 00           lload 0 
0866B5A7 24 12           tailcall_s btWalkPassiveStart 
0866B5A9 1A              clearenv 
0866B5AA 29              ret 

stmt: (linenum 260) -> (linenum 260)
stmt: (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))) -> (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 264) -> (dbgmark "game_sv/MonsterGeneric.bs" 264)
stmt: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: "passive_pig: ctor\n" -> "passive_pig: ctor\n"
stmt: (linenum 265) -> (linenum 265)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_pig, SA Yes, Capture=Yes
0866BEA0 02 018108       dbgmark "game_sv/MonsterGeneric.bs" 264 
0866BEA4 2A 02           tymark #"(Cs)r" 
0866BEA6 10 03           push "passive_pig: ctor\n" 
0866BEA8 23 04           call_s gc_printf 
0866BEAA 11              pop 
0866BEAB 05 8109         ln 265 
0866BEAE 20              mark 
0866BEAF 5A 01           lload 1 
0866BEB1 5A 00           lload 0 
0866BEB3 C20E            call_super 
0866BEB5 1A              clearenv 
0866BEB6 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 270) -> (dbgmark "game_sv/MonsterGeneric.bs" 270)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 272) -> (linenum 272)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0866C7E0 02 01810E       dbgmark "game_sv/MonsterGeneric.bs" 270 
0866C7E4 2A 02           tymark #"()r" 
0866C7E6 23 03           call_s btRandom 
0866C7E8 10 04           push 0.100000 
0866C7EA 7A 111400       jmp_cond_b ge 0866C802 
0866C7EE 05 8110         ln 272 
0866C7F1 2A 05           tymark #"(rrrrr)r" 
0866C7F3 5A 00           lload 0 
0866C7F5 48              push_2 
0866C7F6 5A 00           lload 0 
0866C7F8 64 06           loadindex_s snd_idle 
0866C7FA 59 6400         push_sv_f 1 
0866C7FD 47              push_1 
0866C7FE 23 07           call_s btSound 
0866C800 1A              clearenv 
0866C801 29              ret 
0866C802 42              push_null 
0866C803 1A              clearenv 
0866C804 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 279) -> (dbgmark "game_sv/MonsterGeneric.bs" 279)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 281) -> (linenum 281)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 282) -> (linenum 282)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 284) -> (linenum 284)
stmt: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: self -> self
expr: "models/monsters/pig/pig.model" -> "models/monsters/pig/pig.model"
stmt: (linenum 285) -> (linenum 285)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 286) -> (linenum 286)
stmt: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: "sound/animal/pig0" -> "sound/animal/pig0"
expr: self -> self
stmt: (linenum 288) -> (linenum 288)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 289) -> (linenum 289)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 290) -> (linenum 290)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 294) -> (linenum 294)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0866D130 02 018117       dbgmark "game_sv/MonsterGeneric.bs" 279 
0866D134 2A 02           tymark #"(Csr)r" 
0866D136 10 03           push "monster_sheep: init A self=%p\n" 
0866D138 5A 00           lload 0 
0866D13A 23 04           call_s gc_printf 
0866D13C 11              pop 
0866D13D 05 8119         ln 281 
0866D140 49              push_3 
0866D141 36              dup_f 
0866D142 5A 00           lload 0 
0866D144 65 05           storeindex_s solidtype 
0866D146 11              pop 
0866D147 05 811A         ln 282 
0866D14A 48              push_2 
0866D14B 36              dup_f 
0866D14C 5A 00           lload 0 
0866D14E 65 06           storeindex_s movetype 
0866D150 11              pop 
0866D151 05 811C         ln 284 
0866D154 2A 07           tymark #"(rCs)r" 
0866D156 5A 00           lload 0 
0866D158 10 08           push "models/monsters/pig/pig.model" 
0866D15A 23 09           call_s btSetModel 
0866D15C 11              pop 
0866D15D 05 811D         ln 285 
0866D160 10 0A           push "sound/soldier/solsght1" 
0866D162 30              dup 
0866D163 5A 00           lload 0 
0866D165 65 0B           storeindex_s snd_sight 
0866D167 11              pop 
0866D168 05 811E         ln 286 
0866D16B 10 0C           push "sound/animal/pig0" 
0866D16D 30              dup 
0866D16E 5A 00           lload 0 
0866D170 65 0D           storeindex_s snd_idle 
0866D172 11              pop 
0866D173 05 8120         ln 288 
0866D176 20              mark 
0866D177 58 10           push_sv_n 16 
0866D179 58 10           push_sv_n 16 
0866D17B 58 10           push_sv_n 16 
0866D17D 84              vector 
0866D17E 30              dup 
0866D17F 5A 00           lload 0 
0866D181 65 0E           storeindex_s mins 
0866D183 11              pop 
0866D184 05 8121         ln 289 
0866D187 20              mark 
0866D188 57 10           push_sv_p 16 
0866D18A 57 10           push_sv_p 16 
0866D18C 57 28           push_sv_p 40 
0866D18E 84              vector 
0866D18F 30              dup 
0866D190 5A 00           lload 0 
0866D192 65 0F           storeindex_s maxs 
0866D194 11              pop 
0866D195 05 8122         ln 290 
0866D198 57 1E           push_sv_p 30 
0866D19A 36              dup_f 
0866D19B 5A 00           lload 0 
0866D19D 65 10           storeindex_s health 
0866D19F 11              pop 
0866D1A0 05 8126         ln 294 
0866D1A3 2A 11           tymark #"(r)r" 
0866D1A5 5A 00           lload 0 
0866D1A7 24 12           tailcall_s btWalkPassiveStart 
0866D1A9 1A              clearenv 
0866D1AA 29              ret 

stmt: (linenum 298) -> (linenum 298)
stmt: (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))))))) -> (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))))))
expr: (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))) -> (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 303) -> (dbgmark "game_sv/MonsterGeneric.bs" 303)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_army, SA Yes, Capture=Yes
0866DA90 02 01812F       dbgmark "game_sv/MonsterGeneric.bs" 303 
0866DA94 20              mark 
0866DA95 5A 01           lload 1 
0866DA97 5A 00           lload 0 
0866DA99 C20E            call_super 
0866DA9B 1A              clearenv 
0866DA9C 29              ret 

stmt: (linenum 308) -> (linenum 308)
expr: (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))))) -> (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))))))
expr: (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))) -> (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 312) -> (dbgmark "game_sv/MonsterGeneric.bs" 312)
stmt: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: "monster_enemyhead: ctor\n" -> "monster_enemyhead: ctor\n"
stmt: (linenum 313) -> (linenum 313)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_enemyhead, SA Yes, Capture=Yes
0866E390 02 018138       dbgmark "game_sv/MonsterGeneric.bs" 312 
0866E394 2A 02           tymark #"(Cs)r" 
0866E396 10 03           push "monster_enemyhead: ctor\n" 
0866E398 23 04           call_s gc_printf 
0866E39A 11              pop 
0866E39B 05 8139         ln 313 
0866E39E 20              mark 
0866E39F 5A 01           lload 1 
0866E3A1 5A 00           lload 0 
0866E3A3 C20E            call_super 
0866E3A5 1A              clearenv 
0866E3A6 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 318) -> (dbgmark "game_sv/MonsterGeneric.bs" 318)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 320) -> (linenum 320)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0866ECD0 02 01813E       dbgmark "game_sv/MonsterGeneric.bs" 318 
0866ECD4 2A 02           tymark #"()r" 
0866ECD6 23 03           call_s btRandom 
0866ECD8 10 04           push 0.100000 
0866ECDA 7A 111400       jmp_cond_b ge 0866ECF2 
0866ECDE 05 8140         ln 320 
0866ECE1 2A 05           tymark #"(rrrrr)r" 
0866ECE3 5A 00           lload 0 
0866ECE5 48              push_2 
0866ECE6 5A 00           lload 0 
0866ECE8 64 06           loadindex_s snd_idle 
0866ECEA 59 6400         push_sv_f 1 
0866ECED 47              push_1 
0866ECEE 23 07           call_s btSound 
0866ECF0 1A              clearenv 
0866ECF1 29              ret 
0866ECF2 42              push_null 
0866ECF3 1A              clearenv 
0866ECF4 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 327) -> (dbgmark "game_sv/MonsterGeneric.bs" 327)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 331) -> (linenum 331)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 332) -> (linenum 332)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 335) -> (linenum 335)
expr: (funcall BT_FireRocket self org dir 60 600 160) -> (funcall BT_FireRocket self org dir 60 600 160)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 60 -> 60
expr: 600 -> 600
expr: 160 -> 160
BLK think_fire, SA Yes, Capture=Yes
08667950 02 018147       dbgmark "game_sv/MonsterGeneric.bs" 327 
08667954 42              push_null 
08667955 16 02           lexbind org 
08667957 42              push_null 
08667958 16 03           lexbind dir 
0866795A 05 814B         ln 331 
0866795D 2A 04           tymark #"(r)r" 
0866795F 5A 02           lload 2 
08667961 23 05           call_s BT_AimOrigin 
08667963 5B 01           lstore 1 
08667965 05 814C         ln 332 
08667968 2A 06           tymark #"(rrr)r" 
0866796A 5A 02           lload 2 
0866796C 5A 02           lload 2 
0866796E 64 07           loadindex_s enemy 
08667970 45 5802         push_sv 600 
08667973 23 08           call_s BT_AimDirection 
08667975 5B 00           lstore 0 
08667977 05 814F         ln 335 
0866797A 2A 09           tymark #"(rrrrrr)r" 
0866797C 5A 02           lload 2 
0866797E 5A 01           lload 1 
08667980 5A 00           lload 0 
08667982 57 3C           push_sv_p 60 
08667984 45 5802         push_sv 600 
08667987 57 A0           push_sv_p 160 
08667989 24 0A           tailcall_s BT_FireRocket 
0866798B 1A              clearenv 
0866798C 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 340) -> (dbgmark "game_sv/MonsterGeneric.bs" 340)
stmt: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: "monster_enemyhead: init A self=%p\n" -> "monster_enemyhead: init A self=%p\n"
expr: self -> self
stmt: (linenum 342) -> (linenum 342)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 343) -> (linenum 343)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 345) -> (linenum 345)
stmt: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: self -> self
expr: "models/monsters/enemyhead/enemyhead.model" -> "models/monsters/enemyhead/enemyhead.model"
stmt: (linenum 346) -> (linenum 346)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 347) -> (linenum 347)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 349) -> (linenum 349)
stmt: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (binary + (objref self origin) (vector 0 0 256)) -> (binary + (objref self origin) (vector 0 0 256))
expr: (objref self origin) -> (objref self origin)
expr: self -> self
expr: (vector 0 0 256) -> (vector 0 0 256)
expr: 0 -> 0
expr: 0 -> 0
expr: 256 -> 256
expr: self -> self
stmt: (linenum 351) -> (linenum 351)
stmt: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (vector (unary - 64) (unary - 64) (unary - 32)) -> (vector (unary - 64) (unary - 64) (unary - 32))
expr: (unary - 64) -> -64
expr: (unary - 64) -> -64
expr: (unary - 32) -> -32
expr: self -> self
stmt: (linenum 352) -> (linenum 352)
stmt: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (vector 64 64 64) -> (vector 64 64 64)
expr: 64 -> 64
expr: 64 -> 64
expr: 64 -> 64
expr: self -> self
stmt: (linenum 353) -> (linenum 353)
stmt: (objset! self health 900) -> (objset! self health 900)
expr: (objset! self health 900) -> (objset! self health 900)
expr: 900 -> 900
expr: self -> self
stmt: (linenum 357) -> (linenum 357)
expr: (funcall btFlymonsterStart self) -> (funcall btFlymonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
08670060 02 018154       dbgmark "game_sv/MonsterGeneric.bs" 340 
08670064 2A 02           tymark #"(Csr)r" 
08670066 10 03           push "monster_enemyhead: init A self=%p\n" 
08670068 5A 00           lload 0 
0867006A 23 04           call_s gc_printf 
0867006C 11              pop 
0867006D 05 8156         ln 342 
08670070 49              push_3 
08670071 36              dup_f 
08670072 5A 00           lload 0 
08670074 65 05           storeindex_s solidtype 
08670076 11              pop 
08670077 05 8157         ln 343 
0867007A 48              push_2 
0867007B 36              dup_f 
0867007C 5A 00           lload 0 
0867007E 65 06           storeindex_s movetype 
08670080 11              pop 
08670081 05 8159         ln 345 
08670084 2A 07           tymark #"(rCs)r" 
08670086 5A 00           lload 0 
08670088 10 08           push "models/monsters/enemyhead/enemyhead.model" 
0867008A 23 09           call_s btSetModel 
0867008C 11              pop 
0867008D 05 815A         ln 346 
08670090 10 0A           push "sound/soldier/solsght1" 
08670092 30              dup 
08670093 5A 00           lload 0 
08670095 65 0B           storeindex_s snd_sight 
08670097 11              pop 
08670098 05 815B         ln 347 
0867009B 10 0C           push "sound/soldier/solidle1" 
0867009D 30              dup 
0867009E 5A 00           lload 0 
086700A0 65 0D           storeindex_s snd_idle 
086700A2 11              pop 
086700A3 05 815D         ln 349 
086700A6 5A 00           lload 0 
086700A8 64 0E           loadindex_s origin 
086700AA 20              mark 
086700AB 46              push_0 
086700AC 46              push_0 
086700AD 45 0001         push_sv 256 
086700B0 84              vector 
086700B1 9F              add 
086700B2 30              dup 
086700B3 5A 00           lload 0 
086700B5 65 0E           storeindex_s origin 
086700B7 11              pop 
086700B8 05 815F         ln 351 
086700BB 20              mark 
086700BC 58 40           push_sv_n 64 
086700BE 58 40           push_sv_n 64 
086700C0 58 20           push_sv_n 32 
086700C2 84              vector 
086700C3 30              dup 
086700C4 5A 00           lload 0 
086700C6 65 0F           storeindex_s mins 
086700C8 11              pop 
086700C9 05 8160         ln 352 
086700CC 20              mark 
086700CD 57 40           push_sv_p 64 
086700CF 57 40           push_sv_p 64 
086700D1 57 40           push_sv_p 64 
086700D3 84              vector 
086700D4 30              dup 
086700D5 5A 00           lload 0 
086700D7 65 10           storeindex_s maxs 
086700D9 11              pop 
086700DA 05 8161         ln 353 
086700DD 45 8403         push_sv 900 
086700E0 36              dup_f 
086700E1 5A 00           lload 0 
086700E3 65 11           storeindex_s health 
086700E5 11              pop 
086700E6 05 8165         ln 357 
086700E9 2A 12           tymark #"(r)r" 
086700EB 5A 00           lload 0 
086700ED 24 13           tailcall_s btFlymonsterStart 
086700EF 1A              clearenv 
086700F0 29              ret 

BLK (null), SA No, Capture=Yes
086702D0 02 0102         dbgmark "game_sv/MonsterGeneric.bs" 2 
086702D3 C202 020304     begin_class monster_generic2 ActorBase p 
086702D8 42              push_null 
086702D9 97 050006       tybind stand1_mf () s 
086702DD 42              push_null 
086702DE 97 070006       tybind walk1_mf () s 
086702E2 42              push_null 
086702E3 97 080006       tybind walk2_mf () s 
086702E7 42              push_null 
086702E8 97 090006       tybind stand1_mfi () s 
086702EC 42              push_null 
086702ED 97 0A0006       tybind walk1_mfi () s 
086702F1 42              push_null 
086702F2 97 0B0006       tybind walk2_mfi () s 
086702F6 42              push_null 
086702F7 97 0C0006       tybind run_mf () s 
086702FB 42              push_null 
086702FC 97 0D0006       tybind attack1_mf () s 
08670300 42              push_null 
08670301 97 0E0006       tybind run_mfi () s 
08670305 42              push_null 
08670306 97 0F0006       tybind attack1_mfi () s 
0867030A 10 10           push #!<svm_blk_t:0865D550> 
0867030C 97 111200       tybind think_idle #"(r)r" () 
08670310 10 13           push #!<svm_blk_t:0865DF40> 
08670312 97 141200       tybind init #"(r)r" () 
08670316 10 15           push #!<svm_blk_t:0865E8D0> 
08670318 97 161200       tybind deinit #"(r)r" () 
0867031C 10 17           push #!<svm_blk_t:0865F1C0> 
0867031E 97 181900       tybind blocked #"(rr)r" () 
08670322 10 1A           push #!<svm_blk_t:0865FAB0> 
08670324 97 1B1900       tybind touch #"(rr)r" () 
08670328 10 1C           push #!<svm_blk_t:086603A0> 
0867032A 97 1D1900       tybind use #"(rr)r" () 
0867032E 10 1E           push #!<svm_blk_t:08660C90> 
08670330 97 1F2000       tybind pain #"(rrr)r" () 
08670334 10 21           push #!<svm_blk_t:08661580> 
08670336 97 222000       tybind die #"(rrr)r" () 
0867033A 10 23           push #!<svm_blk_t:08661E80> 
0867033C 97 242000       tybind cmdmsg #"(rrr)r" () 
08670340 10 25           push #!<svm_blk_t:08662770> 
08670342 97 261200       tybind stand #"(r)r" () 
08670346 10 27           push #!<svm_blk_t:08663090> 
08670348 97 281200       tybind walk1_random #"(r)r" () 
0867034C 10 29           push #!<svm_blk_t:086639D0> 
0867034E 97 2A1200       tybind walk #"(r)r" () 
08670352 10 2B           push #!<svm_blk_t:086642F0> 
08670354 97 2C1200       tybind run #"(r)r" () 
08670358 10 2D           push #!<svm_blk_t:08664BF0> 
0867035A 97 2E1200       tybind missile #"(r)r" () 
0867035E 10 2F           push #!<svm_blk_t:08665510> 
08670360 97 301200       tybind think_fire #"(r)r" () 
08670364 10 31           push #!<svm_blk_t:08665E50> 
08670366 97 321200       tybind melee #"(r)r" () 
0867036A 10 33           push #!<svm_blk_t:08666760> 
0867036C 97 021904       tybind monster_generic2 #"(rr)r" p 
08670370 20              mark 
08670371 10 34           push #!<svm_blk_t:086695D0> 
08670373 21              call 
08670374 C206            end_class 
08670376 11              pop 
08670377 05 80DE         ln 222 
0867037A C202 350204     begin_class passive_sheep monster_generic2 p 
0867037F 10 36           push #!<svm_blk_t:0866A1F0> 
08670381 97 351904       tybind passive_sheep #"(rr)r" p 
08670385 10 37           push #!<svm_blk_t:0866AB20> 
08670387 97 111200       tybind think_idle #"(r)r" () 
0867038B 10 38           push #!<svm_blk_t:0866B470> 
0867038D 97 141200       tybind init #"(r)r" () 
08670391 C206            end_class 
08670393 11              pop 
08670394 05 8104         ln 260 
08670397 C202 390204     begin_class passive_pig monster_generic2 p 
0867039C 10 3A           push #!<svm_blk_t:0866BE10> 
0867039E 97 391904       tybind passive_pig #"(rr)r" p 
086703A2 10 3B           push #!<svm_blk_t:0866C740> 
086703A4 97 111200       tybind think_idle #"(r)r" () 
086703A8 10 3C           push #!<svm_blk_t:0866D070> 
086703AA 97 141200       tybind init #"(r)r" () 
086703AE C206            end_class 
086703B0 11              pop 
086703B1 05 812A         ln 298 
086703B4 C202 3D0204     begin_class monster_army monster_generic2 p 
086703B9 10 3E           push #!<svm_blk_t:0866DA10> 
086703BB 97 3D1904       tybind monster_army #"(rr)r" p 
086703BF C206            end_class 
086703C1 11              pop 
086703C2 05 8134         ln 308 
086703C5 C202 3F0204     begin_class monster_enemyhead monster_generic2 p 
086703CA 10 40           push #!<svm_blk_t:0866E300> 
086703CC 97 3F1904       tybind monster_enemyhead #"(rr)r" p 
086703D0 10 41           push #!<svm_blk_t:0866EC30> 
086703D2 97 111200       tybind think_idle #"(r)r" () 
086703D6 10 42           push #!<svm_blk_t:0866F560> 
086703D8 97 301200       tybind think_fire #"(r)r" () 
086703DC 10 43           push #!<svm_blk_t:0866FF90> 
086703DE 97 141200       tybind init #"(r)r" () 
086703E2 C206            end_class 
086703E4 29              ret 

Add Slot 08672EB0 stand1_mf r
Add Slot 08672F40 walk1_mf r
Add Slot 08672FD0 walk2_mf r
Add Slot 08673060 stand1_mfi r
Add Slot 086730F0 walk1_mfi r
Add Slot 08673180 walk2_mfi r
Add Slot 08673210 run_mf r
Add Slot 086732A0 attack1_mf r
Add Slot 08673330 run_mfi r
Add Slot 086733C0 attack1_mfi r
This A = 08672980, run=086642F0, this.run=086642F0
BTSV_ScriptInit: Called
Eval:  load("game/sv_main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/sv_main.bs") -> (funcall load "game/sv_main.bs")
expr: "game/sv_main.bs" -> "game/sv_main.bs"
BLK (null), SA No, Capture=Yes
08685610 02 0101         dbgmark "<eval-str>" 1 
08685613 2A 02           tymark #"(Cs)r" 
08685615 10 03           push "game/sv_main.bs" 
08685617 24 04           tailcall_s load 
08685619 1A              clearenv 
0868561A 29              ret 

stmt: (dbgmark "game/sv_main.bs" 1) -> (dbgmark "game/sv_main.bs" 1)
stmt: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: "BGBScript Server Main Start\n" -> "BGBScript Server Main Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (funcall printf "BGBScript Server Main End\n") -> (funcall printf "BGBScript Server Main End\n")
expr: "BGBScript Server Main End\n" -> "BGBScript Server Main End\n"
BLK (null), SA No, Capture=Yes
08686320 02 0101         dbgmark "game/sv_main.bs" 1 
08686323 2A 02           tymark #"(Cs)r" 
08686325 10 03           push "BGBScript Server Main Start\n" 
08686327 23 04           call_s gc_printf 
08686329 11              pop 
0868632A 05 05           ln 5 
0868632C 2A 02           tymark #"(Cs)r" 
0868632E 10 05           push "BGBScript Server Main End\n" 
08686330 24 04           tailcall_s gc_printf 
08686332 1A              clearenv 
08686333 29              ret 

BGBScript Server Main Start
BGBScript Server Main End
()
Add Slot 0868C9A0 light PXBTGE_Light_s;
Add Slot 0868CA70 item PXBTGE_ItemInfo_s;
Add Slot 0868CB50 groundEntity PXBTGE_Entity_s;
Add Slot 0868CC30 chain PXBTGE_Entity_s;
Add Slot 0868CCE0 enemy PXBTGE_Entity_s;
Add Slot 0868CD70 owner PXBTGE_Entity_s;
Add Slot 0868CE20 goalEntity PXBTGE_Entity_s;
Add Slot 0868CED0 moveTarget PXBTGE_Entity_s;
Add Slot 0868CF80 oldEnemy PXBTGE_Entity_s;
Add Slot 0868D030 linkNext PXBTGE_Entity_s;
Add Slot 0868D0E0 linkFirst PXBTGE_Entity_s;
Add Slot 0868D190 entNextNode PXBTGE_Entity_s;
Add Slot 0868D240 entNode PXBTGE_EntityNode_s;
Add Slot 0868E2C0 triggerEntity PXBTGE_Entity_s;
Add Slot 0868F3B0 teamLeader PXBTGE_Entity_s;
Add Slot 08690550 gui_ctx PXBTCMUI_Context_s;
00: 0.1189 0.1189 0.1189
01: 0.2059 0.0000 0.0000
02: 0.0000 0.2059 0.0000
03: 0.1456 0.1456 0.0000
04: 0.0000 0.0000 0.2059
05: 0.1456 0.0000 0.1456
06: 0.0000 0.1456 0.1456
07: 0.1710 0.1026 0.0513
08: 0.1026 0.1710 0.0513
09: 0.1681 0.0841 0.0841
0A: 0.0841 0.1681 0.0841
0B: 0.1373 0.1373 0.0686
0C: 0.0841 0.0841 0.1681
0D: 0.1373 0.0686 0.1373
0E: 0.0686 0.1373 0.1373
0F: 0.0513 0.1026 0.1710
10: 0.1321 0.1321 0.1321
11: 0.2288 0.0000 0.0000
12: 0.0000 0.2288 0.0000
13: 0.1618 0.1618 0.0000
14: 0.0000 0.0000 0.2288
15: 0.1618 0.0000 0.1618
16: 0.0000 0.1618 0.1618
17: 0.1900 0.1140 0.0570
18: 0.1140 0.1900 0.0570
19: 0.1868 0.0934 0.0934
1A: 0.0934 0.1868 0.0934
1B: 0.1525 0.1525 0.0763
1C: 0.0934 0.0934 0.1868
1D: 0.1525 0.0763 0.1525
1E: 0.0763 0.1525 0.1525
1F: 0.0570 0.1140 0.1900
20: 0.1468 0.1468 0.1468
21: 0.2542 0.0000 0.0000
22: 0.0000 0.2542 0.0000
23: 0.1797 0.1797 0.0000
24: 0.0000 0.0000 0.2542
25: 0.1797 0.0000 0.1797
26: 0.0000 0.1797 0.1797
27: 0.2111 0.1267 0.0633
28: 0.1267 0.2111 0.0633
29: 0.2075 0.1038 0.1038
2A: 0.1038 0.2075 0.1038
2B: 0.1695 0.1695 0.0847
2C: 0.1038 0.1038 0.2075
2D: 0.1695 0.0847 0.1695
2E: 0.0847 0.1695 0.1695
2F: 0.0633 0.1267 0.2111
30: 0.1631 0.1631 0.1631
31: 0.2824 0.0000 0.0000
32: 0.0000 0.2824 0.0000
33: 0.1997 0.1997 0.0000
34: 0.0000 0.0000 0.2824
35: 0.1997 0.0000 0.1997
36: 0.0000 0.1997 0.1997
37: 0.2345 0.1407 0.0704
38: 0.1407 0.2345 0.0704
39: 0.2306 0.1153 0.1153
3A: 0.1153 0.2306 0.1153
3B: 0.1883 0.1883 0.0941
3C: 0.1153 0.1153 0.2306
3D: 0.1883 0.0941 0.1883
3E: 0.0941 0.1883 0.1883
3F: 0.0704 0.1407 0.2345
40: 0.1812 0.1812 0.1812
41: 0.3138 0.0000 0.0000
42: 0.0000 0.3138 0.0000
43: 0.2219 0.2219 0.0000
44: 0.0000 0.0000 0.3138
45: 0.2219 0.0000 0.2219
46: 0.0000 0.2219 0.2219
47: 0.2606 0.1564 0.0782
48: 0.1564 0.2606 0.0782
49: 0.2562 0.1281 0.1281
4A: 0.1281 0.2562 0.1281
4B: 0.2092 0.2092 0.1046
4C: 0.1281 0.1281 0.2562
4D: 0.2092 0.1046 0.2092
4E: 0.1046 0.2092 0.2092
4F: 0.0782 0.1564 0.2606
50: 0.2013 0.2013 0.2013
51: 0.3487 0.0000 0.0000
52: 0.0000 0.3487 0.0000
53: 0.2466 0.2466 0.0000
54: 0.0000 0.0000 0.3487
55: 0.2466 0.0000 0.2466
56: 0.0000 0.2466 0.2466
57: 0.2896 0.1737 0.0869
58: 0.1737 0.2896 0.0869
59: 0.2847 0.1423 0.1423
5A: 0.1423 0.2847 0.1423
5B: 0.2325 0.2325 0.1162
5C: 0.1423 0.1423 0.2847
5D: 0.2325 0.1162 0.2325
5E: 0.1162 0.2325 0.2325
5F: 0.0869 0.1737 0.2896
60: 0.2237 0.2237 0.2237
61: 0.3874 0.0000 0.0000
62: 0.0000 0.3874 0.0000
63: 0.2739 0.2739 0.0000
64: 0.0000 0.0000 0.3874
65: 0.2739 0.0000 0.2739
66: 0.0000 0.2739 0.2739
67: 0.3217 0.1930 0.0965
68: 0.1930 0.3217 0.0965
69: 0.3163 0.1582 0.1582
6A: 0.1582 0.3163 0.1582
6B: 0.2583 0.2583 0.1291
6C: 0.1582 0.1582 0.3163
6D: 0.2583 0.1291 0.2583
6E: 0.1291 0.2583 0.2583
6F: 0.0965 0.1930 0.3217
70: 0.2485 0.2485 0.2485
71: 0.4305 0.0000 0.0000
72: 0.0000 0.4305 0.0000
73: 0.3044 0.3044 0.0000
74: 0.0000 0.0000 0.4305
75: 0.3044 0.0000 0.3044
76: 0.0000 0.3044 0.3044
77: 0.3575 0.2145 0.1072
78: 0.2145 0.3575 0.1072
79: 0.3515 0.1757 0.1757
7A: 0.1757 0.3515 0.1757
7B: 0.2870 0.2870 0.1435
7C: 0.1757 0.1757 0.3515
7D: 0.2870 0.1435 0.2870
7E: 0.1435 0.2870 0.2870
7F: 0.1072 0.2145 0.3575
80: 0.2761 0.2761 0.2761
81: 0.4783 0.0000 0.0000
82: 0.0000 0.4783 0.0000
83: 0.3382 0.3382 0.0000
84: 0.0000 0.0000 0.4783
85: 0.3382 0.0000 0.3382
86: 0.0000 0.3382 0.3382
87: 0.3972 0.2383 0.1192
88: 0.2383 0.3972 0.1192
89: 0.3905 0.1953 0.1953
8A: 0.1953 0.3905 0.1953
8B: 0.3189 0.3189 0.1594
8C: 0.1953 0.1953 0.3905
8D: 0.3189 0.1594 0.3189
8E: 0.1594 0.3189 0.3189
8F: 0.1192 0.2383 0.3972
90: 0.3068 0.3068 0.3068
91: 0.5314 0.0000 0.0000
92: 0.0000 0.5314 0.0000
93: 0.3758 0.3758 0.0000
94: 0.0000 0.0000 0.5314
95: 0.3758 0.0000 0.3758
96: 0.0000 0.3758 0.3758
97: 0.4413 0.2648 0.1324
98: 0.2648 0.4413 0.1324
99: 0.4339 0.2170 0.2170
9A: 0.2170 0.4339 0.2170
9B: 0.3543 0.3543 0.1771
9C: 0.2170 0.2170 0.4339
9D: 0.3543 0.1771 0.3543
9E: 0.1771 0.3543 0.3543
9F: 0.1324 0.2648 0.4413
A0: 0.3409 0.3409 0.3409
A1: 0.5905 0.0000 0.0000
A2: 0.0000 0.5905 0.0000
A3: 0.4175 0.4175 0.0000
A4: 0.0000 0.0000 0.5905
A5: 0.4175 0.0000 0.4175
A6: 0.0000 0.4175 0.4175
A7: 0.4904 0.2942 0.1471
A8: 0.2942 0.4904 0.1471
A9: 0.4821 0.2411 0.2411
AA: 0.2411 0.4821 0.2411
AB: 0.3937 0.3937 0.1968
AC: 0.2411 0.2411 0.4821
AD: 0.3937 0.1968 0.3937
AE: 0.1968 0.3937 0.3937
AF: 0.1471 0.2942 0.4904
B0: 0.3788 0.3788 0.3788
B1: 0.6561 0.0000 0.0000
B2: 0.0000 0.6561 0.0000
B3: 0.4639 0.4639 0.0000
B4: 0.0000 0.0000 0.6561
B5: 0.4639 0.0000 0.4639
B6: 0.0000 0.4639 0.4639
B7: 0.5449 0.3269 0.1635
B8: 0.3269 0.5449 0.1635
B9: 0.5357 0.2679 0.2679
BA: 0.2679 0.5357 0.2679
BB: 0.4374 0.4374 0.2187
BC: 0.2679 0.2679 0.5357
BD: 0.4374 0.2187 0.4374
BE: 0.2187 0.4374 0.4374
BF: 0.1635 0.3269 0.5449
C0: 0.4209 0.4209 0.4209
C1: 0.7290 0.0000 0.0000
C2: 0.0000 0.7290 0.0000
C3: 0.5155 0.5155 0.0000
C4: 0.0000 0.0000 0.7290
C5: 0.5155 0.0000 0.5155
C6: 0.0000 0.5155 0.5155
C7: 0.6054 0.3632 0.1816
C8: 0.3632 0.6054 0.1816
C9: 0.5952 0.2976 0.2976
CA: 0.2976 0.5952 0.2976
CB: 0.4860 0.4860 0.2430
CC: 0.2976 0.2976 0.5952
CD: 0.4860 0.2430 0.4860
CE: 0.2430 0.4860 0.4860
CF: 0.1816 0.3632 0.6054
D0: 0.4677 0.4677 0.4677
D1: 0.8100 0.0000 0.0000
D2: 0.0000 0.8100 0.0000
D3: 0.5728 0.5728 0.0000
D4: 0.0000 0.0000 0.8100
D5: 0.5728 0.0000 0.5728
D6: 0.0000 0.5728 0.5728
D7: 0.6727 0.4036 0.2018
D8: 0.4036 0.6727 0.2018
D9: 0.6614 0.3307 0.3307
DA: 0.3307 0.6614 0.3307
DB: 0.5400 0.5400 0.2700
DC: 0.3307 0.3307 0.6614
DD: 0.5400 0.2700 0.5400
DE: 0.2700 0.5400 0.5400
DF: 0.2018 0.4036 0.6727
E0: 0.5196 0.5196 0.5196
E1: 0.9000 0.0000 0.0000
E2: 0.0000 0.9000 0.0000
E3: 0.6364 0.6364 0.0000
E4: 0.0000 0.0000 0.9000
E5: 0.6364 0.0000 0.6364
E6: 0.0000 0.6364 0.6364
E7: 0.7474 0.4484 0.2242
E8: 0.4484 0.7474 0.2242
E9: 0.7348 0.3674 0.3674
EA: 0.3674 0.7348 0.3674
EB: 0.6000 0.6000 0.3000
EC: 0.3674 0.3674 0.7348
ED: 0.6000 0.3000 0.6000
EE: 0.3000 0.6000 0.6000
EF: 0.2242 0.4484 0.7474
F0: 0.5774 0.5774 0.5774
F1: 1.0000 0.0000 0.0000
F2: 0.0000 1.0000 0.0000
F3: 0.7071 0.7071 0.0000
F4: 0.0000 0.0000 1.0000
F5: 0.7071 0.0000 0.7071
F6: 0.0000 0.7071 0.7071
F7: 0.8305 0.4983 0.2491
F8: 0.4983 0.8305 0.2491
F9: 0.8165 0.4082 0.4082
FA: 0.4082 0.8165 0.4082
FB: 0.6667 0.6667 0.3333
FC: 0.4082 0.4082 0.8165
FD: 0.6667 0.3333 0.6667
FE: 0.3333 0.6667 0.6667
FF: 0.2491 0.4983 0.8305
BTGE_Voxel_LoadDungeonType: 1 none
Adler32: Fail  6DA618C2 8998E59B
BTGE_Voxel_LoadDungeonType: 1 none: OK
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick
Adler32: Fail  5C1D0EA6 0B620765
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick: OK
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick
Adler32: Fail  37090EA6 97677FC0
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick: OK
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick
Adler32: Fail  D4423C22 01D1F60F
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick: OK
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick
Adler32: Fail  8469FB06 A7E87EE2
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick: OK
BTGE_Voxel_LoadDungeonType: 8 break_px_brick
Adler32: Fail  2D34FB06 CF94C8A4
BTGE_Voxel_LoadDungeonType: 8 break_px_brick: OK
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick
Adler32: Fail  6DA9B4D1 3832E6F5
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick: OK
BTGE_Voxel_LoadDungeonType: 10 break_py_brick
Adler32: Fail  3886B463 B956C876
BTGE_Voxel_LoadDungeonType: 10 break_py_brick: OK
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick
Adler32: Fail  EC9F7922 DD7E44FD
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick
Adler32: Fail  DA580EA6 6212C77A
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick
Adler32: Fail  251B0EA6 8C6A59C4
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick
Adler32: Fail  F2243C22 1DCD0360
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick
Adler32: Fail  8469FB06 A7E87EE2
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick
Adler32: Fail  2D34FB06 CF94C8A4
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick
Adler32: Fail  6DA9B4D1 3832E6F5
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick
Adler32: Fail  3886B463 B956C876
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick
Adler32: Fail  28024F64 A3614B80
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick
Adler32: Fail  B26D1CD2 DDDB268D
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick
Adler32: Fail  DE3B8945 01BA751B
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick
Adler32: Fail  551E9045 C7A8F061
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick
Adler32: Fail  ACAAA395 E0E8D428
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick: OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,-1,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,-1,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,1,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,1,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
Adler32: Fail  3A9CBB36 35700B2E
Adler32: Fail  281164E6 E278911B
PNG: Check Fail: Offs=109 2->0
PNG: Check Fail: Offs=30998 30->0
BTGE_ServerInitFunc: BTGE_DecodeClientUpdate Pass 0ED61352
BTGE_DecodeClientConnect
btFindSpawnpoint: 1 spawnpoints
BTGE_ServerInitFunc: btsvFreeUpdate Pass 0ED61A50
BTGE_ClientInitFunc: BTCL_DecodeUpdate Pass 0B7E1285
camera: 4
SoundRec: Sound overrun
BTCL_SetupClientEntFrameWMdl: Model Changed
BTCL_SetupClientEntFrameWMdl: New wmdl instance
skel loaded, 2 bones, 0 solids
AC3D_LoadModel: loading 'models/weapons/v_blast/v_blast1.ac'
BTGE_Voxel_DeltaRegionBuffer: Buffer Space Check
GroupMergeVecsFrac 1: 398 xyz, 705 st, 784 face
GroupMergeVecsFrac 2: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 1: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 2: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 1: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 2: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 1: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 2: 116 xyz, 617 st, 224 face
Hitbox: 0 22.990 Org=(-4.936 -15.016 -4.513) Rad=(0.116 0.905 0.122)
Hitbox: 1 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 0758F1B0
anim active: 0, 5 frames
anim pow: 5, 4 frames
anim idle1: 9, 24 frames
anim idle2: 33, 20 frames
anim putway: 53, 3 frames
BTGE_ClientInitFunc: BTCL_ComposeUpdate Pass 0B7E1249
BTGE_Voxel_AllocRegionForPoint: Pt=(0,0,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,0,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(0,-512,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTCL_DecodeLDelta: (ldelta 1 (st 0) (fl 33537) (texname ()) (boxval 0.0 0.0 0.0) (maxs 0.0 0.0 0.0) (mins 0.0 0.0 0.0) (coeff 0.862069 0.862069 1.0) (val 10000.0 0.0) (clr 1.0 1.0 1.0) (dir 0.0 0.0 0.0) (org 0.0 0.0 2048.0))
stmt: (dbgmark "<eval-str>" 5) -> (dbgmark "<eval-str>" 5)
stmt: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: "Client Stuff Eval: Begin\n" -> "Client Stuff Eval: Begin\n"
stmt: (linenum 7) -> (linenum 7)
stmt: (vars (btcl_clientstuff_vol)) -> (vars (btcl_clientstuff_vol))
expr: () -> ()
stmt: (linenum 8) -> (linenum 8)
stmt: (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)) -> (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400))
expr: (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400) -> (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)
expr: "images/faces/anim/robotface0_aa" -> "images/faces/anim/robotface0_aa"
expr: (unary - 200) -> -200
expr: (unary - 150) -> -150
expr: 400 -> 400
expr: 400 -> 400
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: btcl_clientstuff_vol -> btcl_clientstuff_vol
expr: (unary - 1) -> -1
stmt: (linenum 13) -> (linenum 13)
stmt: (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))) -> (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))
stmt: (dbgmark "<eval-str>" 15) -> (dbgmark "<eval-str>" 15)
expr: (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)) -> (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))
expr: (funcall PDGL_KeyDown K_SHIFT) -> (funcall PDGL_KeyDown K_SHIFT)
expr: K_SHIFT -> 134
expr: () -> ()
expr: (begin) -> ()
BLK BTCL_ClientStuff_Draw, SA No, Capture=Yes
05F3F6E0 02 010F         dbgmark "<eval-str>" 15 
05F3F6E3 2A 02           tymark #"(r)r" 
05F3F6E5 57 86           push_sv_p 134 
05F3F6E7 23 03           call_s PDGL_KeyDown 
05F3F6E9 78 0500         jmp_false 05F3F6F1 
05F3F6EC 42              push_null 
05F3F6ED 1F 04           cast_s r 
05F3F6EF 1A              clearenv 
05F3F6F0 29              ret 
05F3F6F1 42              push_null 
05F3F6F2 1A              clearenv 
05F3F6F3 29              ret 

stmt: (linenum 25) -> (linenum 25)
expr: (funcall printf "Client Stuff Eval: End\n") -> (funcall printf "Client Stuff Eval: End\n")
expr: "Client Stuff Eval: End\n" -> "Client Stuff Eval: End\n"
BLK (null), SA No, Capture=Yes
05F3F570 02 0105         dbgmark "<eval-str>" 5 
05F3F573 2A 02           tymark #"(Cs)r" 
05F3F575 10 03           push "Client Stuff Eval: Begin\n" 
05F3F577 23 04           call_s gc_printf 
05F3F579 11              pop 
05F3F57A 05 07           ln 7 
05F3F57C 42              push_null 
05F3F57D 14 05           bind btcl_clientstuff_vol 
05F3F57F 05 08           ln 8 
05F3F581 2A 06           tymark #"(Csrrrr)r" 
05F3F583 10 07           push "images/faces/anim/robotface0_aa" 
05F3F585 58 C8           push_sv_n 200 
05F3F587 58 96           push_sv_n 150 
05F3F589 45 9001         push_sv 400 
05F3F58C 45 9001         push_sv 400 
05F3F58F 23 08           call_s LBXGL_BrushDraw2D_CreateDisplayImage2 
05F3F591 13 05           store btcl_clientstuff_vol 
05F3F593 05 0B           ln 11 
05F3F595 2A 09           tymark #"(rr)r" 
05F3F597 12 05           load btcl_clientstuff_vol 
05F3F599 58 01           push_sv_n 1 
05F3F59B 23 0A           call_s LBXGL_BrushDraw2D_SetObjectOrdinal 
05F3F59D 11              pop 
05F3F59E 05 0D           ln 13 
05F3F5A0 10 0B           push #!<svm_blk_t:05F3F650> 
05F3F5A2 97 0C0D00       tybind BTCL_ClientStuff_Draw #"()r" () 
05F3F5A6 05 19           ln 25 
05F3F5A8 2A 02           tymark #"(Cs)r" 
05F3F5AA 10 0E           push "Client Stuff Eval: End\n" 
05F3F5AC 24 04           tailcall_s gc_printf 
05F3F5AE 29              ret 

Client Stuff Eval: Begin
Texture: Missing-Base: images/faces/anim/robotface0_aa
Client Stuff Eval: End
Texture: Missing-Base: textures/env/bkgtst
LBXGL_SkyBox_LoadSky: bkgtst
Texture: Missing-Base: textures/env/stars
LBXGL_SkyBox_LoadSky: stars
Texture: Missing-Base: textures/env/bkgr
LBXGL_SkyBox_LoadSky: bkgr
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,-512,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
SoundRec: Sound overrun
SoundRec: Sound overrun
Texture Size Warning: textures/voxel/log_bot, Size=96,96
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x08643E10
mov [esi+248], 15
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x06671540
call @0x008E3585
mov [esp+4], eax
call @0x008E22B6
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x06671660
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x06671840
call @0x008E18D9
mov [esp+4], eax
call @0x008E16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
MainAVIHeader:
dwMicroSecPerFrame=100000
dwMaxBytesPerSec=0
dwPaddingGranularity=0
dwFlags=16
dwTotalFrames=8
dwInitialFrames=0
dwStreams=1
dwSuggestedBufferSize=0
dwWidth=256
dwHeight=256

AVIStreamHeader(0):
fccType=vids
fccHandler=rpza
dwFlags=0
wPriority=0
wLanguage=0
dwInitialFrames=0
dwScale=1024
dwRate=10240
dwStart=0
dwLength=8
dwSuggestedBufferSize=0
dwQuality=0
dwSampleSize=0
rcFrame=left:0 top:0 right:0 bottom:0

BITMAPINFOHEADER(0):
biSize=40
biWidth=256
biHeight=256
biPlanes=1
biBitCount=32
biCompression=azpr
biSizeImage=262144
biXPelsPerMeter=0
biYPelsPerMeter=0
biClrUsed=0
biClrImportant=0

AVI: Index 8 ents
AVI: codec api
VFW: Init
fccType: vidc
fccHandler: mrle
fccType: vidc
fccHandler: msvc
fccType: vidc
fccHandler: uyvy
fccType: vidc
fccHandler: yuy2
fccType: vidc
fccHandler: yvyu
fccType: vidc
fccHandler: iyuv
fccType: vidc
fccHandler: i420
fccType: vidc
fccHandler: yvu9
fccType: vidc
fccHandler: cvid
fccType: vidc
fccHandler: fps1
fccType: vidc
fccHandler: hfyu
fccType: vidc
fccHandler: lags
fccType: vidc
fccHandler: x264
fccType: vidc
fccHandler: xvid
fccType: vidc
fccHandler: ffds
fccType: vidc
fccHandler: lwlr
fccType: vidc
fccHandler: btic
fccType: vidc
fccHandler: bt1c
fccType: vidc
fccHandler: bt1d
fccType: vidc
fccHandler: bt2c
fccType: vidc
fccHandler: bt1h
MJPG: Init
MBTC: Init
MBTC: Init
RPZA: Init
Load Patch sound/player/step1 (4096)
Th 00000CB0 4604 00641500
Load Patch sound/player/jump1 (4097)
passive_sheep: ctor
Add Slot 0865A380 entity r
Add Slot 0865A380 entity r
Add Slot 0865A380 entity r
Add Slot 0865A520 spawnEntity r
Add Slot 0865A520 spawnEntity r
Add Slot 0865A520 spawnEntity r
monster_sheep: init A self=04C38F40
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 08687D10 solidtype i
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 08687CB0 movetype i
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 0868EBB0 snd_sight Pc
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 0868EC40 snd_idle Pc
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 08688500 mins Cb
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 08688590 maxs Cb
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 0868B5E0 health f
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=04C39630 ent=04C38F40
Load Patch sound/player/land (4098)
Load Patch sound/misc/tele1 (4099)
RNG Init
Th 00000CBC 5576 0FBC4557
skel loaded, 32 bones, 0 solids
AC3D_LoadModel: loading 'models/monsters/sheep/parasite2.ac'
GroupMergeVecsFrac 1: 696 xyz, 998 st, 1332 face
GroupMergeVecsFrac 2: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 1: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 2: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 1: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 2: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 1: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 2: 207 xyz, 973 st, 354 face
Hitbox: 0 59.495 Org=(0.006 0.897 0.687) Rad=(0.506 0.342 0.179)
Hitbox: 1 2.969 Org=(0.192 -2.232 2.020) Rad=(1.366 1.627 1.287)
Hitbox: 2 28.784 Org=(0.359 -0.520 0.710) Rad=(1.075 0.349 0.271)
Hitbox: 3 47.641 Org=(-0.145 -5.370 2.090) Rad=(0.241 0.323 0.217)
Hitbox: 4 4.833 Org=(0.069 -3.118 -0.419) Rad=(0.746 1.163 0.738)
Hitbox: 5 13.895 Org=(0.048 2.417 -0.516) Rad=(0.285 0.545 0.268)
Hitbox: 6 14.832 Org=(0.049 3.943 -0.256) Rad=(0.280 0.539 0.272)
Hitbox: 7 24.904 Org=(0.063 2.307 -0.139) Rad=(0.156 0.096 0.156)
Hitbox: 8 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 9 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 10 18.604 Org=(0.104 2.322 -4.180) Rad=(0.299 0.488 0.726)
Hitbox: 11 18.816 Org=(-0.011 2.025 -4.262) Rad=(0.299 0.491 0.749)
Hitbox: 12 23.046 Org=(-0.055 2.100 -5.228) Rad=(0.269 0.357 0.719)
Hitbox: 13 19.229 Org=(0.081 1.822 -5.075) Rad=(0.301 0.377 0.664)
Hitbox: 14 28.864 Org=(0.018 -3.398 -4.755) Rad=(0.234 0.458 0.550)
Hitbox: 15 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 16 28.045 Org=(0.029 -3.534 -4.878) Rad=(0.232 0.467 0.638)
Hitbox: 17 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 18 27.158 Org=(0.126 -3.331 -4.616) Rad=(0.233 0.474 0.645)
Hitbox: 19 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 20 27.157 Org=(0.024 -3.639 -4.766) Rad=(0.244 0.421 0.535)
Hitbox: 21 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 22 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 23 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 24 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 25 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 26 0.960 Org=(-0.278 -2.028 0.467) Rad=(2.764 0.000 0.000)
Hitbox: 27 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 28 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 29 3.192 Org=(0.344 1.051 0.960) Rad=(2.382 0.758 0.556)
Hitbox: 30 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 31 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Add Slot 08673060 stand1_mfi r
mesh 04CF7E00
anim walk1: 0, 30 frames
anim walk2: 30, 10 frames
anim run: 40, 7 frames
passive_sheep: ctor
monster_sheep: init A self=04EA5620
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=04EA5D10 ent=04EA5620
passive_sheep: ctor
monster_sheep: init A self=04FE0680
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=04FE0D70 ent=04FE0680
passive_pig: ctor
Add Slot 0865A380 entity r
Add Slot 0865A520 spawnEntity r
monster_sheep: init A self=04FE3F80
BT_SpawnSEntity: Spawn From Class inf=086834D0 obj=04FE4670 ent=04FE3F80
skel loaded, 32 bones, 0 solids
AC3D_LoadModel: loading 'models/monsters/pig/parasite2.ac'
GroupMergeVecsFrac 1: 696 xyz, 998 st, 1332 face
GroupMergeVecsFrac 2: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 1: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 2: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 1: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 2: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 1: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 2: 207 xyz, 973 st, 354 face
Hitbox: 0 59.495 Org=(0.006 0.897 0.687) Rad=(0.506 0.342 0.179)
Hitbox: 1 2.969 Org=(0.192 -2.232 2.020) Rad=(1.366 1.627 1.287)
Hitbox: 2 28.784 Org=(0.359 -0.520 0.710) Rad=(1.075 0.349 0.271)
Hitbox: 3 47.641 Org=(-0.145 -5.370 2.090) Rad=(0.241 0.323 0.217)
Hitbox: 4 4.833 Org=(0.069 -3.118 -0.419) Rad=(0.746 1.163 0.738)
Hitbox: 5 13.895 Org=(0.048 2.417 -0.516) Rad=(0.285 0.545 0.268)
Hitbox: 6 14.832 Org=(0.049 3.943 -0.256) Rad=(0.280 0.539 0.272)
Hitbox: 7 24.904 Org=(0.063 2.307 -0.139) Rad=(0.156 0.096 0.156)
Hitbox: 8 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 9 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 10 18.604 Org=(0.104 2.322 -4.180) Rad=(0.299 0.488 0.726)
Hitbox: 11 18.816 Org=(-0.011 2.025 -4.262) Rad=(0.299 0.491 0.749)
Hitbox: 12 23.046 Org=(-0.055 2.100 -5.228) Rad=(0.269 0.357 0.719)
Hitbox: 13 19.229 Org=(0.081 1.822 -5.075) Rad=(0.301 0.377 0.664)
Hitbox: 14 28.864 Org=(0.018 -3.398 -4.755) Rad=(0.234 0.458 0.550)
Hitbox: 15 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 16 28.045 Org=(0.029 -3.534 -4.878) Rad=(0.232 0.467 0.638)
Hitbox: 17 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 18 27.158 Org=(0.126 -3.331 -4.616) Rad=(0.233 0.474 0.645)
Hitbox: 19 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 20 27.157 Org=(0.024 -3.639 -4.766) Rad=(0.244 0.421 0.535)
Hitbox: 21 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 22 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 23 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 24 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 25 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 26 0.960 Org=(-0.278 -2.028 0.467) Rad=(2.764 0.000 0.000)
Hitbox: 27 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 28 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 29 3.192 Org=(0.344 1.051 0.960) Rad=(2.382 0.758 0.556)
Hitbox: 30 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 31 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 0512F590
anim walk1: 0, 30 frames
anim walk2: 30, 10 frames
anim run: 40, 7 frames
passive_sheep: ctor
monster_sheep: init A self=0525E270
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=0525E960 ent=0525E270
Add Slot 08673060 stand1_mfi r
SoundRec: Sound overrun
Add Slot 08673180 walk2_mfi r
passive_pig: ctor
monster_sheep: init A self=053C8520
BT_SpawnSEntity: Spawn From Class inf=086834D0 obj=053C8C10 ent=053C8520
passive_sheep: ctor
monster_sheep: init A self=053DCF70
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=053DD660 ent=053DCF70
Add Slot 086730F0 walk1_mfi r
passive_sheep: ctor
monster_sheep: init A self=054D4F60
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=054D5650 ent=054D4F60
passive_sheep: ctor
monster_sheep: init A self=054F9A80
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=054FA170 ent=054F9A80
passive_sheep: ctor
monster_sheep: init A self=056B3BD0
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=056B42C0 ent=056B3BD0
passive_sheep: ctor
monster_sheep: init A self=076B9AD0
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=076BA1C0 ent=076B9AD0
SoundRec: Sound overrun
SoundRec: Sound overrun
Load Patch sound/player/land1 (4100)
SoundRec: Sound overrun
SoundRec: Sound overrun
SoundRec: Sound overrun
SoundRec: Sound overrun
SoundRec: Sound overrun
SoundRec: Sound overrun
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0865B5B0
mov [esi+248], 232
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x052DCF90
call @0x008E3585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x052DD050
call @0x008E3012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x052DD530
call @0x008E18D9
mov [esp+4], eax
call @0x008E16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
Load Patch sound/animal/sheep_idle1 (4101)
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+248], 150
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x053E2300
call @0x008E3585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x053E23C0
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0865B5B0
mov [esi+248], 78
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x05424EC0
call @0x008E3585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x05424F80
call @0x008E3012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_sheep: ctor
monster_sheep: init A self=068AE910
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=068AF000 ent=068AE910
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x05425040
call @0x008E3585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x05425100
call @0x008E2BEE
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
Th 00000CC0 7428 00641500
passive_pig: ctor
monster_sheep: init A self=0608C870
BT_SpawnSEntity: Spawn From Class inf=086834D0 obj=0608CF60 ent=0608C870
Add Slot 08673180 walk2_mfi r
Add Slot 086730F0 walk1_mfi r
passive_pig: ctor
monster_sheep: init A self=062673B0
BT_SpawnSEntity: Spawn From Class inf=086834D0 obj=06267AA0 ent=062673B0
Load Patch sound/animal/pig0 (4102)
passive_sheep: ctor
monster_sheep: init A self=054C3680
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=054C3D70 ent=054C3680
Th 00000BC4 9996 00641500
passive_sheep: ctor
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0865B5B0
mov [esi+248], 115
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04C39D70
call @0x008E2CC0
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x04C39E90
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x08651070
mov [esi+248], 26
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04C3A3A0
call @0x008E2CC0
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x04C3A4C0
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x08651070
mov [esi+248], 9
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04C3A7F0
call @0x008E2A90
mov esi, [ebp+8]
mov [esi+248], 10
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04C3A910
call @0x008E2554
mov [esp+4], eax
call @0x008E2A90
mov [esp+4], eax
call @0x008E16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04C3A520
call @0x008E16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04C39EF0
call @0x008E252C
mov esi, [ebp+8]
mov [esi+248], 118
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04C39FB0
call @0x008E3585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04C3A070
call @0x008E1893
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
monster_sheep: init A self=05242650
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=05242D40 ent=05242650
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0865B5B0
mov [esi+248], 73
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04DD99D0
call @0x008E3585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x04DD9A90
call @0x008E2BEE
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
MainAVIHeader:
dwMicroSecPerFrame=100000
dwMaxBytesPerSec=0
dwPaddingGranularity=0
dwFlags=16
dwTotalFrames=14
dwInitialFrames=0
dwStreams=1
dwSuggestedBufferSize=0
dwWidth=256
dwHeight=256

AVIStreamHeader(0):
fccType=vids
fccHandler=rpza
dwFlags=0
wPriority=0
wLanguage=0
dwInitialFrames=0
dwScale=1024
dwRate=10240
dwStart=0
dwLength=14
dwSuggestedBufferSize=0
dwQuality=0
dwSampleSize=0
rcFrame=left:0 top:0 right:0 bottom:0

BITMAPINFOHEADER(0):
biSize=40
biWidth=256
biHeight=256
biPlanes=1
biBitCount=32
biCompression=azpr
biSizeImage=262144
biXPelsPerMeter=0
biYPelsPerMeter=0
biClrUsed=0
biClrImportant=0

AVI: Index 14 ents
AVI: codec api
passive_pig: ctor
monster_sheep: init A self=06A3C720
BT_SpawnSEntity: Spawn From Class inf=086834D0 obj=06A3CE10 ent=06A3C720
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0865B5B0
mov [esi+248], 84
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x052DC5C0
call @0x008E3585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x052DC680
call @0x008E2E73
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x008E2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_sheep: ctor
monster_sheep: init A self=536B2FE0
BT_SpawnSEntity: Spawn From Class inf=08682EB0 obj=536B36D0 ent=536B2FE0
PDGL: Main Break
app1 shutdown
BGBGC_DeinitThread
GC: Termination Request (bgbgc_spawngc<0)
GC: Collect Loop Exited
