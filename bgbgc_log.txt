CmdLine: '"F:\bgbtech_misc\bgbtech_engine\engine0.exe" '
Th 000000C8 6648 00391FFF
Th 000000D0 8188 008F1500
SpaceNew(0): _flonum_t C0000000..D0000000
SpaceNew(1): _fixint_t D0000000..E0000000
SpaceNew(2): _ustring_t E0000000..E1000000
SpaceNew(3): _usymbol_t E1000000..E2000000
SpaceNew(4): _char_t E2000000..E2010000
mounting F:\bgbtech_misc\bgbtech_engine as /
mounting F:\bgbtech_misc\bgbtech_engine\resource as /
vfexwad_vfmount: No Module Data engine0.exe
DYLL_MetaPath_LoadDB2: engine0_meta.txt engine0
Load DB 'engine0_meta.txt': fail
vfexwad_vfmount: No Module Data ntdll.dll
DYLL_MetaPath_LoadDB2: ntdll_meta.txt ntdll
Load DB 'ntdll_meta.txt': fail
vfexwad_vfmount: No Module Data kernel32.dll
DYLL_MetaPath_LoadDB2: kernel32_meta.txt kernel32
Load DB 'kernel32_meta.txt': fail
vfexwad_vfmount: No Module Data KERNELBASE.dll
DYLL_MetaPath_LoadDB2: KERNELBASE_meta.txt KERNELBASE
Load DB 'KERNELBASE_meta.txt': fail
Got Module Data 08570020 905216
DYLL_MetaPath_LoadDB2: btgecm_meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm (14297 keys, 51438 lines)
Load DB 'exwad/btgecm/meta.txt': pass
vfexwad_vfmount: No Module Data bgbbtjpg.dll
DYLL_MetaPath_LoadDB2: bgbbtjpg_meta.txt bgbbtjpg
Load DB 'bgbbtjpg_meta.txt': fail
vfexwad_vfmount: No Module Data bgbdy.dll
DYLL_MetaPath_LoadDB2: bgbdy_meta.txt bgbdy
Load DB 'bgbdy_meta.txt': fail
vfexwad_vfmount: No Module Data bgbgc.dll
DYLL_MetaPath_LoadDB2: bgbgc_meta.txt bgbgc
Load DB 'bgbgc_meta.txt': fail
vfexwad_vfmount: No Module Data bgbasm.dll
DYLL_MetaPath_LoadDB2: bgbasm_meta.txt bgbasm
Load DB 'bgbasm_meta.txt': fail
vfexwad_vfmount: No Module Data zpack.dll
DYLL_MetaPath_LoadDB2: zpack_meta.txt zpack
Load DB 'zpack_meta.txt': fail
vfexwad_vfmount: No Module Data libbgbmid.dll
DYLL_MetaPath_LoadDB2: libbgbmid_meta.txt libbgbmid
DYLL_MetaPath_LoadDB2: bgbmid_meta.txt libbgbmid
Load DB 'libbgbmid_meta.txt': fail
vfexwad_vfmount: No Module Data libvecmath.dll
DYLL_MetaPath_LoadDB2: libvecmath_meta.txt libvecmath
DYLL_MetaPath_LoadDB2: vecmath_meta.txt libvecmath
Load DB 'libvecmath_meta.txt': fail
vfexwad_vfmount: No Module Data WINMM.dll
DYLL_MetaPath_LoadDB2: WINMM_meta.txt WINMM
Load DB 'WINMM_meta.txt': fail
vfexwad_vfmount: No Module Data msvcrt.dll
DYLL_MetaPath_LoadDB2: msvcrt_meta.txt msvcrt
Load DB 'msvcrt_meta.txt': fail
vfexwad_vfmount: No Module Data USER32.dll
DYLL_MetaPath_LoadDB2: USER32_meta.txt USER32
Load DB 'USER32_meta.txt': fail
vfexwad_vfmount: No Module Data GDI32.dll
DYLL_MetaPath_LoadDB2: GDI32_meta.txt GDI32
Load DB 'GDI32_meta.txt': fail
vfexwad_vfmount: No Module Data LPK.dll
DYLL_MetaPath_LoadDB2: LPK_meta.txt LPK
Load DB 'LPK_meta.txt': fail
vfexwad_vfmount: No Module Data USP10.dll
DYLL_MetaPath_LoadDB2: USP10_meta.txt USP10
Load DB 'USP10_meta.txt': fail
vfexwad_vfmount: No Module Data ADVAPI32.dll
DYLL_MetaPath_LoadDB2: ADVAPI32_meta.txt ADVAPI32
Load DB 'ADVAPI32_meta.txt': fail
vfexwad_vfmount: No Module Data sechost.dll
DYLL_MetaPath_LoadDB2: sechost_meta.txt sechost
Load DB 'sechost_meta.txt': fail
vfexwad_vfmount: No Module Data RPCRT4.dll
DYLL_MetaPath_LoadDB2: RPCRT4_meta.txt RPCRT4
Load DB 'RPCRT4_meta.txt': fail
vfexwad_vfmount: No Module Data SspiCli.dll
DYLL_MetaPath_LoadDB2: SspiCli_meta.txt SspiCli
Load DB 'SspiCli_meta.txt': fail
vfexwad_vfmount: No Module Data CRYPTBASE.dll
DYLL_MetaPath_LoadDB2: CRYPTBASE_meta.txt CRYPTBASE
Load DB 'CRYPTBASE_meta.txt': fail
vfexwad_vfmount: No Module Data MSVFW32.dll
DYLL_MetaPath_LoadDB2: MSVFW32_meta.txt MSVFW32
Load DB 'MSVFW32_meta.txt': fail
vfexwad_vfmount: No Module Data SHELL32.dll
DYLL_MetaPath_LoadDB2: SHELL32_meta.txt SHELL32
Load DB 'SHELL32_meta.txt': fail
vfexwad_vfmount: No Module Data SHLWAPI.dll
DYLL_MetaPath_LoadDB2: SHLWAPI_meta.txt SHLWAPI
Load DB 'SHLWAPI_meta.txt': fail
vfexwad_vfmount: No Module Data COMCTL32.dll
DYLL_MetaPath_LoadDB2: COMCTL32_meta.txt COMCTL32
Load DB 'COMCTL32_meta.txt': fail
vfexwad_vfmount: No Module Data bgbsvm.dll
DYLL_MetaPath_LoadDB2: bgbsvm_meta.txt bgbsvm
Load DB 'bgbsvm_meta.txt': fail
vfexwad_vfmount: No Module Data bgbnet.dll
DYLL_MetaPath_LoadDB2: bgbnet_meta.txt bgbnet
Load DB 'bgbnet_meta.txt': fail
vfexwad_vfmount: No Module Data WSOCK32.dll
DYLL_MetaPath_LoadDB2: WSOCK32_meta.txt WSOCK32
Load DB 'WSOCK32_meta.txt': fail
vfexwad_vfmount: No Module Data WS2_32.dll
DYLL_MetaPath_LoadDB2: WS2_32_meta.txt WS2_32
Load DB 'WS2_32_meta.txt': fail
vfexwad_vfmount: No Module Data NSI.dll
DYLL_MetaPath_LoadDB2: NSI_meta.txt NSI
Load DB 'NSI_meta.txt': fail
vfexwad_vfmount: No Module Data ole32.dll
DYLL_MetaPath_LoadDB2: ole32_meta.txt ole32
Load DB 'ole32_meta.txt': fail
Got Module Data 08950020 1417216
DYLL_MetaPath_LoadDB2: liblbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: lbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2 (23061 keys, 82448 lines)
Load DB 'exwad/liblbxgl2/meta.txt': pass
vfexwad_vfmount: No Module Data libpdgl.dll
DYLL_MetaPath_LoadDB2: libpdgl_meta.txt libpdgl
DYLL_MetaPath_LoadDB2: pdgl_meta.txt libpdgl
Load DB 'libpdgl_meta.txt': fail
vfexwad_vfmount: No Module Data libpdglui.dll
DYLL_MetaPath_LoadDB2: libpdglui_meta.txt libpdglui
DYLL_MetaPath_LoadDB2: pdglui_meta.txt libpdglui
Load DB 'libpdglui_meta.txt': fail
vfexwad_vfmount: No Module Data SETUPAPI.dll
DYLL_MetaPath_LoadDB2: SETUPAPI_meta.txt SETUPAPI
Load DB 'SETUPAPI_meta.txt': fail
vfexwad_vfmount: No Module Data CFGMGR32.dll
DYLL_MetaPath_LoadDB2: CFGMGR32_meta.txt CFGMGR32
Load DB 'CFGMGR32_meta.txt': fail
vfexwad_vfmount: No Module Data OLEAUT32.dll
DYLL_MetaPath_LoadDB2: OLEAUT32_meta.txt OLEAUT32
Load DB 'OLEAUT32_meta.txt': fail
vfexwad_vfmount: No Module Data DEVOBJ.dll
DYLL_MetaPath_LoadDB2: DEVOBJ_meta.txt DEVOBJ
Load DB 'DEVOBJ_meta.txt': fail
vfexwad_vfmount: No Module Data IMM32.DLL
DYLL_MetaPath_LoadDB2: IMM32_meta.txt IMM32
Load DB 'IMM32_meta.txt': fail
vfexwad_vfmount: No Module Data MSCTF.dll
DYLL_MetaPath_LoadDB2: MSCTF_meta.txt MSCTF
Load DB 'MSCTF_meta.txt': fail
DYLL_LoadLibraryI: Load game_base.dll
DYLL_LoadLibraryI: Load resource/game_base.dll
DYLL_MetaPath_LoadDB2: cc_usr/metapath.txt (null)
mounting F:\bgbtech_misc\bgbtech_engine\resource_mini as /
DYLL_LoadLibraryI: Load opengl32.dll
DYLL_LoadLibraryI: Success Loading opengl32.dll
vfexwad_vfmount: No Module Data opengl32.dll
DYLL_MetaPath_LoadDB2: opengl32_meta.txt opengl32
Load DB 'opengl32': fail
DYLL_LoadLibrary: Loaded opengl32
OpenGL Vendor=ATI Technologies Inc.
OpenGL Renderer=AMD Radeon R9 200 Series
OpenGL Version=4.5.13399 Compatibility Profile Context 15.200.1062.1004
OpenGL Extensions=<[[
GL_AMDX_debug_output GL_AMD_blend_minmax_factor GL_AMD_conservative_depth GL_AMD_debug_output GL_AMD_depth_clamp_separate GL_AMD_draw_buffers_blend GL_AMD_framebuffer_sample_positions GL_AMD_gcn_shader GL_AMD_gpu_shader_int64 GL_AMD_interleaved_elements GL_AMD_multi_draw_indirect GL_AMD_name_gen_delete GL_AMD_performance_monitor GL_AMD_pinned_memory GL_AMD_query_buffer_object GL_AMD_sample_positions GL_AMD_seamless_cubemap_per_texture GL_AMD_shader_atomic_counter_ops GL_AMD_shader_stencil_export GL_AMD_shader_stencil_value_export GL_AMD_shader_trace GL_AMD_shader_trinary_minmax GL_AMD_sparse_texture GL_AMD_stencil_operation_extended GL_AMD_texture_cube_map_array GL_AMD_texture_texture4 GL_AMD_transform_feedback3_lines_triangles GL_AMD_transform_feedback4 GL_AMD_vertex_shader_layer GL_AMD_vertex_shader_viewport_index GL_ARB_ES2_compatibility GL_ARB_ES3_1_compatibility GL_ARB_ES3_compatibility GL_ARB_arrays_of_arrays GL_ARB_base_instance GL_ARB_bindless_texture GL_ARB_blend_func_extended GL_ARB_buffer_storage GL_ARB_clear_buffer_object GL_ARB_clear_texture GL_ARB_clip_control GL_ARB_color_buffer_float GL_ARB_compatibility GL_ARB_compressed_texture_pixel_storage GL_ARB_compute_shader GL_ARB_conditional_render_inverted GL_ARB_conservative_depth GL_ARB_copy_buffer GL_ARB_copy_image GL_ARB_cull_distance GL_ARB_debug_output GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_derivative_control GL_ARB_direct_state_access GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_elements_base_vertex GL_ARB_draw_indirect GL_ARB_draw_instanced GL_ARB_enhanced_layouts GL_ARB_explicit_attrib_location GL_ARB_explicit_uniform_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_layer_viewport GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_get_program_binary GL_ARB_get_texture_sub_image GL_ARB_gpu_shader5 GL_ARB_gpu_shader_fp64 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_indirect_parameters GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_internalformat_query2 GL_ARB_invalidate_subdata GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multi_bind GL_ARB_multi_draw_indirect GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_occlusion_query2 GL_ARB_pipeline_statistics_query GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_program_interface_query GL_ARB_provoking_vertex GL_ARB_query_buffer_object GL_ARB_robust_buffer_access_behavior GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_seamless_cubemap_per_texture GL_ARB_separate_shader_objects GL_ARB_shader_atomic_counters GL_ARB_shader_bit_encoding GL_ARB_shader_draw_parameters GL_ARB_shader_group_vote GL_ARB_shader_image_load_store GL_ARB_shader_image_size GL_ARB_shader_objects GL_ARB_shader_precision GL_ARB_shader_stencil_export GL_ARB_shader_storage_buffer_object GL_ARB_shader_subroutine GL_ARB_shader_texture_image_samples GL_ARB_shader_texture_lod GL_ARB_shading_language_100 GL_ARB_shading_language_420pack GL_ARB_shading_language_packing GL_ARB_shadow GL_ARB_shadow_ambient GL_ARB_sparse_buffer GL_ARB_sparse_texture GL_ARB_stencil_texturing GL_ARB_sync GL_ARB_tessellation_shader GL_ARB_texture_barrier GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_range GL_ARB_texture_compression GL_ARB_texture_compression_bptc GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_cube_map_array GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_levels GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_snorm GL_ARB_texture_stencil8 GL_ARB_texture_storage GL_ARB_texture_storage_multisample GL_ARB_texture_swizzle GL_ARB_texture_view GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback3 GL_ARB_transform_feedback_instanced GL_ARB_transform_feedback_overflow_query GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_binding GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_envmap_bumpmap GL_ATI_fragment_shader GL_ATI_separate_stencil GL_ATI_texture_compression_3dc GL_ATI_texture_env_combine3 GL_ATI_texture_float GL_ATI_texture_mirror_once GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_copy_buffer GL_EXT_copy_texture GL_EXT_depth_bounds_test GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_histogram GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_polygon_offset_clamp GL_EXT_provoking_vertex GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_specular_color GL_EXT_shader_image_load_store GL_EXT_shader_integer_mix GL_EXT_shadow_funcs GL_EXT_stencil_wrap GL_EXT_subtexture GL_EXT_texgen_reflection GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_bptc GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_add GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_rectangle GL_EXT_texture_sRGB GL_EXT_texture_sRGB_decode GL_EXT_texture_shared_exponent GL_EXT_texture_snorm GL_EXT_texture_storage GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_EXT_vertex_attrib_64bit GL_IBM_texture_mirrored_repeat GL_INTEL_fragment_shader_ordering GL_KHR_context_flush_control GL_KHR_debug GL_KHR_robust_buffer_access_behavior GL_KHR_robustness GL_KTX_buffer_region GL_NV_blend_square GL_NV_conditional_render GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_depth_buffer_float GL_NV_explicit_multisample GL_NV_float_buffer GL_NV_half_float GL_NV_primitive_restart GL_NV_texgen_reflection GL_NV_texture_barrier GL_OES_EGL_image GL_SGIS_generate_mipmap GL_SGIS_texture_edge_clamp GL_SGIS_texture_lod GL_SUN_multi_draw_arrays GL_WIN_swap_hint WGL_EXT_swap_control ]]>

PDGL: Startup
loading font 'unicode':'fonts/unifont.bfn'
loading font 'fixed_B':'fonts/fixed_b.bfn'
loading font 'fixed_16px':'fonts/fixed_cp437_16px.bfn'
loading font 'fixed_32px':'fonts/fixed_32px.bfn'
loading font 'fixed_64px':'fonts/fixed_64px.bfn'
loading font 'fixed':'fonts/fixed_cp437_8px.bfn'
loading font 'fixed_cp437_8px':'fonts/fixed_cp437_8px.bfn'
loading font 'gfx':'fonts/gfx.bfn'
Load Patch instruments/acpiano (0)
LBXGL_Particle_Init
PDGL: Textures Init
PDGL_InitShader
PDGL_InitShader: OK
DYLL_LoadLibraryI: Load clientx86.dll
DYLL_LoadLibraryI: Load resource/clientx86.dll
DYLL_LoadLibraryI: Success Loading resource/clientx86.dll
Got Module Data 0B5C0020 536576
DYLL_MetaPath_LoadDB2: clientx86_meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86 (23061 keys, 82448 lines)
Load DB 'clientx86': pass
DYLL_LoadLibrary: Loaded clientx86
BTGE_ClientInitFunc: BTCL_NewWorld Pass 0FC412DF
stmt: (dbgmark "bsvm/init.bs" 1) -> (dbgmark "bsvm/init.bs" 1)
stmt: (flag extern (import "bsvm/init/Exceptions")) -> (flag extern (import "bsvm/init/Exceptions"))
stmt: (linenum 2) -> (linenum 2)
expr: (flag extern (import "bsvm/init/Errors")) -> (flag extern (import "bsvm/init/Errors"))
BLK (null), SA No, Capture=Yes
07148D20 02 0101         dbgmark "bsvm/init.bs" 1 
07148D23 9A 0203         import "bsvm/init/Exceptions" Ce 
07148D26 05 02           ln 2 
07148D28 9A 0403         import "bsvm/init/Errors" Ce 
07148D2B 42              push_null 
07148D2C 1A              clearenv 
07148D2D 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 1) -> (dbgmark "bsvm/init/Exceptions.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin)))))) -> (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin))))))
expr: (rlambda Exception () (begin)) -> (rlambda Exception () (begin))
expr: (begin) -> ()
BLK Exception, SA No, Capture=Yes
0714ABF0 42              push_null 
0714ABF1 1A              clearenv 
0714ABF2 29              ret 

expr: (rlambda Exception (str) (begin)) -> (rlambda Exception (str) (begin))
expr: (begin) -> ()
BLK Exception, SA Yes, Capture=Yes
0714B500 42              push_null 
0714B501 1A              clearenv 
0714B502 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 11) -> (dbgmark "bsvm/init/Exceptions.bs" 11)
stmt: (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))))))) -> (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))))))
expr: (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))) -> (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 14) -> (dbgmark "bsvm/init/Exceptions.bs" 14)
expr: (funcall super) -> (funcall super)
BLK NullPointerException, SA No, Capture=Yes
0714C010 02 010E         dbgmark "bsvm/init/Exceptions.bs" 14 
0714C013 20              mark 
0714C014 C20E            call_super 
0714C016 1A              clearenv 
0714C017 29              ret 

expr: (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))) -> (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 16) -> (dbgmark "bsvm/init/Exceptions.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK NullPointerException, SA Yes, Capture=Yes
0714CA00 02 0110         dbgmark "bsvm/init/Exceptions.bs" 16 
0714CA03 20              mark 
0714CA04 5A 00           lload 0 
0714CA06 C20E            call_super 
0714CA08 1A              clearenv 
0714CA09 29              ret 

stmt: (linenum 19) -> (linenum 19)
stmt: (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))))))) -> (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))))))
expr: (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))) -> (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 22) -> (dbgmark "bsvm/init/Exceptions.bs" 22)
expr: (funcall super) -> (funcall super)
BLK CastFailException, SA No, Capture=Yes
0714D2F0 02 0116         dbgmark "bsvm/init/Exceptions.bs" 22 
0714D2F3 20              mark 
0714D2F4 C20E            call_super 
0714D2F6 1A              clearenv 
0714D2F7 29              ret 

expr: (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))) -> (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 24) -> (dbgmark "bsvm/init/Exceptions.bs" 24)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK CastFailException, SA Yes, Capture=Yes
0714DBE0 02 0118         dbgmark "bsvm/init/Exceptions.bs" 24 
0714DBE3 20              mark 
0714DBE4 5A 00           lload 0 
0714DBE6 C20E            call_super 
0714DBE8 1A              clearenv 
0714DBE9 29              ret 

stmt: (linenum 27) -> (linenum 27)
stmt: (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))))))) -> (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))))))
expr: (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))) -> (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 30) -> (dbgmark "bsvm/init/Exceptions.bs" 30)
expr: (funcall super) -> (funcall super)
BLK BoundsCheckException, SA No, Capture=Yes
0714E4D0 02 011E         dbgmark "bsvm/init/Exceptions.bs" 30 
0714E4D3 20              mark 
0714E4D4 C20E            call_super 
0714E4D6 1A              clearenv 
0714E4D7 29              ret 

expr: (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))) -> (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 32) -> (dbgmark "bsvm/init/Exceptions.bs" 32)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK BoundsCheckException, SA Yes, Capture=Yes
0714EDC0 02 0120         dbgmark "bsvm/init/Exceptions.bs" 32 
0714EDC3 20              mark 
0714EDC4 5A 00           lload 0 
0714EDC6 C20E            call_super 
0714EDC8 1A              clearenv 
0714EDC9 29              ret 

stmt: (linenum 35) -> (linenum 35)
expr: (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))))))) -> (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))))))
expr: (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))) -> (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 38) -> (dbgmark "bsvm/init/Exceptions.bs" 38)
expr: (funcall super) -> (funcall super)
BLK RightsCheckException, SA No, Capture=Yes
0714F6B0 02 0126         dbgmark "bsvm/init/Exceptions.bs" 38 
0714F6B3 20              mark 
0714F6B4 C20E            call_super 
0714F6B6 1A              clearenv 
0714F6B7 29              ret 

expr: (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))) -> (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 40) -> (dbgmark "bsvm/init/Exceptions.bs" 40)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK RightsCheckException, SA Yes, Capture=Yes
0714FFA0 02 0128         dbgmark "bsvm/init/Exceptions.bs" 40 
0714FFA3 20              mark 
0714FFA4 5A 00           lload 0 
0714FFA6 C20E            call_super 
0714FFA8 1A              clearenv 
0714FFA9 29              ret 

BLK (null), SA No, Capture=Yes
071500C0 02 0101         dbgmark "bsvm/init/Exceptions.bs" 1 
071500C3 C200 0200       begin_package bsvm/init () 
071500C7 05 03           ln 3 
071500C9 C202 030004     begin_class Exception () p 
071500CE 10 05           push #!<svm_blk_t:0714AB70> 
071500D0 97 030604       tybind Exception #"()r" p 
071500D4 10 07           push #!<svm_blk_t:0714B480> 
071500D6 97 030804       tybind Exception #"(r)r" p 
071500DA C206            end_class 
071500DC 11              pop 
071500DD 02 010B         dbgmark "bsvm/init/Exceptions.bs" 11 
071500E0 C202 090304     begin_class NullPointerException Exception p 
071500E5 10 0A           push #!<svm_blk_t:0714BF90> 
071500E7 97 090604       tybind NullPointerException #"()r" p 
071500EB 10 0B           push #!<svm_blk_t:0714C980> 
071500ED 97 090804       tybind NullPointerException #"(r)r" p 
071500F1 C206            end_class 
071500F3 11              pop 
071500F4 05 13           ln 19 
071500F6 C202 0C0304     begin_class CastFailException Exception p 
071500FB 10 0D           push #!<svm_blk_t:0714D270> 
071500FD 97 0C0604       tybind CastFailException #"()r" p 
07150101 10 0E           push #!<svm_blk_t:0714DB60> 
07150103 97 0C0804       tybind CastFailException #"(r)r" p 
07150107 C206            end_class 
07150109 11              pop 
0715010A 05 1B           ln 27 
0715010C C202 0F0304     begin_class BoundsCheckException Exception p 
07150111 10 10           push #!<svm_blk_t:0714E450> 
07150113 97 0F0604       tybind BoundsCheckException #"()r" p 
07150117 10 11           push #!<svm_blk_t:0714ED40> 
07150119 97 0F0804       tybind BoundsCheckException #"(r)r" p 
0715011D C206            end_class 
0715011F 11              pop 
07150120 05 23           ln 35 
07150122 C202 120304     begin_class RightsCheckException Exception p 
07150127 10 13           push #!<svm_blk_t:0714F630> 
07150129 97 120604       tybind RightsCheckException #"()r" p 
0715012D 10 14           push #!<svm_blk_t:0714FF20> 
0715012F 97 120804       tybind RightsCheckException #"(r)r" p 
07150133 C206            end_class 
07150135 C204            end_package 
07150137 11              pop 
07150138 29              ret 

stmt: (dbgmark "bsvm/init/Errors.bs" 1) -> (dbgmark "bsvm/init/Errors.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))))))) -> (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))))))
expr: (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))) -> (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 6) -> (dbgmark "bsvm/init/Errors.bs" 6)
expr: (funcall super) -> (funcall super)
BLK Error, SA No, Capture=Yes
07154F70 02 0106         dbgmark "bsvm/init/Errors.bs" 6 
07154F73 20              mark 
07154F74 C20E            call_super 
07154F76 1A              clearenv 
07154F77 29              ret 

expr: (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))) -> (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 8) -> (dbgmark "bsvm/init/Errors.bs" 8)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK Error, SA Yes, Capture=Yes
07155860 02 0108         dbgmark "bsvm/init/Errors.bs" 8 
07155863 20              mark 
07155864 5A 00           lload 0 
07155866 C20E            call_super 
07155868 1A              clearenv 
07155869 29              ret 

stmt: (linenum 11) -> (linenum 11)
expr: (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))))))) -> (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))))))
expr: (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))) -> (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 14) -> (dbgmark "bsvm/init/Errors.bs" 14)
expr: (funcall super) -> (funcall super)
BLK IllegalAccessError, SA No, Capture=Yes
07156150 02 010E         dbgmark "bsvm/init/Errors.bs" 14 
07156153 20              mark 
07156154 C20E            call_super 
07156156 1A              clearenv 
07156157 29              ret 

expr: (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))) -> (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 16) -> (dbgmark "bsvm/init/Errors.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK IllegalAccessError, SA Yes, Capture=Yes
07156A40 02 0110         dbgmark "bsvm/init/Errors.bs" 16 
07156A43 20              mark 
07156A44 5A 00           lload 0 
07156A46 C20E            call_super 
07156A48 1A              clearenv 
07156A49 29              ret 

BLK (null), SA No, Capture=Yes
07154EA0 02 0101         dbgmark "bsvm/init/Errors.bs" 1 
07154EA3 C200 0200       begin_package bsvm/init () 
07154EA7 05 03           ln 3 
07154EA9 C202 030405     begin_class Error Exception p 
07154EAE 10 06           push #!<svm_blk_t:07154EF0> 
07154EB0 97 030705       tybind Error #"()r" p 
07154EB4 10 08           push #!<svm_blk_t:071557E0> 
07154EB6 97 030905       tybind Error #"(r)r" p 
07154EBA C206            end_class 
07154EBC 11              pop 
07154EBD 05 0B           ln 11 
07154EBF C202 0A0305     begin_class IllegalAccessError Error p 
07154EC4 10 0B           push #!<svm_blk_t:071560D0> 
07154EC6 97 0A0705       tybind IllegalAccessError #"()r" p 
07154ECA 10 0C           push #!<svm_blk_t:071569C0> 
07154ECC 97 0A0905       tybind IllegalAccessError #"(r)r" p 
07154ED0 C206            end_class 
07154ED2 C204            end_package 
07154ED4 11              pop 
07154ED5 29              ret 

stmt: (dbgmark "game_cl/main.bs" 1) -> (dbgmark "game_cl/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: "BGBScript Client Start\n" -> "BGBScript Client Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))))) -> (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))) -> (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))) -> (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")) -> (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))
stmt: (dbgmark "game_cl/main.bs" 9) -> (dbgmark "game_cl/main.bs" 9)
expr: (funcall printf "BTCL_ScriptInit: Called\n") -> (funcall printf "BTCL_ScriptInit: Called\n")
expr: "BTCL_ScriptInit: Called\n" -> "BTCL_ScriptInit: Called\n"
BLK BTCL_ScriptInit, SA No, Capture=Yes
071592D0 02 0109         dbgmark "game_cl/main.bs" 9 
071592D3 2A 02           tymark #"(Cs)r" 
071592D5 10 03           push "BTCL_ScriptInit: Called\n" 
071592D7 24 04           tailcall_s gc_printf 
071592D9 1A              clearenv 
071592DA 29              ret 

stmt: (linenum 12) -> (linenum 12)
stmt: (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))) -> (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))
expr: (rlambda (cast void BTCL_ScriptDrawUI) () (begin)) -> (rlambda (cast void BTCL_ScriptDrawUI) () (begin))
expr: (begin) -> ()
BLK BTCL_ScriptDrawUI, SA No, Capture=Yes
07159BE0 42              push_null 
07159BE1 1A              clearenv 
07159BE2 29              ret 

BLK (null), SA No, Capture=Yes
07159C90 02 0101         dbgmark "game_cl/main.bs" 1 
07159C93 9A 0203         import "C" n 
07159C96 05 03           ln 3 
07159C98 2A 04           tymark #"(Cs)r" 
07159C9A 10 05           push "BGBScript Client Start\n" 
07159C9C 23 06           call_s gc_printf 
07159C9E 11              pop 
07159C9F 05 05           ln 5 
07159CA1 C200 0703       begin_package C/game_cl/main n 
07159CA5 05 07           ln 7 
07159CA7 10 08           push #!<svm_blk_t:07159240> 
07159CA9 97 090A00       tybind BTCL_ScriptInit #"()v" () 
07159CAD 05 0C           ln 12 
07159CAF 10 0B           push #!<svm_blk_t:07159B60> 
07159CB1 97 0C0A00       tybind BTCL_ScriptDrawUI #"()v" () 
07159CB5 C204            end_package 
07159CB7 11              pop 
07159CB8 29              ret 

BGBScript Client Start
BSVM_Pop: Stack Underflow @ 07159C90
BTCL_ScriptInit: Called
DYLL_LoadLibraryI: Load serverx86.dll
DYLL_LoadLibraryI: Load resource/serverx86.dll
DYLL_LoadLibraryI: Success Loading resource/serverx86.dll
Got Module Data 0E810020 798720
DYLL_MetaPath_LoadDB2: serverx86_meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86 (16002 keys, 57329 lines)
Load DB 'serverx86': pass
DYLL_LoadLibrary: Loaded serverx86
BTGE_ServerInitFunc: btsvBindWorld Pass 0B6C1EF1
BTGE_ClientInitFunc: BTCL_BindWorld Pass 0FC41091
BTGE_ClientInitFunc: BTCL_BindBrushWorld Pass 0FC4119A
Th 00001C40 7784 012F100F
PDGL: Main
Net Init Low (Winsock).
  hostname=GAMMA4-W7
  IPv4=192.168.1.100
TCP Initialized
Meta0_Init
BSXRP Init
Meta0: new port 18512, service bsxrp-server
BTGE_ClientInitFunc: BTCL_HandleInput Pass 0FC410DC
BTGE_ServerInitFunc: btsvStepWorld Pass 0B6C1D61
BTGE_ServerInitFunc: btsvComposeUpdate Pass 0B6C1C71
BTGE_ServerInitFunc: btsvFinishUpdate Pass 0B6C18A2
PDGLUI_InitRift: No Device
BTGE_ClientInitFunc: BTCL_StepWorld Pass 0FC41118
BTGE_ClientInitFunc: BTCL_SetupClientFrame Pass 0FC41316
Texture: Missing-Base: textures/env/space1
LBXGL_SkyBox_LoadSky: space1
BTGE_ClientInitFunc: BTCL_Draw2D Pass 0FC4116D
new frag
new frag
SoundRec: Sound overrun
Eval:  load("game/main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/main.bs") -> (funcall load "game/main.bs")
expr: "game/main.bs" -> "game/main.bs"
BLK (null), SA No, Capture=Yes
073E4040 02 0101         dbgmark "<eval-str>" 1 
073E4043 2A 02           tymark #"(Cs)r" 
073E4045 10 03           push "game/main.bs" 
073E4047 24 04           tailcall_s load 
073E4049 1A              clearenv 
073E404A 29              ret 

stmt: (dbgmark "game/main.bs" 6) -> (dbgmark "game/main.bs" 6)
stmt: (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)) -> (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))
stmt: (dbgmark "game/main.bs" 8) -> (dbgmark "game/main.bs" 8)
stmt: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: "menu" -> "menu"
stmt: (linenum 10) -> (linenum 10)
stmt: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: "&New Game" -> "&New Game"
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: "ng_peaceful" -> "ng_peaceful"
expr: "Peaceful" -> "Peaceful"
stmt: (linenum 12) -> (linenum 12)
stmt: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: "ng_easy" -> "ng_easy"
expr: "Easy" -> "Easy"
stmt: (linenum 13) -> (linenum 13)
stmt: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: "ng_medium" -> "ng_medium"
expr: "Medium" -> "Medium"
stmt: (linenum 14) -> (linenum 14)
stmt: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: "ng_hard" -> "ng_hard"
expr: "Hard" -> "Hard"
stmt: (linenum 15) -> (linenum 15)
stmt: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: "ng_nightmare" -> "ng_nightmare"
expr: "Nightmare" -> "Nightmare"
stmt: (linenum 16) -> (linenum 16)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 18) -> (linenum 18)
stmt: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: "&Load Game" -> "&Load Game"
stmt: (linenum 19) -> (linenum 19)
stmt: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: "sv_load1" -> "sv_load1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 20) -> (linenum 20)
stmt: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: "sv_load2" -> "sv_load2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 21) -> (linenum 21)
stmt: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: "sv_load3" -> "sv_load3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 22) -> (linenum 22)
stmt: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: "sv_load4" -> "sv_load4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 23) -> (linenum 23)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 25) -> (linenum 25)
stmt: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: "&Save Game" -> "&Save Game"
stmt: (linenum 26) -> (linenum 26)
stmt: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: "sv_save1" -> "sv_save1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 27) -> (linenum 27)
stmt: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: "sv_save2" -> "sv_save2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 28) -> (linenum 28)
stmt: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: "sv_save3" -> "sv_save3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 29) -> (linenum 29)
stmt: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: "sv_save4" -> "sv_save4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 30) -> (linenum 30)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: "Help" -> "Help"
stmt: (linenum 34) -> (linenum 34)
stmt: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: "help_generic" -> "help_generic"
expr: "General" -> "General"
stmt: (linenum 35) -> (linenum 35)
stmt: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: "help_about" -> "help_about"
expr: "About" -> "About"
stmt: (linenum 36) -> (linenum 36)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 38) -> (linenum 38)
expr: (funcall PDGLUI_EndMenu) -> (funcall PDGLUI_EndMenu)
BLK Game_CreateMainMenu, SA No, Capture=Yes
073E6090 02 0108         dbgmark "game/main.bs" 8 
073E6093 2A 02           tymark #"(Cs)r" 
073E6095 10 03           push "menu" 
073E6097 23 04           call_s PDGLUI_BeginMenu 
073E6099 11              pop 
073E609A 05 0A           ln 10 
073E609C 2A 02           tymark #"(Cs)r" 
073E609E 10 05           push "&New Game" 
073E60A0 23 06           call_s PDGLUI_BeginSubMenu 
073E60A2 11              pop 
073E60A3 05 0B           ln 11 
073E60A5 2A 07           tymark #"(CsCs)r" 
073E60A7 10 08           push "ng_peaceful" 
073E60A9 10 09           push "Peaceful" 
073E60AB 23 0A           call_s PDGLUI_MenuItem 
073E60AD 11              pop 
073E60AE 05 0C           ln 12 
073E60B0 2A 07           tymark #"(CsCs)r" 
073E60B2 10 0B           push "ng_easy" 
073E60B4 10 0C           push "Easy" 
073E60B6 23 0A           call_s PDGLUI_MenuItem 
073E60B8 11              pop 
073E60B9 05 0D           ln 13 
073E60BB 2A 07           tymark #"(CsCs)r" 
073E60BD 10 0D           push "ng_medium" 
073E60BF 10 0E           push "Medium" 
073E60C1 23 0A           call_s PDGLUI_MenuItem 
073E60C3 11              pop 
073E60C4 05 0E           ln 14 
073E60C6 2A 07           tymark #"(CsCs)r" 
073E60C8 10 0F           push "ng_hard" 
073E60CA 10 10           push "Hard" 
073E60CC 23 0A           call_s PDGLUI_MenuItem 
073E60CE 11              pop 
073E60CF 05 0F           ln 15 
073E60D1 2A 07           tymark #"(CsCs)r" 
073E60D3 10 11           push "ng_nightmare" 
073E60D5 10 12           push "Nightmare" 
073E60D7 23 0A           call_s PDGLUI_MenuItem 
073E60D9 11              pop 
073E60DA 05 10           ln 16 
073E60DC 2A 13           tymark #"()r" 
073E60DE 23 14           call_s PDGLUI_EndSubMenu 
073E60E0 11              pop 
073E60E1 05 12           ln 18 
073E60E3 2A 02           tymark #"(Cs)r" 
073E60E5 10 15           push "&Load Game" 
073E60E7 23 06           call_s PDGLUI_BeginSubMenu 
073E60E9 11              pop 
073E60EA 05 13           ln 19 
073E60EC 2A 07           tymark #"(CsCs)r" 
073E60EE 10 16           push "sv_load1" 
073E60F0 10 17           push "Game 1" 
073E60F2 23 0A           call_s PDGLUI_MenuItem 
073E60F4 11              pop 
073E60F5 05 14           ln 20 
073E60F7 2A 07           tymark #"(CsCs)r" 
073E60F9 10 18           push "sv_load2" 
073E60FB 10 19           push "Game 2" 
073E60FD 23 0A           call_s PDGLUI_MenuItem 
073E60FF 11              pop 
073E6100 05 15           ln 21 
073E6102 2A 07           tymark #"(CsCs)r" 
073E6104 10 1A           push "sv_load3" 
073E6106 10 1B           push "Game 3" 
073E6108 23 0A           call_s PDGLUI_MenuItem 
073E610A 11              pop 
073E610B 05 16           ln 22 
073E610D 2A 07           tymark #"(CsCs)r" 
073E610F 10 1C           push "sv_load4" 
073E6111 10 1D           push "Game 4" 
073E6113 23 0A           call_s PDGLUI_MenuItem 
073E6115 11              pop 
073E6116 05 17           ln 23 
073E6118 2A 13           tymark #"()r" 
073E611A 23 14           call_s PDGLUI_EndSubMenu 
073E611C 11              pop 
073E611D 05 19           ln 25 
073E611F 2A 02           tymark #"(Cs)r" 
073E6121 10 1E           push "&Save Game" 
073E6123 23 06           call_s PDGLUI_BeginSubMenu 
073E6125 11              pop 
073E6126 05 1A           ln 26 
073E6128 2A 07           tymark #"(CsCs)r" 
073E612A 10 1F           push "sv_save1" 
073E612C 10 17           push "Game 1" 
073E612E 23 0A           call_s PDGLUI_MenuItem 
073E6130 11              pop 
073E6131 05 1B           ln 27 
073E6133 2A 07           tymark #"(CsCs)r" 
073E6135 10 20           push "sv_save2" 
073E6137 10 19           push "Game 2" 
073E6139 23 0A           call_s PDGLUI_MenuItem 
073E613B 11              pop 
073E613C 05 1C           ln 28 
073E613E 2A 07           tymark #"(CsCs)r" 
073E6140 10 21           push "sv_save3" 
073E6142 10 1B           push "Game 3" 
073E6144 23 0A           call_s PDGLUI_MenuItem 
073E6146 11              pop 
073E6147 05 1D           ln 29 
073E6149 2A 07           tymark #"(CsCs)r" 
073E614B 10 22           push "sv_save4" 
073E614D 10 1D           push "Game 4" 
073E614F 23 0A           call_s PDGLUI_MenuItem 
073E6151 11              pop 
073E6152 05 1E           ln 30 
073E6154 2A 13           tymark #"()r" 
073E6156 23 14           call_s PDGLUI_EndSubMenu 
073E6158 11              pop 
073E6159 05 21           ln 33 
073E615B 2A 02           tymark #"(Cs)r" 
073E615D 10 23           push "Help" 
073E615F 23 06           call_s PDGLUI_BeginSubMenu 
073E6161 11              pop 
073E6162 05 22           ln 34 
073E6164 2A 07           tymark #"(CsCs)r" 
073E6166 10 24           push "help_generic" 
073E6168 10 25           push "General" 
073E616A 23 0A           call_s PDGLUI_MenuItem 
073E616C 11              pop 
073E616D 05 23           ln 35 
073E616F 2A 07           tymark #"(CsCs)r" 
073E6171 10 26           push "help_about" 
073E6173 10 27           push "About" 
073E6175 23 0A           call_s PDGLUI_MenuItem 
073E6177 11              pop 
073E6178 05 24           ln 36 
073E617A 2A 13           tymark #"()r" 
073E617C 23 14           call_s PDGLUI_EndSubMenu 
073E617E 11              pop 
073E617F 05 26           ln 38 
073E6181 2A 13           tymark #"()r" 
073E6183 24 28           tailcall_s PDGLUI_EndMenu 
073E6185 1A              clearenv 
073E6186 29              ret 

stmt: (linenum 41) -> (linenum 41)
stmt: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: "BGBScript Main Start\n" -> "BGBScript Main Start\n"
stmt: (linenum 43) -> (linenum 43)
stmt: (flag extern (import "game_cl/main")) -> (flag extern (import "game_cl/main"))
stmt: (linenum 45) -> (linenum 45)
stmt: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
expr: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
stmt: (linenum 47) -> (linenum 47)
expr: (funcall printf "BGBScript Main End\n") -> (funcall printf "BGBScript Main End\n")
expr: "BGBScript Main End\n" -> "BGBScript Main End\n"
BLK (null), SA No, Capture=Yes
073E6270 02 0106         dbgmark "game/main.bs" 6 
073E6273 10 02           push #!<svm_blk_t:073E5F70> 
073E6275 97 030400       tybind Game_CreateMainMenu #"()r" () 
073E6279 05 29           ln 41 
073E627B 2A 05           tymark #"(Cs)r" 
073E627D 10 06           push "BGBScript Main Start\n" 
073E627F 23 07           call_s gc_printf 
073E6281 11              pop 
073E6282 05 2B           ln 43 
073E6284 9A 0809         import "game_cl/main" Ce 
073E6287 05 2D           ln 45 
073E6289 2A 04           tymark #"()r" 
073E628B 23 03           call_s Game_CreateMainMenu 
073E628D 11              pop 
073E628E 05 2F           ln 47 
073E6290 2A 05           tymark #"(Cs)r" 
073E6292 10 0A           push "BGBScript Main End\n" 
073E6294 24 07           tailcall_s gc_printf 
073E6296 29              ret 

BGBScript Main Start
BGBScript Main End
()
new frag
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x073E2AB0
call @0x0F8918D9
mov [esp+4], eax
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BTGE_ClientInitFunc: BTCL_FlushWorld Pass 0FC412CB
BTGE_ServerInitFunc: BTGE_WorldTeardown Pass 0B6C21D0
BTGE_ClientInitFunc: BTCL_LoadMapFile Pass 0FC41136
BTGE_ServerInitFunc: BTSV_LoadMapFile Pass 0B6C1F82
Map Loaded: 0 brushes, 4 ents, 1 lights
BTGE_ServerInitFunc: btsvSpawnWorld Pass 0B6C1DC0
BT_SpawnWorld 0C158A18
stmt: (dbgmark "game_sv/main.bs" 1) -> (dbgmark "game_sv/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: "BGBScript Server Start\n" -> "BGBScript Server Start\n"
stmt: (linenum 5) -> (linenum 5)
stmt: (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))))) -> (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))) -> (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))) -> (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")) -> (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))
stmt: (dbgmark "game_sv/main.bs" 9) -> (dbgmark "game_sv/main.bs" 9)
expr: (funcall printf "BTSV_ScriptInit: Called\n") -> (funcall printf "BTSV_ScriptInit: Called\n")
expr: "BTSV_ScriptInit: Called\n" -> "BTSV_ScriptInit: Called\n"
BLK BTSV_ScriptInit, SA No, Capture=Yes
073EE880 02 0109         dbgmark "game_sv/main.bs" 9 
073EE883 2A 02           tymark #"(Cs)r" 
073EE885 10 03           push "BTSV_ScriptInit: Called\n" 
073EE887 24 04           tailcall_s gc_printf 
073EE889 1A              clearenv 
073EE88A 29              ret 

stmt: (linenum 13) -> (linenum 13)
stmt: (flag extern (import "game_sv/EntityBase")) -> (flag extern (import "game_sv/EntityBase"))
stmt: (linenum 14) -> (linenum 14)
expr: (flag extern (import "game_sv/MonsterGeneric")) -> (flag extern (import "game_sv/MonsterGeneric"))
BLK (null), SA No, Capture=Yes
073EE930 02 0101         dbgmark "game_sv/main.bs" 1 
073EE933 9A 0203         import "C" n 
073EE936 05 03           ln 3 
073EE938 2A 04           tymark #"(Cs)r" 
073EE93A 10 05           push "BGBScript Server Start\n" 
073EE93C 23 06           call_s gc_printf 
073EE93E 11              pop 
073EE93F 05 05           ln 5 
073EE941 C200 0703       begin_package C/game_sv/main n 
073EE945 05 07           ln 7 
073EE947 10 08           push #!<svm_blk_t:073EE7F0> 
073EE949 97 090A00       tybind BTSV_ScriptInit #"()v" () 
073EE94D C204            end_package 
073EE94F 11              pop 
073EE950 05 0D           ln 13 
073EE952 9A 0B0C         import "game_sv/EntityBase" Ce 
073EE955 05 0E           ln 14 
073EE957 9A 0D0C         import "game_sv/MonsterGeneric" Ce 
073EE95A 42              push_null 
073EE95B 29              ret 

BGBScript Server Start
stmt: (dbgmark "game_sv/EntityBase.bs" 1) -> (dbgmark "game_sv/EntityBase.bs" 1)
stmt: (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin)))))) -> (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin))))))
expr: () -> ()
expr: () -> ()
expr: (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))) -> (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 9) -> (dbgmark "game_sv/EntityBase.bs" 9)
stmt: (set! entity ent) -> (set! entity ent)
expr: ent -> ent
stmt: (linenum 10) -> (linenum 10)
expr: (set! spawnEntity sent) -> (set! spawnEntity sent)
expr: sent -> sent
BLK EntityBase, SA Yes, Capture=Yes
073F1150 02 0109         dbgmark "game_sv/EntityBase.bs" 9 
073F1153 5A 01           lload 1 
073F1155 13 02           store entity 
073F1157 05 0A           ln 10 
073F1159 5A 00           lload 0 
073F115B 30              dup 
073F115C 13 03           store spawnEntity 
073F115E 1A              clearenv 
073F115F 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
073F1A60 42              push_null 
073F1A61 1A              clearenv 
073F1A62 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
073F2350 42              push_null 
073F2351 1A              clearenv 
073F2352 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
073F2C40 42              push_null 
073F2C41 1A              clearenv 
073F2C42 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
073F3530 42              push_null 
073F3531 1A              clearenv 
073F3532 29              ret 

expr: (rlambda die (self other damage) (begin)) -> (rlambda die (self other damage) (begin))
expr: (begin) -> ()
BLK die, SA Yes, Capture=Yes
073F3E40 42              push_null 
073F3E41 1A              clearenv 
073F3E42 29              ret 

expr: (rlambda prethink (self) (begin)) -> (rlambda prethink (self) (begin))
expr: (begin) -> ()
BLK prethink, SA Yes, Capture=Yes
073F4730 42              push_null 
073F4731 1A              clearenv 
073F4732 29              ret 

stmt: (dbgmark "game_sv/EntityBase.bs" 21) -> (dbgmark "game_sv/EntityBase.bs" 21)
expr: (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin)))))) -> (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin))))))
expr: (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))) -> (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 26) -> (dbgmark "game_sv/EntityBase.bs" 26)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK ActorBase, SA Yes, Capture=Yes
073F5020 02 011A         dbgmark "game_sv/EntityBase.bs" 26 
073F5023 20              mark 
073F5024 5A 01           lload 1 
073F5026 5A 00           lload 0 
073F5028 C20E            call_super 
073F502A 1A              clearenv 
073F502B 29              ret 

expr: (rlambda stand (self) (begin)) -> (rlambda stand (self) (begin))
expr: (begin) -> ()
BLK stand, SA Yes, Capture=Yes
073F5910 42              push_null 
073F5911 1A              clearenv 
073F5912 29              ret 

expr: (rlambda walk (self) (begin)) -> (rlambda walk (self) (begin))
expr: (begin) -> ()
BLK walk, SA Yes, Capture=Yes
073F6200 42              push_null 
073F6201 1A              clearenv 
073F6202 29              ret 

expr: (rlambda run (self) (begin)) -> (rlambda run (self) (begin))
expr: (begin) -> ()
BLK run, SA Yes, Capture=Yes
073F6AF0 42              push_null 
073F6AF1 1A              clearenv 
073F6AF2 29              ret 

expr: (rlambda missile (self) (begin)) -> (rlambda missile (self) (begin))
expr: (begin) -> ()
BLK missile, SA Yes, Capture=Yes
073F73E0 42              push_null 
073F73E1 1A              clearenv 
073F73E2 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
073F7CD0 42              push_null 
073F7CD1 1A              clearenv 
073F7CD2 29              ret 

BLK (null), SA No, Capture=Yes
073F7E20 02 0101         dbgmark "game_sv/EntityBase.bs" 1 
073F7E23 C202 020003     begin_class EntityBase () p 
073F7E28 42              push_null 
073F7E29 97 040003       tybind entity () p 
073F7E2D 42              push_null 
073F7E2E 97 050003       tybind spawnEntity () p 
073F7E32 10 06           push #!<svm_blk_t:073F10C0> 
073F7E34 97 020703       tybind EntityBase #"(rr)r" p 
073F7E38 10 08           push #!<svm_blk_t:073F19E0> 
073F7E3A 97 090703       tybind use #"(rr)r" p 
073F7E3E 10 0A           push #!<svm_blk_t:073F22D0> 
073F7E40 97 0B0703       tybind touch #"(rr)r" p 
073F7E44 10 0C           push #!<svm_blk_t:073F2BC0> 
073F7E46 97 0D0703       tybind blocked #"(rr)r" p 
073F7E4A 10 0E           push #!<svm_blk_t:073F34B0> 
073F7E4C 97 0F1003       tybind pain #"(rrr)r" p 
073F7E50 10 11           push #!<svm_blk_t:073F3DC0> 
073F7E52 97 121003       tybind die #"(rrr)r" p 
073F7E56 10 13           push #!<svm_blk_t:073F46B0> 
073F7E58 97 141503       tybind prethink #"(r)r" p 
073F7E5C C206            end_class 
073F7E5E 11              pop 
073F7E5F 02 0115         dbgmark "game_sv/EntityBase.bs" 21 
073F7E62 C202 160203     begin_class ActorBase EntityBase p 
073F7E67 10 17           push #!<svm_blk_t:073F4FA0> 
073F7E69 97 160703       tybind ActorBase #"(rr)r" p 
073F7E6D 10 18           push #!<svm_blk_t:073F5890> 
073F7E6F 97 191503       tybind stand #"(r)r" p 
073F7E73 10 1A           push #!<svm_blk_t:073F6180> 
073F7E75 97 1B1503       tybind walk #"(r)r" p 
073F7E79 10 1C           push #!<svm_blk_t:073F6A70> 
073F7E7B 97 1D1503       tybind run #"(r)r" p 
073F7E7F 10 1E           push #!<svm_blk_t:073F7360> 
073F7E81 97 1F1503       tybind missile #"(r)r" p 
073F7E85 10 20           push #!<svm_blk_t:073F7C50> 
073F7E87 97 211503       tybind melee #"(r)r" p 
073F7E8B C206            end_class 
073F7E8D 29              ret 

Add Slot 073F8F90 entity r
Add Slot 073F9130 spawnEntity r
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 2) -> (dbgmark "game_sv/MonsterGeneric.bs" 2)
stmt: (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))))))) -> (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))))))
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 19) -> (dbgmark "game_sv/MonsterGeneric.bs" 19)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 21) -> (linenum 21)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
073FC200 02 0113         dbgmark "game_sv/MonsterGeneric.bs" 19 
073FC203 2A 02           tymark #"()r" 
073FC205 23 03           call_s btRandom 
073FC207 10 04           push 0.100000 
073FC209 7A 111300       jmp_cond_b ge 073FC220 
073FC20D 05 15           ln 21 
073FC20F 2A 05           tymark #"(rrrrr)r" 
073FC211 5A 00           lload 0 
073FC213 48              push_2 
073FC214 5A 00           lload 0 
073FC216 64 06           loadindex_s snd_idle 
073FC218 59 6400         push_sv_f 1 
073FC21B 47              push_1 
073FC21C 23 07           call_s btSound 
073FC21E 1A              clearenv 
073FC21F 29              ret 
073FC220 42              push_null 
073FC221 1A              clearenv 
073FC222 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 30) -> (dbgmark "game_sv/MonsterGeneric.bs" 30)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 31) -> (linenum 31)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: self -> self
expr: "models/monsters/soldier/soldier.model" -> "models/monsters/soldier/soldier.model"
stmt: (linenum 34) -> (linenum 34)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 35) -> (linenum 35)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 37) -> (linenum 37)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (vector (unary - 16) (unary - 16) (unary - 24)) -> (vector (unary - 16) (unary - 16) (unary - 24))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 24) -> -24
expr: self -> self
stmt: (linenum 38) -> (linenum 38)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 39) -> (linenum 39)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 43) -> (linenum 43)
expr: (funcall btWalkmonsterStart self) -> (funcall btWalkmonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
073FCC10 02 011E         dbgmark "game_sv/MonsterGeneric.bs" 30 
073FCC13 49              push_3 
073FCC14 36              dup_f 
073FCC15 5A 00           lload 0 
073FCC17 65 02           storeindex_s solidtype 
073FCC19 11              pop 
073FCC1A 05 1F           ln 31 
073FCC1C 48              push_2 
073FCC1D 36              dup_f 
073FCC1E 5A 00           lload 0 
073FCC20 65 03           storeindex_s movetype 
073FCC22 11              pop 
073FCC23 05 21           ln 33 
073FCC25 2A 04           tymark #"(rCs)r" 
073FCC27 5A 00           lload 0 
073FCC29 10 05           push "models/monsters/soldier/soldier.model" 
073FCC2B 23 06           call_s btSetModel 
073FCC2D 11              pop 
073FCC2E 05 22           ln 34 
073FCC30 10 07           push "sound/soldier/solsght1" 
073FCC32 30              dup 
073FCC33 5A 00           lload 0 
073FCC35 65 08           storeindex_s snd_sight 
073FCC37 11              pop 
073FCC38 05 23           ln 35 
073FCC3A 10 09           push "sound/soldier/solidle1" 
073FCC3C 30              dup 
073FCC3D 5A 00           lload 0 
073FCC3F 65 0A           storeindex_s snd_idle 
073FCC41 11              pop 
073FCC42 05 25           ln 37 
073FCC44 20              mark 
073FCC45 58 10           push_sv_n 16 
073FCC47 58 10           push_sv_n 16 
073FCC49 58 18           push_sv_n 24 
073FCC4B 84              vector 
073FCC4C 30              dup 
073FCC4D 5A 00           lload 0 
073FCC4F 65 0B           storeindex_s mins 
073FCC51 11              pop 
073FCC52 05 26           ln 38 
073FCC54 20              mark 
073FCC55 57 10           push_sv_p 16 
073FCC57 57 10           push_sv_p 16 
073FCC59 57 28           push_sv_p 40 
073FCC5B 84              vector 
073FCC5C 30              dup 
073FCC5D 5A 00           lload 0 
073FCC5F 65 0C           storeindex_s maxs 
073FCC61 11              pop 
073FCC62 05 27           ln 39 
073FCC64 57 1E           push_sv_p 30 
073FCC66 36              dup_f 
073FCC67 5A 00           lload 0 
073FCC69 65 0D           storeindex_s health 
073FCC6B 11              pop 
073FCC6C 05 2B           ln 43 
073FCC6E 2A 0E           tymark #"(r)r" 
073FCC70 5A 00           lload 0 
073FCC72 24 0F           tailcall_s btWalkmonsterStart 
073FCC74 1A              clearenv 
073FCC75 29              ret 

expr: (rlambda deinit (self) (begin)) -> (rlambda deinit (self) (begin))
expr: (begin) -> ()
BLK deinit, SA Yes, Capture=Yes
073FD560 42              push_null 
073FD561 1A              clearenv 
073FD562 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
073FDE50 42              push_null 
073FDE51 1A              clearenv 
073FDE52 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
073FE740 42              push_null 
073FE741 1A              clearenv 
073FE742 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
073FF030 42              push_null 
073FF031 1A              clearenv 
073FF032 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
073FF920 42              push_null 
073FF921 1A              clearenv 
073FF922 29              ret 

expr: (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) -> (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 65) -> (dbgmark "game_sv/MonsterGeneric.bs" 65)
expr: (funcall BT_EntityRobotExplode self) -> (funcall BT_EntityRobotExplode self)
expr: self -> self
BLK die, SA Yes, Capture=Yes
07400220 02 0141         dbgmark "game_sv/MonsterGeneric.bs" 65 
07400223 2A 02           tymark #"(r)r" 
07400225 5A 02           lload 2 
07400227 24 03           tailcall_s BT_EntityRobotExplode 
07400229 1A              clearenv 
0740022A 29              ret 

expr: (rlambda cmdmsg (self other str) (begin)) -> (rlambda cmdmsg (self other str) (begin))
expr: (begin) -> ()
BLK cmdmsg, SA Yes, Capture=Yes
07400B10 42              push_null 
07400B11 1A              clearenv 
07400B12 29              ret 

expr: (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) -> (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 73) -> (dbgmark "game_sv/MonsterGeneric.bs" 73)
expr: (funcall btSetMove self stand1_mfi) -> (funcall btSetMove self stand1_mfi)
expr: self -> self
expr: stand1_mfi -> stand1_mfi
BLK stand, SA Yes, Capture=Yes
07401410 02 0149         dbgmark "game_sv/MonsterGeneric.bs" 73 
07401413 2A 02           tymark #"(rr)r" 
07401415 5A 00           lload 0 
07401417 12 03           load stand1_mfi 
07401419 24 04           tailcall_s btSetMove 
0740141B 1A              clearenv 
0740141C 29              ret 

expr: (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) -> (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 78) -> (dbgmark "game_sv/MonsterGeneric.bs" 78)
expr: (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)) -> (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
BLK walk1_random, SA Yes, Capture=Yes
07401D40 02 014E         dbgmark "game_sv/MonsterGeneric.bs" 78 
07401D43 2A 02           tymark #"()r" 
07401D45 23 03           call_s btRandom 
07401D47 10 04           push 0.100000 
07401D49 7A 100800       jmp_cond_b le 07401D55 
07401D4D 2A 05           tymark #"(rr)r" 
07401D4F 5A 00           lload 0 
07401D51 12 06           load walk1_mfi 
07401D53 24 07           tailcall_s btSetMove 
07401D55 42              push_null 
07401D56 1A              clearenv 
07401D57 29              ret 

expr: (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) -> (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 84) -> (dbgmark "game_sv/MonsterGeneric.bs" 84)
expr: (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)) -> (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.500000 -> 0.500000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
expr: (funcall btSetMove self walk2_mfi) -> (funcall btSetMove self walk2_mfi)
expr: self -> self
expr: walk2_mfi -> walk2_mfi
BLK walk, SA Yes, Capture=Yes
07402680 02 0154         dbgmark "game_sv/MonsterGeneric.bs" 84 
07402683 2A 02           tymark #"()r" 
07402685 23 03           call_s btRandom 
07402687 59 3200         push_sv_f 0.5 
0740268A 7A 100800       jmp_cond_b le 07402696 
0740268E 2A 04           tymark #"(rr)r" 
07402690 5A 00           lload 0 
07402692 12 05           load walk1_mfi 
07402694 24 06           tailcall_s btSetMove 
07402696 2A 04           tymark #"(rr)r" 
07402698 5A 00           lload 0 
0740269A 12 07           load walk2_mfi 
0740269C 24 06           tailcall_s btSetMove 
0740269E 1A              clearenv 
0740269F 29              ret 

expr: (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) -> (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 91) -> (dbgmark "game_sv/MonsterGeneric.bs" 91)
expr: (funcall btSetMove self run_mfi) -> (funcall btSetMove self run_mfi)
expr: self -> self
expr: run_mfi -> run_mfi
BLK run, SA Yes, Capture=Yes
07402F90 02 015B         dbgmark "game_sv/MonsterGeneric.bs" 91 
07402F93 2A 02           tymark #"(rr)r" 
07402F95 5A 00           lload 0 
07402F97 12 03           load run_mfi 
07402F99 24 04           tailcall_s btSetMove 
07402F9B 1A              clearenv 
07402F9C 29              ret 

expr: (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) -> (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 93) -> (dbgmark "game_sv/MonsterGeneric.bs" 93)
expr: (funcall btSetMove self attack1_mfi) -> (funcall btSetMove self attack1_mfi)
expr: self -> self
expr: attack1_mfi -> attack1_mfi
BLK missile, SA Yes, Capture=Yes
07403890 02 015D         dbgmark "game_sv/MonsterGeneric.bs" 93 
07403893 2A 02           tymark #"(rr)r" 
07403895 5A 00           lload 0 
07403897 12 03           load attack1_mfi 
07403899 24 04           tailcall_s btSetMove 
0740389B 1A              clearenv 
0740389C 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 97) -> (dbgmark "game_sv/MonsterGeneric.bs" 97)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 101) -> (linenum 101)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 102) -> (linenum 102)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 105) -> (linenum 105)
expr: (funcall BT_FireBlaster self org dir 25 600 32) -> (funcall BT_FireBlaster self org dir 25 600 32)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 25 -> 25
expr: 600 -> 600
expr: 32 -> 32
BLK think_fire, SA Yes, Capture=Yes
074041C0 02 0161         dbgmark "game_sv/MonsterGeneric.bs" 97 
074041C3 42              push_null 
074041C4 16 02           lexbind org 
074041C6 42              push_null 
074041C7 16 03           lexbind dir 
074041C9 05 65           ln 101 
074041CB 2A 04           tymark #"(r)r" 
074041CD 5A 02           lload 2 
074041CF 23 05           call_s BT_AimOrigin 
074041D1 5B 01           lstore 1 
074041D3 05 66           ln 102 
074041D5 2A 06           tymark #"(rrr)r" 
074041D7 5A 02           lload 2 
074041D9 5A 02           lload 2 
074041DB 64 07           loadindex_s enemy 
074041DD 45 5802         push_sv 600 
074041E0 23 08           call_s BT_AimDirection 
074041E2 5B 00           lstore 0 
074041E4 05 69           ln 105 
074041E6 2A 09           tymark #"(rrrrrr)r" 
074041E8 5A 02           lload 2 
074041EA 5A 01           lload 1 
074041EC 5A 00           lload 0 
074041EE 57 19           push_sv_p 25 
074041F0 45 5802         push_sv 600 
074041F3 57 20           push_sv_p 32 
074041F5 24 0A           tailcall_s BT_FireBlaster 
074041F7 1A              clearenv 
074041F8 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
07404AE0 42              push_null 
07404AE1 1A              clearenv 
07404AE2 29              ret 

expr: (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))) -> (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 115) -> (dbgmark "game_sv/MonsterGeneric.bs" 115)
stmt: (funcall super ent sent) -> (funcall super ent sent)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
stmt: (linenum 118) -> (linenum 118)
expr: (methodcall this init ent) -> (methodcall this init ent)
expr: ent -> ent
expr: this -> this
BLK monster_generic2, SA Yes, Capture=Yes
07405400 02 0173         dbgmark "game_sv/MonsterGeneric.bs" 115 
07405403 20              mark 
07405404 5A 01           lload 1 
07405406 5A 00           lload 0 
07405408 C20E            call_super 
0740540A 11              pop 
0740540B 05 76           ln 118 
0740540D 2A 02           tymark #"(r)r" 
0740540F 5A 01           lload 1 
07405411 19              push_self 
07405412 28 03           methodtailcall_s init 
07405414 1A              clearenv 
07405415 29              ret 

expr: (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))) -> (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))
stmt: (linenum 125) -> (linenum 125)
stmt: (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) -> (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)))
expr: (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)) -> (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))
expr: (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) -> (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self))))
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 128) (funcall think_idle self))) -> (lambda (self) (begin (linenum 128) (funcall think_idle self)))
expr: (begin (linenum 128) (funcall think_idle self)) -> (begin (linenum 128) (funcall think_idle self))
stmt: (linenum 128) -> (linenum 128)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
07406680 05 8080         ln 128 
07406683 2A 01           tymark #"(r)r" 
07406685 5A 00           lload 0 
07406687 24 02           tailcall_s think_idle 
07406689 1A              clearenv 
0740668A 29              ret 

expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
stmt: (linenum 147) -> (linenum 147)
stmt: (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) -> (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 150) (funcall think_idle self))) -> (lambda (self) (begin (linenum 150) (funcall think_idle self)))
expr: (begin (linenum 150) (funcall think_idle self)) -> (begin (linenum 150) (funcall think_idle self))
stmt: (linenum 150) -> (linenum 150)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
07406F70 05 8096         ln 150 
07406F73 2A 01           tymark #"(r)r" 
07406F75 5A 00           lload 0 
07406F77 24 02           tailcall_s think_idle 
07406F79 1A              clearenv 
07406F7A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 walk1_random) -> (array btaiWalk 0 walk1_random)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: walk1_random -> walk1_random
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 169) -> (linenum 169)
stmt: (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) -> (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 172) (funcall think_idle self))) -> (lambda (self) (begin (linenum 172) (funcall think_idle self)))
expr: (begin (linenum 172) (funcall think_idle self)) -> (begin (linenum 172) (funcall think_idle self))
stmt: (linenum 172) -> (linenum 172)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
07407860 05 80AC         ln 172 
07407863 2A 01           tymark #"(r)r" 
07407865 5A 00           lload 0 
07407867 24 02           tailcall_s think_idle 
07407869 1A              clearenv 
0740786A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 180) -> (linenum 180)
stmt: (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) -> (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)))
expr: (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)) -> (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))
expr: (array btaiRun 10 null) -> (array btaiRun 10 null)
expr: btaiRun -> btaiRun
expr: 10 -> 10
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
stmt: (linenum 188) -> (linenum 188)
stmt: (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) -> (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)))
expr: (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)) -> (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))
expr: (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) -> (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self))))
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 191) (funcall think_fire self))) -> (lambda (self) (begin (linenum 191) (funcall think_fire self)))
expr: (begin (linenum 191) (funcall think_fire self)) -> (begin (linenum 191) (funcall think_fire self))
stmt: (linenum 191) -> (linenum 191)
expr: (funcall think_fire self) -> (funcall think_fire self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
07408150 05 80BF         ln 191 
07408153 2A 01           tymark #"(r)r" 
07408155 5A 00           lload 0 
07408157 24 02           tailcall_s think_fire 
07408159 1A              clearenv 
0740815A 29              ret 

expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
stmt: (linenum 200) -> (linenum 200)
stmt: (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) -> (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand))
expr: (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand) -> (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)
expr: "stand1" -> "stand1"
expr: 0 -> 0
expr: 30 -> 30
expr: stand1_mf -> stand1_mf
expr: stand -> stand
stmt: (linenum 203) -> (linenum 203)
stmt: (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) -> (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk))
expr: (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk) -> (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)
expr: "walk1" -> "walk1"
expr: 0 -> 0
expr: 32 -> 32
expr: walk1_mf -> walk1_mf
expr: walk -> walk
stmt: (linenum 206) -> (linenum 206)
stmt: (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) -> (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk))
expr: (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk) -> (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)
expr: "walk2" -> "walk2"
expr: 0 -> 0
expr: 10 -> 10
expr: walk2_mf -> walk2_mf
expr: walk -> walk
stmt: (linenum 209) -> (linenum 209)
stmt: (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) -> (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run))
expr: (funcall btDyBuildMove "run" 2 8 run_mf run) -> (funcall btDyBuildMove "run" 2 8 run_mf run)
expr: "run" -> "run"
expr: 2 -> 2
expr: 8 -> 8
expr: run_mf -> run_mf
expr: run -> run
stmt: (linenum 212) -> (linenum 212)
stmt: (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) -> (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run))
expr: (funcall btDyBuildMove "attack1" 2 8 attack1_mf run) -> (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)
expr: "attack1" -> "attack1"
expr: 2 -> 2
expr: 8 -> 8
expr: attack1_mf -> attack1_mf
expr: run -> run
stmt: (linenum 216) -> (linenum 216)
expr: (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)) -> (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))
expr: "This A = %p, run=%p, this.run=%p\n" -> "This A = %p, run=%p, this.run=%p\n"
expr: this -> this
expr: run -> run
expr: (objref this run) -> (objref this run)
expr: this -> this
BLK (null), SA No, Capture=Yes
074082E0 05 7D           ln 125 
074082E2 20              mark 
074082E3 20              mark 
074082E4 12 01           load btaiStand 
074082E6 46              push_0 
074082E7 10 02           push #!<svm_blk_t:07406600> 
074082E9 80              array 
074082EA 20              mark 
074082EB 12 01           load btaiStand 
074082ED 46              push_0 
074082EE 42              push_null 
074082EF 80              array 
074082F0 20              mark 
074082F1 12 01           load btaiStand 
074082F3 46              push_0 
074082F4 42              push_null 
074082F5 80              array 
074082F6 20              mark 
074082F7 12 01           load btaiStand 
074082F9 46              push_0 
074082FA 42              push_null 
074082FB 80              array 
074082FC 20              mark 
074082FD 12 01           load btaiStand 
074082FF 46              push_0 
07408300 42              push_null 
07408301 80              array 
07408302 20              mark 
07408303 12 01           load btaiStand 
07408305 46              push_0 
07408306 42              push_null 
07408307 80              array 
07408308 20              mark 
07408309 12 01           load btaiStand 
0740830B 46              push_0 
0740830C 42              push_null 
0740830D 80              array 
0740830E 20              mark 
0740830F 12 01           load btaiStand 
07408311 46              push_0 
07408312 42              push_null 
07408313 80              array 
07408314 20              mark 
07408315 12 01           load btaiStand 
07408317 46              push_0 
07408318 42              push_null 
07408319 80              array 
0740831A 20              mark 
0740831B 12 01           load btaiStand 
0740831D 46              push_0 
0740831E 42              push_null 
0740831F 80              array 
07408320 20              mark 
07408321 12 01           load btaiStand 
07408323 46              push_0 
07408324 42              push_null 
07408325 80              array 
07408326 20              mark 
07408327 12 01           load btaiStand 
07408329 46              push_0 
0740832A 42              push_null 
0740832B 80              array 
0740832C 20              mark 
0740832D 12 01           load btaiStand 
0740832F 46              push_0 
07408330 42              push_null 
07408331 80              array 
07408332 20              mark 
07408333 12 01           load btaiStand 
07408335 46              push_0 
07408336 42              push_null 
07408337 80              array 
07408338 20              mark 
07408339 12 01           load btaiStand 
0740833B 46              push_0 
0740833C 42              push_null 
0740833D 80              array 
0740833E 20              mark 
0740833F 12 01           load btaiStand 
07408341 46              push_0 
07408342 42              push_null 
07408343 80              array 
07408344 20              mark 
07408345 12 01           load btaiStand 
07408347 46              push_0 
07408348 42              push_null 
07408349 80              array 
0740834A 20              mark 
0740834B 12 01           load btaiStand 
0740834D 46              push_0 
0740834E 42              push_null 
0740834F 80              array 
07408350 20              mark 
07408351 12 01           load btaiStand 
07408353 46              push_0 
07408354 42              push_null 
07408355 80              array 
07408356 20              mark 
07408357 12 01           load btaiStand 
07408359 46              push_0 
0740835A 42              push_null 
0740835B 80              array 
0740835C 20              mark 
0740835D 12 01           load btaiStand 
0740835F 46              push_0 
07408360 42              push_null 
07408361 80              array 
07408362 20              mark 
07408363 12 01           load btaiStand 
07408365 46              push_0 
07408366 42              push_null 
07408367 80              array 
07408368 20              mark 
07408369 12 01           load btaiStand 
0740836B 46              push_0 
0740836C 42              push_null 
0740836D 80              array 
0740836E 20              mark 
0740836F 12 01           load btaiStand 
07408371 46              push_0 
07408372 42              push_null 
07408373 80              array 
07408374 20              mark 
07408375 12 01           load btaiStand 
07408377 46              push_0 
07408378 42              push_null 
07408379 80              array 
0740837A 20              mark 
0740837B 12 01           load btaiStand 
0740837D 46              push_0 
0740837E 42              push_null 
0740837F 80              array 
07408380 20              mark 
07408381 12 01           load btaiStand 
07408383 46              push_0 
07408384 42              push_null 
07408385 80              array 
07408386 20              mark 
07408387 12 01           load btaiStand 
07408389 46              push_0 
0740838A 42              push_null 
0740838B 80              array 
0740838C 20              mark 
0740838D 12 01           load btaiStand 
0740838F 46              push_0 
07408390 42              push_null 
07408391 80              array 
07408392 20              mark 
07408393 12 01           load btaiStand 
07408395 46              push_0 
07408396 42              push_null 
07408397 80              array 
07408398 20              mark 
07408399 12 01           load btaiStand 
0740839B 46              push_0 
0740839C 42              push_null 
0740839D 80              array 
0740839E 80              array 
0740839F 13 03           store stand1_mf 
074083A1 05 8093         ln 147 
074083A4 20              mark 
074083A5 20              mark 
074083A6 12 04           load btaiWalk 
074083A8 49              push_3 
074083A9 10 05           push #!<svm_blk_t:07406EF0> 
074083AB 80              array 
074083AC 20              mark 
074083AD 12 04           load btaiWalk 
074083AF 4B              push_5 
074083B0 42              push_null 
074083B1 80              array 
074083B2 20              mark 
074083B3 12 04           load btaiWalk 
074083B5 49              push_3 
074083B6 42              push_null 
074083B7 80              array 
074083B8 20              mark 
074083B9 12 04           load btaiWalk 
074083BB 48              push_2 
074083BC 42              push_null 
074083BD 80              array 
074083BE 20              mark 
074083BF 12 04           load btaiWalk 
074083C1 48              push_2 
074083C2 42              push_null 
074083C3 80              array 
074083C4 20              mark 
074083C5 12 04           load btaiWalk 
074083C7 48              push_2 
074083C8 42              push_null 
074083C9 80              array 
074083CA 20              mark 
074083CB 12 04           load btaiWalk 
074083CD 4B              push_5 
074083CE 42              push_null 
074083CF 80              array 
074083D0 20              mark 
074083D1 12 04           load btaiWalk 
074083D3 4B              push_5 
074083D4 42              push_null 
074083D5 80              array 
074083D6 20              mark 
074083D7 12 04           load btaiWalk 
074083D9 48              push_2 
074083DA 42              push_null 
074083DB 80              array 
074083DC 20              mark 
074083DD 12 04           load btaiWalk 
074083DF 46              push_0 
074083E0 12 06           load walk1_random 
074083E2 80              array 
074083E3 20              mark 
074083E4 12 04           load btaiWalk 
074083E6 46              push_0 
074083E7 42              push_null 
074083E8 80              array 
074083E9 20              mark 
074083EA 12 04           load btaiWalk 
074083EC 46              push_0 
074083ED 42              push_null 
074083EE 80              array 
074083EF 20              mark 
074083F0 12 04           load btaiWalk 
074083F2 46              push_0 
074083F3 42              push_null 
074083F4 80              array 
074083F5 20              mark 
074083F6 12 04           load btaiWalk 
074083F8 46              push_0 
074083F9 42              push_null 
074083FA 80              array 
074083FB 20              mark 
074083FC 12 04           load btaiWalk 
074083FE 46              push_0 
074083FF 42              push_null 
07408400 80              array 
07408401 20              mark 
07408402 12 04           load btaiWalk 
07408404 46              push_0 
07408405 42              push_null 
07408406 80              array 
07408407 20              mark 
07408408 12 04           load btaiWalk 
0740840A 46              push_0 
0740840B 42              push_null 
0740840C 80              array 
0740840D 20              mark 
0740840E 12 04           load btaiWalk 
07408410 46              push_0 
07408411 42              push_null 
07408412 80              array 
07408413 20              mark 
07408414 12 04           load btaiWalk 
07408416 46              push_0 
07408417 42              push_null 
07408418 80              array 
07408419 20              mark 
0740841A 12 04           load btaiWalk 
0740841C 46              push_0 
0740841D 42              push_null 
0740841E 80              array 
0740841F 20              mark 
07408420 12 04           load btaiWalk 
07408422 46              push_0 
07408423 42              push_null 
07408424 80              array 
07408425 20              mark 
07408426 12 04           load btaiWalk 
07408428 46              push_0 
07408429 42              push_null 
0740842A 80              array 
0740842B 20              mark 
0740842C 12 04           load btaiWalk 
0740842E 46              push_0 
0740842F 42              push_null 
07408430 80              array 
07408431 20              mark 
07408432 12 04           load btaiWalk 
07408434 46              push_0 
07408435 42              push_null 
07408436 80              array 
07408437 20              mark 
07408438 12 04           load btaiWalk 
0740843A 46              push_0 
0740843B 42              push_null 
0740843C 80              array 
0740843D 20              mark 
0740843E 12 04           load btaiWalk 
07408440 46              push_0 
07408441 42              push_null 
07408442 80              array 
07408443 20              mark 
07408444 12 04           load btaiWalk 
07408446 46              push_0 
07408447 42              push_null 
07408448 80              array 
07408449 20              mark 
0740844A 12 04           load btaiWalk 
0740844C 46              push_0 
0740844D 42              push_null 
0740844E 80              array 
0740844F 20              mark 
07408450 12 04           load btaiWalk 
07408452 46              push_0 
07408453 42              push_null 
07408454 80              array 
07408455 20              mark 
07408456 12 04           load btaiWalk 
07408458 46              push_0 
07408459 42              push_null 
0740845A 80              array 
0740845B 20              mark 
0740845C 12 04           load btaiWalk 
0740845E 46              push_0 
0740845F 42              push_null 
07408460 80              array 
07408461 20              mark 
07408462 12 04           load btaiWalk 
07408464 46              push_0 
07408465 42              push_null 
07408466 80              array 
07408467 80              array 
07408468 13 07           store walk1_mf 
0740846A 05 80A9         ln 169 
0740846D 20              mark 
0740846E 20              mark 
0740846F 12 04           load btaiWalk 
07408471 49              push_3 
07408472 10 08           push #!<svm_blk_t:074077E0> 
07408474 80              array 
07408475 20              mark 
07408476 12 04           load btaiWalk 
07408478 4B              push_5 
07408479 42              push_null 
0740847A 80              array 
0740847B 20              mark 
0740847C 12 04           load btaiWalk 
0740847E 49              push_3 
0740847F 42              push_null 
07408480 80              array 
07408481 20              mark 
07408482 12 04           load btaiWalk 
07408484 48              push_2 
07408485 42              push_null 
07408486 80              array 
07408487 20              mark 
07408488 12 04           load btaiWalk 
0740848A 48              push_2 
0740848B 42              push_null 
0740848C 80              array 
0740848D 20              mark 
0740848E 12 04           load btaiWalk 
07408490 48              push_2 
07408491 42              push_null 
07408492 80              array 
07408493 20              mark 
07408494 12 04           load btaiWalk 
07408496 4B              push_5 
07408497 42              push_null 
07408498 80              array 
07408499 20              mark 
0740849A 12 04           load btaiWalk 
0740849C 4B              push_5 
0740849D 42              push_null 
0740849E 80              array 
0740849F 20              mark 
074084A0 12 04           load btaiWalk 
074084A2 48              push_2 
074084A3 42              push_null 
074084A4 80              array 
074084A5 20              mark 
074084A6 12 04           load btaiWalk 
074084A8 46              push_0 
074084A9 42              push_null 
074084AA 80              array 
074084AB 80              array 
074084AC 13 09           store walk2_mf 
074084AE 05 80B4         ln 180 
074084B1 20              mark 
074084B2 20              mark 
074084B3 12 0A           load btaiRun 
074084B5 57 0A           push_sv_p 10 
074084B7 42              push_null 
074084B8 80              array 
074084B9 20              mark 
074084BA 12 0A           load btaiRun 
074084BC 57 0B           push_sv_p 11 
074084BE 42              push_null 
074084BF 80              array 
074084C0 20              mark 
074084C1 12 0A           load btaiRun 
074084C3 57 0B           push_sv_p 11 
074084C5 42              push_null 
074084C6 80              array 
074084C7 20              mark 
074084C8 12 0A           load btaiRun 
074084CA 57 0F           push_sv_p 15 
074084CC 42              push_null 
074084CD 80              array 
074084CE 20              mark 
074084CF 12 0A           load btaiRun 
074084D1 57 0B           push_sv_p 11 
074084D3 42              push_null 
074084D4 80              array 
074084D5 20              mark 
074084D6 12 0A           load btaiRun 
074084D8 57 0F           push_sv_p 15 
074084DA 42              push_null 
074084DB 80              array 
074084DC 20              mark 
074084DD 12 0A           load btaiRun 
074084DF 57 0F           push_sv_p 15 
074084E1 42              push_null 
074084E2 80              array 
074084E3 80              array 
074084E4 13 0B           store run_mf 
074084E6 05 80BC         ln 188 
074084E9 20              mark 
074084EA 20              mark 
074084EB 12 0C           load btaiCharge 
074084ED 46              push_0 
074084EE 10 0D           push #!<svm_blk_t:074080D0> 
074084F0 80              array 
074084F1 20              mark 
074084F2 12 0C           load btaiCharge 
074084F4 46              push_0 
074084F5 42              push_null 
074084F6 80              array 
074084F7 20              mark 
074084F8 12 0C           load btaiCharge 
074084FA 46              push_0 
074084FB 42              push_null 
074084FC 80              array 
074084FD 20              mark 
074084FE 12 0C           load btaiCharge 
07408500 46              push_0 
07408501 42              push_null 
07408502 80              array 
07408503 20              mark 
07408504 12 0C           load btaiCharge 
07408506 46              push_0 
07408507 42              push_null 
07408508 80              array 
07408509 20              mark 
0740850A 12 0C           load btaiCharge 
0740850C 46              push_0 
0740850D 42              push_null 
0740850E 80              array 
0740850F 20              mark 
07408510 12 0C           load btaiCharge 
07408512 46              push_0 
07408513 42              push_null 
07408514 80              array 
07408515 20              mark 
07408516 12 0C           load btaiCharge 
07408518 46              push_0 
07408519 42              push_null 
0740851A 80              array 
0740851B 20              mark 
0740851C 12 0C           load btaiCharge 
0740851E 46              push_0 
0740851F 42              push_null 
07408520 80              array 
07408521 20              mark 
07408522 12 0C           load btaiCharge 
07408524 46              push_0 
07408525 42              push_null 
07408526 80              array 
07408527 20              mark 
07408528 12 0C           load btaiCharge 
0740852A 46              push_0 
0740852B 42              push_null 
0740852C 80              array 
0740852D 20              mark 
0740852E 12 0C           load btaiCharge 
07408530 46              push_0 
07408531 42              push_null 
07408532 80              array 
07408533 80              array 
07408534 13 0E           store attack1_mf 
07408536 05 80C8         ln 200 
07408539 2A 0F           tymark #"(Csrrrr)r" 
0740853B 10 10           push "stand1" 
0740853D 46              push_0 
0740853E 57 1E           push_sv_p 30 
07408540 12 03           load stand1_mf 
07408542 12 11           load stand 
07408544 23 12           call_s btDyBuildMove 
07408546 13 13           store stand1_mfi 
07408548 05 80CB         ln 203 
0740854B 2A 0F           tymark #"(Csrrrr)r" 
0740854D 10 14           push "walk1" 
0740854F 46              push_0 
07408550 57 20           push_sv_p 32 
07408552 12 07           load walk1_mf 
07408554 12 15           load walk 
07408556 23 12           call_s btDyBuildMove 
07408558 13 16           store walk1_mfi 
0740855A 05 80CE         ln 206 
0740855D 2A 0F           tymark #"(Csrrrr)r" 
0740855F 10 17           push "walk2" 
07408561 46              push_0 
07408562 57 0A           push_sv_p 10 
07408564 12 09           load walk2_mf 
07408566 12 15           load walk 
07408568 23 12           call_s btDyBuildMove 
0740856A 13 18           store walk2_mfi 
0740856C 05 80D1         ln 209 
0740856F 2A 0F           tymark #"(Csrrrr)r" 
07408571 10 19           push "run" 
07408573 48              push_2 
07408574 57 08           push_sv_p 8 
07408576 12 0B           load run_mf 
07408578 12 1A           load run 
0740857A 23 12           call_s btDyBuildMove 
0740857C 13 1B           store run_mfi 
0740857E 05 80D4         ln 212 
07408581 2A 0F           tymark #"(Csrrrr)r" 
07408583 10 1C           push "attack1" 
07408585 48              push_2 
07408586 57 08           push_sv_p 8 
07408588 12 0E           load attack1_mf 
0740858A 12 1A           load run 
0740858C 23 12           call_s btDyBuildMove 
0740858E 13 1D           store attack1_mfi 
07408590 05 80D8         ln 216 
07408593 2A 1E           tymark #"(Csrrr)r" 
07408595 10 1F           push "This A = %p, run=%p, this.run=%p\n" 
07408597 19              push_self 
07408598 12 1A           load run 
0740859A 19              push_self 
0740859B 64 1A           loadindex_s run 
0740859D 24 20           tailcall_s gc_printf 
0740859F 29              ret 

stmt: (linenum 222) -> (linenum 222)
stmt: (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))) -> (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 226) -> (dbgmark "game_sv/MonsterGeneric.bs" 226)
stmt: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: "passive_sheep: ctor\n" -> "passive_sheep: ctor\n"
stmt: (linenum 227) -> (linenum 227)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_sheep, SA Yes, Capture=Yes
07408E90 02 0180E2       dbgmark "game_sv/MonsterGeneric.bs" 226 
07408E94 2A 02           tymark #"(Cs)r" 
07408E96 10 03           push "passive_sheep: ctor\n" 
07408E98 23 04           call_s gc_printf 
07408E9A 11              pop 
07408E9B 05 80E3         ln 227 
07408E9E 20              mark 
07408E9F 5A 01           lload 1 
07408EA1 5A 00           lload 0 
07408EA3 C20E            call_super 
07408EA5 1A              clearenv 
07408EA6 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 232) -> (dbgmark "game_sv/MonsterGeneric.bs" 232)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 234) -> (linenum 234)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
074097D0 02 0180E8       dbgmark "game_sv/MonsterGeneric.bs" 232 
074097D4 2A 02           tymark #"()r" 
074097D6 23 03           call_s btRandom 
074097D8 10 04           push 0.100000 
074097DA 7A 111400       jmp_cond_b ge 074097F2 
074097DE 05 80EA         ln 234 
074097E1 2A 05           tymark #"(rrrrr)r" 
074097E3 5A 00           lload 0 
074097E5 48              push_2 
074097E6 5A 00           lload 0 
074097E8 64 06           loadindex_s snd_idle 
074097EA 59 6400         push_sv_f 1 
074097ED 47              push_1 
074097EE 23 07           call_s btSound 
074097F0 1A              clearenv 
074097F1 29              ret 
074097F2 42              push_null 
074097F3 1A              clearenv 
074097F4 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 241) -> (dbgmark "game_sv/MonsterGeneric.bs" 241)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 243) -> (linenum 243)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 244) -> (linenum 244)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 246) -> (linenum 246)
stmt: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: self -> self
expr: "models/monsters/sheep/sheep.model" -> "models/monsters/sheep/sheep.model"
stmt: (linenum 247) -> (linenum 247)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 248) -> (linenum 248)
stmt: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: "sound/animal/sheep_idle1" -> "sound/animal/sheep_idle1"
expr: self -> self
stmt: (linenum 250) -> (linenum 250)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 251) -> (linenum 251)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 252) -> (linenum 252)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 256) -> (linenum 256)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0740A140 02 0180F1       dbgmark "game_sv/MonsterGeneric.bs" 241 
0740A144 2A 02           tymark #"(Csr)r" 
0740A146 10 03           push "monster_sheep: init A self=%p\n" 
0740A148 5A 00           lload 0 
0740A14A 23 04           call_s gc_printf 
0740A14C 11              pop 
0740A14D 05 80F3         ln 243 
0740A150 49              push_3 
0740A151 36              dup_f 
0740A152 5A 00           lload 0 
0740A154 65 05           storeindex_s solidtype 
0740A156 11              pop 
0740A157 05 80F4         ln 244 
0740A15A 48              push_2 
0740A15B 36              dup_f 
0740A15C 5A 00           lload 0 
0740A15E 65 06           storeindex_s movetype 
0740A160 11              pop 
0740A161 05 80F6         ln 246 
0740A164 2A 07           tymark #"(rCs)r" 
0740A166 5A 00           lload 0 
0740A168 10 08           push "models/monsters/sheep/sheep.model" 
0740A16A 23 09           call_s btSetModel 
0740A16C 11              pop 
0740A16D 05 80F7         ln 247 
0740A170 10 0A           push "sound/soldier/solsght1" 
0740A172 30              dup 
0740A173 5A 00           lload 0 
0740A175 65 0B           storeindex_s snd_sight 
0740A177 11              pop 
0740A178 05 80F8         ln 248 
0740A17B 10 0C           push "sound/animal/sheep_idle1" 
0740A17D 30              dup 
0740A17E 5A 00           lload 0 
0740A180 65 0D           storeindex_s snd_idle 
0740A182 11              pop 
0740A183 05 80FA         ln 250 
0740A186 20              mark 
0740A187 58 10           push_sv_n 16 
0740A189 58 10           push_sv_n 16 
0740A18B 58 10           push_sv_n 16 
0740A18D 84              vector 
0740A18E 30              dup 
0740A18F 5A 00           lload 0 
0740A191 65 0E           storeindex_s mins 
0740A193 11              pop 
0740A194 05 80FB         ln 251 
0740A197 20              mark 
0740A198 57 10           push_sv_p 16 
0740A19A 57 10           push_sv_p 16 
0740A19C 57 28           push_sv_p 40 
0740A19E 84              vector 
0740A19F 30              dup 
0740A1A0 5A 00           lload 0 
0740A1A2 65 0F           storeindex_s maxs 
0740A1A4 11              pop 
0740A1A5 05 80FC         ln 252 
0740A1A8 57 1E           push_sv_p 30 
0740A1AA 36              dup_f 
0740A1AB 5A 00           lload 0 
0740A1AD 65 10           storeindex_s health 
0740A1AF 11              pop 
0740A1B0 05 8100         ln 256 
0740A1B3 2A 11           tymark #"(r)r" 
0740A1B5 5A 00           lload 0 
0740A1B7 24 12           tailcall_s btWalkPassiveStart 
0740A1B9 1A              clearenv 
0740A1BA 29              ret 

stmt: (linenum 260) -> (linenum 260)
stmt: (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))) -> (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 264) -> (dbgmark "game_sv/MonsterGeneric.bs" 264)
stmt: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: "passive_pig: ctor\n" -> "passive_pig: ctor\n"
stmt: (linenum 265) -> (linenum 265)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_pig, SA Yes, Capture=Yes
0740AAB0 02 018108       dbgmark "game_sv/MonsterGeneric.bs" 264 
0740AAB4 2A 02           tymark #"(Cs)r" 
0740AAB6 10 03           push "passive_pig: ctor\n" 
0740AAB8 23 04           call_s gc_printf 
0740AABA 11              pop 
0740AABB 05 8109         ln 265 
0740AABE 20              mark 
0740AABF 5A 01           lload 1 
0740AAC1 5A 00           lload 0 
0740AAC3 C20E            call_super 
0740AAC5 1A              clearenv 
0740AAC6 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 270) -> (dbgmark "game_sv/MonsterGeneric.bs" 270)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 272) -> (linenum 272)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0740B3F0 02 01810E       dbgmark "game_sv/MonsterGeneric.bs" 270 
0740B3F4 2A 02           tymark #"()r" 
0740B3F6 23 03           call_s btRandom 
0740B3F8 10 04           push 0.100000 
0740B3FA 7A 111400       jmp_cond_b ge 0740B412 
0740B3FE 05 8110         ln 272 
0740B401 2A 05           tymark #"(rrrrr)r" 
0740B403 5A 00           lload 0 
0740B405 48              push_2 
0740B406 5A 00           lload 0 
0740B408 64 06           loadindex_s snd_idle 
0740B40A 59 6400         push_sv_f 1 
0740B40D 47              push_1 
0740B40E 23 07           call_s btSound 
0740B410 1A              clearenv 
0740B411 29              ret 
0740B412 42              push_null 
0740B413 1A              clearenv 
0740B414 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 279) -> (dbgmark "game_sv/MonsterGeneric.bs" 279)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 281) -> (linenum 281)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 282) -> (linenum 282)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 284) -> (linenum 284)
stmt: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: self -> self
expr: "models/monsters/pig/pig.model" -> "models/monsters/pig/pig.model"
stmt: (linenum 285) -> (linenum 285)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 286) -> (linenum 286)
stmt: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: "sound/animal/pig0" -> "sound/animal/pig0"
expr: self -> self
stmt: (linenum 288) -> (linenum 288)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 289) -> (linenum 289)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 290) -> (linenum 290)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 294) -> (linenum 294)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0740BD40 02 018117       dbgmark "game_sv/MonsterGeneric.bs" 279 
0740BD44 2A 02           tymark #"(Csr)r" 
0740BD46 10 03           push "monster_sheep: init A self=%p\n" 
0740BD48 5A 00           lload 0 
0740BD4A 23 04           call_s gc_printf 
0740BD4C 11              pop 
0740BD4D 05 8119         ln 281 
0740BD50 49              push_3 
0740BD51 36              dup_f 
0740BD52 5A 00           lload 0 
0740BD54 65 05           storeindex_s solidtype 
0740BD56 11              pop 
0740BD57 05 811A         ln 282 
0740BD5A 48              push_2 
0740BD5B 36              dup_f 
0740BD5C 5A 00           lload 0 
0740BD5E 65 06           storeindex_s movetype 
0740BD60 11              pop 
0740BD61 05 811C         ln 284 
0740BD64 2A 07           tymark #"(rCs)r" 
0740BD66 5A 00           lload 0 
0740BD68 10 08           push "models/monsters/pig/pig.model" 
0740BD6A 23 09           call_s btSetModel 
0740BD6C 11              pop 
0740BD6D 05 811D         ln 285 
0740BD70 10 0A           push "sound/soldier/solsght1" 
0740BD72 30              dup 
0740BD73 5A 00           lload 0 
0740BD75 65 0B           storeindex_s snd_sight 
0740BD77 11              pop 
0740BD78 05 811E         ln 286 
0740BD7B 10 0C           push "sound/animal/pig0" 
0740BD7D 30              dup 
0740BD7E 5A 00           lload 0 
0740BD80 65 0D           storeindex_s snd_idle 
0740BD82 11              pop 
0740BD83 05 8120         ln 288 
0740BD86 20              mark 
0740BD87 58 10           push_sv_n 16 
0740BD89 58 10           push_sv_n 16 
0740BD8B 58 10           push_sv_n 16 
0740BD8D 84              vector 
0740BD8E 30              dup 
0740BD8F 5A 00           lload 0 
0740BD91 65 0E           storeindex_s mins 
0740BD93 11              pop 
0740BD94 05 8121         ln 289 
0740BD97 20              mark 
0740BD98 57 10           push_sv_p 16 
0740BD9A 57 10           push_sv_p 16 
0740BD9C 57 28           push_sv_p 40 
0740BD9E 84              vector 
0740BD9F 30              dup 
0740BDA0 5A 00           lload 0 
0740BDA2 65 0F           storeindex_s maxs 
0740BDA4 11              pop 
0740BDA5 05 8122         ln 290 
0740BDA8 57 1E           push_sv_p 30 
0740BDAA 36              dup_f 
0740BDAB 5A 00           lload 0 
0740BDAD 65 10           storeindex_s health 
0740BDAF 11              pop 
0740BDB0 05 8126         ln 294 
0740BDB3 2A 11           tymark #"(r)r" 
0740BDB5 5A 00           lload 0 
0740BDB7 24 12           tailcall_s btWalkPassiveStart 
0740BDB9 1A              clearenv 
0740BDBA 29              ret 

stmt: (linenum 298) -> (linenum 298)
stmt: (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))))))) -> (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))))))
expr: (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))) -> (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 303) -> (dbgmark "game_sv/MonsterGeneric.bs" 303)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_army, SA Yes, Capture=Yes
0740C6A0 02 01812F       dbgmark "game_sv/MonsterGeneric.bs" 303 
0740C6A4 20              mark 
0740C6A5 5A 01           lload 1 
0740C6A7 5A 00           lload 0 
0740C6A9 C20E            call_super 
0740C6AB 1A              clearenv 
0740C6AC 29              ret 

stmt: (linenum 308) -> (linenum 308)
expr: (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))))) -> (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))))))
expr: (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))) -> (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 312) -> (dbgmark "game_sv/MonsterGeneric.bs" 312)
stmt: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: "monster_enemyhead: ctor\n" -> "monster_enemyhead: ctor\n"
stmt: (linenum 313) -> (linenum 313)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_enemyhead, SA Yes, Capture=Yes
0740CFA0 02 018138       dbgmark "game_sv/MonsterGeneric.bs" 312 
0740CFA4 2A 02           tymark #"(Cs)r" 
0740CFA6 10 03           push "monster_enemyhead: ctor\n" 
0740CFA8 23 04           call_s gc_printf 
0740CFAA 11              pop 
0740CFAB 05 8139         ln 313 
0740CFAE 20              mark 
0740CFAF 5A 01           lload 1 
0740CFB1 5A 00           lload 0 
0740CFB3 C20E            call_super 
0740CFB5 1A              clearenv 
0740CFB6 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 318) -> (dbgmark "game_sv/MonsterGeneric.bs" 318)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 320) -> (linenum 320)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0740D8E0 02 01813E       dbgmark "game_sv/MonsterGeneric.bs" 318 
0740D8E4 2A 02           tymark #"()r" 
0740D8E6 23 03           call_s btRandom 
0740D8E8 10 04           push 0.100000 
0740D8EA 7A 111400       jmp_cond_b ge 0740D902 
0740D8EE 05 8140         ln 320 
0740D8F1 2A 05           tymark #"(rrrrr)r" 
0740D8F3 5A 00           lload 0 
0740D8F5 48              push_2 
0740D8F6 5A 00           lload 0 
0740D8F8 64 06           loadindex_s snd_idle 
0740D8FA 59 6400         push_sv_f 1 
0740D8FD 47              push_1 
0740D8FE 23 07           call_s btSound 
0740D900 1A              clearenv 
0740D901 29              ret 
0740D902 42              push_null 
0740D903 1A              clearenv 
0740D904 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 327) -> (dbgmark "game_sv/MonsterGeneric.bs" 327)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 331) -> (linenum 331)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 332) -> (linenum 332)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 335) -> (linenum 335)
expr: (funcall BT_FireRocket self org dir 60 600 160) -> (funcall BT_FireRocket self org dir 60 600 160)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 60 -> 60
expr: 600 -> 600
expr: 160 -> 160
BLK think_fire, SA Yes, Capture=Yes
07406560 02 018147       dbgmark "game_sv/MonsterGeneric.bs" 327 
07406564 42              push_null 
07406565 16 02           lexbind org 
07406567 42              push_null 
07406568 16 03           lexbind dir 
0740656A 05 814B         ln 331 
0740656D 2A 04           tymark #"(r)r" 
0740656F 5A 02           lload 2 
07406571 23 05           call_s BT_AimOrigin 
07406573 5B 01           lstore 1 
07406575 05 814C         ln 332 
07406578 2A 06           tymark #"(rrr)r" 
0740657A 5A 02           lload 2 
0740657C 5A 02           lload 2 
0740657E 64 07           loadindex_s enemy 
07406580 45 5802         push_sv 600 
07406583 23 08           call_s BT_AimDirection 
07406585 5B 00           lstore 0 
07406587 05 814F         ln 335 
0740658A 2A 09           tymark #"(rrrrrr)r" 
0740658C 5A 02           lload 2 
0740658E 5A 01           lload 1 
07406590 5A 00           lload 0 
07406592 57 3C           push_sv_p 60 
07406594 45 5802         push_sv 600 
07406597 57 A0           push_sv_p 160 
07406599 24 0A           tailcall_s BT_FireRocket 
0740659B 1A              clearenv 
0740659C 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 340) -> (dbgmark "game_sv/MonsterGeneric.bs" 340)
stmt: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: "monster_enemyhead: init A self=%p\n" -> "monster_enemyhead: init A self=%p\n"
expr: self -> self
stmt: (linenum 342) -> (linenum 342)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 343) -> (linenum 343)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 345) -> (linenum 345)
stmt: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: self -> self
expr: "models/monsters/enemyhead/enemyhead.model" -> "models/monsters/enemyhead/enemyhead.model"
stmt: (linenum 346) -> (linenum 346)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 347) -> (linenum 347)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 349) -> (linenum 349)
stmt: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (binary + (objref self origin) (vector 0 0 256)) -> (binary + (objref self origin) (vector 0 0 256))
expr: (objref self origin) -> (objref self origin)
expr: self -> self
expr: (vector 0 0 256) -> (vector 0 0 256)
expr: 0 -> 0
expr: 0 -> 0
expr: 256 -> 256
expr: self -> self
stmt: (linenum 351) -> (linenum 351)
stmt: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (vector (unary - 64) (unary - 64) (unary - 32)) -> (vector (unary - 64) (unary - 64) (unary - 32))
expr: (unary - 64) -> -64
expr: (unary - 64) -> -64
expr: (unary - 32) -> -32
expr: self -> self
stmt: (linenum 352) -> (linenum 352)
stmt: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (vector 64 64 64) -> (vector 64 64 64)
expr: 64 -> 64
expr: 64 -> 64
expr: 64 -> 64
expr: self -> self
stmt: (linenum 353) -> (linenum 353)
stmt: (objset! self health 900) -> (objset! self health 900)
expr: (objset! self health 900) -> (objset! self health 900)
expr: 900 -> 900
expr: self -> self
stmt: (linenum 357) -> (linenum 357)
expr: (funcall btFlymonsterStart self) -> (funcall btFlymonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0740EC70 02 018154       dbgmark "game_sv/MonsterGeneric.bs" 340 
0740EC74 2A 02           tymark #"(Csr)r" 
0740EC76 10 03           push "monster_enemyhead: init A self=%p\n" 
0740EC78 5A 00           lload 0 
0740EC7A 23 04           call_s gc_printf 
0740EC7C 11              pop 
0740EC7D 05 8156         ln 342 
0740EC80 49              push_3 
0740EC81 36              dup_f 
0740EC82 5A 00           lload 0 
0740EC84 65 05           storeindex_s solidtype 
0740EC86 11              pop 
0740EC87 05 8157         ln 343 
0740EC8A 48              push_2 
0740EC8B 36              dup_f 
0740EC8C 5A 00           lload 0 
0740EC8E 65 06           storeindex_s movetype 
0740EC90 11              pop 
0740EC91 05 8159         ln 345 
0740EC94 2A 07           tymark #"(rCs)r" 
0740EC96 5A 00           lload 0 
0740EC98 10 08           push "models/monsters/enemyhead/enemyhead.model" 
0740EC9A 23 09           call_s btSetModel 
0740EC9C 11              pop 
0740EC9D 05 815A         ln 346 
0740ECA0 10 0A           push "sound/soldier/solsght1" 
0740ECA2 30              dup 
0740ECA3 5A 00           lload 0 
0740ECA5 65 0B           storeindex_s snd_sight 
0740ECA7 11              pop 
0740ECA8 05 815B         ln 347 
0740ECAB 10 0C           push "sound/soldier/solidle1" 
0740ECAD 30              dup 
0740ECAE 5A 00           lload 0 
0740ECB0 65 0D           storeindex_s snd_idle 
0740ECB2 11              pop 
0740ECB3 05 815D         ln 349 
0740ECB6 5A 00           lload 0 
0740ECB8 64 0E           loadindex_s origin 
0740ECBA 20              mark 
0740ECBB 46              push_0 
0740ECBC 46              push_0 
0740ECBD 45 0001         push_sv 256 
0740ECC0 84              vector 
0740ECC1 9F              add 
0740ECC2 30              dup 
0740ECC3 5A 00           lload 0 
0740ECC5 65 0E           storeindex_s origin 
0740ECC7 11              pop 
0740ECC8 05 815F         ln 351 
0740ECCB 20              mark 
0740ECCC 58 40           push_sv_n 64 
0740ECCE 58 40           push_sv_n 64 
0740ECD0 58 20           push_sv_n 32 
0740ECD2 84              vector 
0740ECD3 30              dup 
0740ECD4 5A 00           lload 0 
0740ECD6 65 0F           storeindex_s mins 
0740ECD8 11              pop 
0740ECD9 05 8160         ln 352 
0740ECDC 20              mark 
0740ECDD 57 40           push_sv_p 64 
0740ECDF 57 40           push_sv_p 64 
0740ECE1 57 40           push_sv_p 64 
0740ECE3 84              vector 
0740ECE4 30              dup 
0740ECE5 5A 00           lload 0 
0740ECE7 65 10           storeindex_s maxs 
0740ECE9 11              pop 
0740ECEA 05 8161         ln 353 
0740ECED 45 8403         push_sv 900 
0740ECF0 36              dup_f 
0740ECF1 5A 00           lload 0 
0740ECF3 65 11           storeindex_s health 
0740ECF5 11              pop 
0740ECF6 05 8165         ln 357 
0740ECF9 2A 12           tymark #"(r)r" 
0740ECFB 5A 00           lload 0 
0740ECFD 24 13           tailcall_s btFlymonsterStart 
0740ECFF 1A              clearenv 
0740ED00 29              ret 

BLK (null), SA No, Capture=Yes
0740EEE0 02 0102         dbgmark "game_sv/MonsterGeneric.bs" 2 
0740EEE3 C202 020304     begin_class monster_generic2 ActorBase p 
0740EEE8 42              push_null 
0740EEE9 97 050006       tybind stand1_mf () s 
0740EEED 42              push_null 
0740EEEE 97 070006       tybind walk1_mf () s 
0740EEF2 42              push_null 
0740EEF3 97 080006       tybind walk2_mf () s 
0740EEF7 42              push_null 
0740EEF8 97 090006       tybind stand1_mfi () s 
0740EEFC 42              push_null 
0740EEFD 97 0A0006       tybind walk1_mfi () s 
0740EF01 42              push_null 
0740EF02 97 0B0006       tybind walk2_mfi () s 
0740EF06 42              push_null 
0740EF07 97 0C0006       tybind run_mf () s 
0740EF0B 42              push_null 
0740EF0C 97 0D0006       tybind attack1_mf () s 
0740EF10 42              push_null 
0740EF11 97 0E0006       tybind run_mfi () s 
0740EF15 42              push_null 
0740EF16 97 0F0006       tybind attack1_mfi () s 
0740EF1A 10 10           push #!<svm_blk_t:073FC160> 
0740EF1C 97 111200       tybind think_idle #"(r)r" () 
0740EF20 10 13           push #!<svm_blk_t:073FCB50> 
0740EF22 97 141200       tybind init #"(r)r" () 
0740EF26 10 15           push #!<svm_blk_t:073FD4E0> 
0740EF28 97 161200       tybind deinit #"(r)r" () 
0740EF2C 10 17           push #!<svm_blk_t:073FDDD0> 
0740EF2E 97 181900       tybind blocked #"(rr)r" () 
0740EF32 10 1A           push #!<svm_blk_t:073FE6C0> 
0740EF34 97 1B1900       tybind touch #"(rr)r" () 
0740EF38 10 1C           push #!<svm_blk_t:073FEFB0> 
0740EF3A 97 1D1900       tybind use #"(rr)r" () 
0740EF3E 10 1E           push #!<svm_blk_t:073FF8A0> 
0740EF40 97 1F2000       tybind pain #"(rrr)r" () 
0740EF44 10 21           push #!<svm_blk_t:07400190> 
0740EF46 97 222000       tybind die #"(rrr)r" () 
0740EF4A 10 23           push #!<svm_blk_t:07400A90> 
0740EF4C 97 242000       tybind cmdmsg #"(rrr)r" () 
0740EF50 10 25           push #!<svm_blk_t:07401380> 
0740EF52 97 261200       tybind stand #"(r)r" () 
0740EF56 10 27           push #!<svm_blk_t:07401CA0> 
0740EF58 97 281200       tybind walk1_random #"(r)r" () 
0740EF5C 10 29           push #!<svm_blk_t:074025E0> 
0740EF5E 97 2A1200       tybind walk #"(r)r" () 
0740EF62 10 2B           push #!<svm_blk_t:07402F00> 
0740EF64 97 2C1200       tybind run #"(r)r" () 
0740EF68 10 2D           push #!<svm_blk_t:07403800> 
0740EF6A 97 2E1200       tybind missile #"(r)r" () 
0740EF6E 10 2F           push #!<svm_blk_t:07404120> 
0740EF70 97 301200       tybind think_fire #"(r)r" () 
0740EF74 10 31           push #!<svm_blk_t:07404A60> 
0740EF76 97 321200       tybind melee #"(r)r" () 
0740EF7A 10 33           push #!<svm_blk_t:07405370> 
0740EF7C 97 021904       tybind monster_generic2 #"(rr)r" p 
0740EF80 20              mark 
0740EF81 10 34           push #!<svm_blk_t:074081E0> 
0740EF83 21              call 
0740EF84 C206            end_class 
0740EF86 11              pop 
0740EF87 05 80DE         ln 222 
0740EF8A C202 350204     begin_class passive_sheep monster_generic2 p 
0740EF8F 10 36           push #!<svm_blk_t:07408E00> 
0740EF91 97 351904       tybind passive_sheep #"(rr)r" p 
0740EF95 10 37           push #!<svm_blk_t:07409730> 
0740EF97 97 111200       tybind think_idle #"(r)r" () 
0740EF9B 10 38           push #!<svm_blk_t:0740A080> 
0740EF9D 97 141200       tybind init #"(r)r" () 
0740EFA1 C206            end_class 
0740EFA3 11              pop 
0740EFA4 05 8104         ln 260 
0740EFA7 C202 390204     begin_class passive_pig monster_generic2 p 
0740EFAC 10 3A           push #!<svm_blk_t:0740AA20> 
0740EFAE 97 391904       tybind passive_pig #"(rr)r" p 
0740EFB2 10 3B           push #!<svm_blk_t:0740B350> 
0740EFB4 97 111200       tybind think_idle #"(r)r" () 
0740EFB8 10 3C           push #!<svm_blk_t:0740BC80> 
0740EFBA 97 141200       tybind init #"(r)r" () 
0740EFBE C206            end_class 
0740EFC0 11              pop 
0740EFC1 05 812A         ln 298 
0740EFC4 C202 3D0204     begin_class monster_army monster_generic2 p 
0740EFC9 10 3E           push #!<svm_blk_t:0740C620> 
0740EFCB 97 3D1904       tybind monster_army #"(rr)r" p 
0740EFCF C206            end_class 
0740EFD1 11              pop 
0740EFD2 05 8134         ln 308 
0740EFD5 C202 3F0204     begin_class monster_enemyhead monster_generic2 p 
0740EFDA 10 40           push #!<svm_blk_t:0740CF10> 
0740EFDC 97 3F1904       tybind monster_enemyhead #"(rr)r" p 
0740EFE0 10 41           push #!<svm_blk_t:0740D840> 
0740EFE2 97 111200       tybind think_idle #"(r)r" () 
0740EFE6 10 42           push #!<svm_blk_t:0740E170> 
0740EFE8 97 301200       tybind think_fire #"(r)r" () 
0740EFEC 10 43           push #!<svm_blk_t:0740EBA0> 
0740EFEE 97 141200       tybind init #"(r)r" () 
0740EFF2 C206            end_class 
0740EFF4 29              ret 

Add Slot 07411AC0 stand1_mf r
Add Slot 07411B50 walk1_mf r
Add Slot 07411BE0 walk2_mf r
Add Slot 07411C70 stand1_mfi r
Add Slot 07411D00 walk1_mfi r
Add Slot 07411D90 walk2_mfi r
Add Slot 07411E20 run_mf r
Add Slot 07411EB0 attack1_mf r
Add Slot 07411F40 run_mfi r
Add Slot 07411FD0 attack1_mfi r
This A = 07411590, run=07402F00, this.run=07402F00
BTSV_ScriptInit: Called
Eval:  load("game/sv_main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/sv_main.bs") -> (funcall load "game/sv_main.bs")
expr: "game/sv_main.bs" -> "game/sv_main.bs"
BLK (null), SA No, Capture=Yes
07424220 02 0101         dbgmark "<eval-str>" 1 
07424223 2A 02           tymark #"(Cs)r" 
07424225 10 03           push "game/sv_main.bs" 
07424227 24 04           tailcall_s load 
07424229 1A              clearenv 
0742422A 29              ret 

stmt: (dbgmark "game/sv_main.bs" 1) -> (dbgmark "game/sv_main.bs" 1)
stmt: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: "BGBScript Server Main Start\n" -> "BGBScript Server Main Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (funcall printf "BGBScript Server Main End\n") -> (funcall printf "BGBScript Server Main End\n")
expr: "BGBScript Server Main End\n" -> "BGBScript Server Main End\n"
BLK (null), SA No, Capture=Yes
07424F30 02 0101         dbgmark "game/sv_main.bs" 1 
07424F33 2A 02           tymark #"(Cs)r" 
07424F35 10 03           push "BGBScript Server Main Start\n" 
07424F37 23 04           call_s gc_printf 
07424F39 11              pop 
07424F3A 05 05           ln 5 
07424F3C 2A 02           tymark #"(Cs)r" 
07424F3E 10 05           push "BGBScript Server Main End\n" 
07424F40 24 04           tailcall_s gc_printf 
07424F42 1A              clearenv 
07424F43 29              ret 

BGBScript Server Main Start
BGBScript Server Main End
()
Add Slot 0742B5B0 light PXBTGE_Light_s;
Add Slot 0742B680 item PXBTGE_ItemInfo_s;
Add Slot 0742B760 groundEntity PXBTGE_Entity_s;
Add Slot 0742B840 chain PXBTGE_Entity_s;
Add Slot 0742B8F0 enemy PXBTGE_Entity_s;
Add Slot 0742B980 owner PXBTGE_Entity_s;
Add Slot 0742BA30 goalEntity PXBTGE_Entity_s;
Add Slot 0742BAE0 moveTarget PXBTGE_Entity_s;
Add Slot 0742BB90 oldEnemy PXBTGE_Entity_s;
Add Slot 0742BC40 linkNext PXBTGE_Entity_s;
Add Slot 0742BCF0 linkFirst PXBTGE_Entity_s;
Add Slot 0742BDA0 entNextNode PXBTGE_Entity_s;
Add Slot 0742BE50 entNode PXBTGE_EntityNode_s;
Add Slot 0742CED0 triggerEntity PXBTGE_Entity_s;
Add Slot 0742DFC0 teamLeader PXBTGE_Entity_s;
Add Slot 0742F160 gui_ctx PXBTCMUI_Context_s;
00: 0.1189 0.1189 0.1189
01: 0.2059 0.0000 0.0000
02: 0.0000 0.2059 0.0000
03: 0.1456 0.1456 0.0000
04: 0.0000 0.0000 0.2059
05: 0.1456 0.0000 0.1456
06: 0.0000 0.1456 0.1456
07: 0.1710 0.1026 0.0513
08: 0.1026 0.1710 0.0513
09: 0.1681 0.0841 0.0841
0A: 0.0841 0.1681 0.0841
0B: 0.1373 0.1373 0.0686
0C: 0.0841 0.0841 0.1681
0D: 0.1373 0.0686 0.1373
0E: 0.0686 0.1373 0.1373
0F: 0.0513 0.1026 0.1710
10: 0.1321 0.1321 0.1321
11: 0.2288 0.0000 0.0000
12: 0.0000 0.2288 0.0000
13: 0.1618 0.1618 0.0000
14: 0.0000 0.0000 0.2288
15: 0.1618 0.0000 0.1618
16: 0.0000 0.1618 0.1618
17: 0.1900 0.1140 0.0570
18: 0.1140 0.1900 0.0570
19: 0.1868 0.0934 0.0934
1A: 0.0934 0.1868 0.0934
1B: 0.1525 0.1525 0.0763
1C: 0.0934 0.0934 0.1868
1D: 0.1525 0.0763 0.1525
1E: 0.0763 0.1525 0.1525
1F: 0.0570 0.1140 0.1900
20: 0.1468 0.1468 0.1468
21: 0.2542 0.0000 0.0000
22: 0.0000 0.2542 0.0000
23: 0.1797 0.1797 0.0000
24: 0.0000 0.0000 0.2542
25: 0.1797 0.0000 0.1797
26: 0.0000 0.1797 0.1797
27: 0.2111 0.1267 0.0633
28: 0.1267 0.2111 0.0633
29: 0.2075 0.1038 0.1038
2A: 0.1038 0.2075 0.1038
2B: 0.1695 0.1695 0.0847
2C: 0.1038 0.1038 0.2075
2D: 0.1695 0.0847 0.1695
2E: 0.0847 0.1695 0.1695
2F: 0.0633 0.1267 0.2111
30: 0.1631 0.1631 0.1631
31: 0.2824 0.0000 0.0000
32: 0.0000 0.2824 0.0000
33: 0.1997 0.1997 0.0000
34: 0.0000 0.0000 0.2824
35: 0.1997 0.0000 0.1997
36: 0.0000 0.1997 0.1997
37: 0.2345 0.1407 0.0704
38: 0.1407 0.2345 0.0704
39: 0.2306 0.1153 0.1153
3A: 0.1153 0.2306 0.1153
3B: 0.1883 0.1883 0.0941
3C: 0.1153 0.1153 0.2306
3D: 0.1883 0.0941 0.1883
3E: 0.0941 0.1883 0.1883
3F: 0.0704 0.1407 0.2345
40: 0.1812 0.1812 0.1812
41: 0.3138 0.0000 0.0000
42: 0.0000 0.3138 0.0000
43: 0.2219 0.2219 0.0000
44: 0.0000 0.0000 0.3138
45: 0.2219 0.0000 0.2219
46: 0.0000 0.2219 0.2219
47: 0.2606 0.1564 0.0782
48: 0.1564 0.2606 0.0782
49: 0.2562 0.1281 0.1281
4A: 0.1281 0.2562 0.1281
4B: 0.2092 0.2092 0.1046
4C: 0.1281 0.1281 0.2562
4D: 0.2092 0.1046 0.2092
4E: 0.1046 0.2092 0.2092
4F: 0.0782 0.1564 0.2606
50: 0.2013 0.2013 0.2013
51: 0.3487 0.0000 0.0000
52: 0.0000 0.3487 0.0000
53: 0.2466 0.2466 0.0000
54: 0.0000 0.0000 0.3487
55: 0.2466 0.0000 0.2466
56: 0.0000 0.2466 0.2466
57: 0.2896 0.1737 0.0869
58: 0.1737 0.2896 0.0869
59: 0.2847 0.1423 0.1423
5A: 0.1423 0.2847 0.1423
5B: 0.2325 0.2325 0.1162
5C: 0.1423 0.1423 0.2847
5D: 0.2325 0.1162 0.2325
5E: 0.1162 0.2325 0.2325
5F: 0.0869 0.1737 0.2896
60: 0.2237 0.2237 0.2237
61: 0.3874 0.0000 0.0000
62: 0.0000 0.3874 0.0000
63: 0.2739 0.2739 0.0000
64: 0.0000 0.0000 0.3874
65: 0.2739 0.0000 0.2739
66: 0.0000 0.2739 0.2739
67: 0.3217 0.1930 0.0965
68: 0.1930 0.3217 0.0965
69: 0.3163 0.1582 0.1582
6A: 0.1582 0.3163 0.1582
6B: 0.2583 0.2583 0.1291
6C: 0.1582 0.1582 0.3163
6D: 0.2583 0.1291 0.2583
6E: 0.1291 0.2583 0.2583
6F: 0.0965 0.1930 0.3217
70: 0.2485 0.2485 0.2485
71: 0.4305 0.0000 0.0000
72: 0.0000 0.4305 0.0000
73: 0.3044 0.3044 0.0000
74: 0.0000 0.0000 0.4305
75: 0.3044 0.0000 0.3044
76: 0.0000 0.3044 0.3044
77: 0.3575 0.2145 0.1072
78: 0.2145 0.3575 0.1072
79: 0.3515 0.1757 0.1757
7A: 0.1757 0.3515 0.1757
7B: 0.2870 0.2870 0.1435
7C: 0.1757 0.1757 0.3515
7D: 0.2870 0.1435 0.2870
7E: 0.1435 0.2870 0.2870
7F: 0.1072 0.2145 0.3575
80: 0.2761 0.2761 0.2761
81: 0.4783 0.0000 0.0000
82: 0.0000 0.4783 0.0000
83: 0.3382 0.3382 0.0000
84: 0.0000 0.0000 0.4783
85: 0.3382 0.0000 0.3382
86: 0.0000 0.3382 0.3382
87: 0.3972 0.2383 0.1192
88: 0.2383 0.3972 0.1192
89: 0.3905 0.1953 0.1953
8A: 0.1953 0.3905 0.1953
8B: 0.3189 0.3189 0.1594
8C: 0.1953 0.1953 0.3905
8D: 0.3189 0.1594 0.3189
8E: 0.1594 0.3189 0.3189
8F: 0.1192 0.2383 0.3972
90: 0.3068 0.3068 0.3068
91: 0.5314 0.0000 0.0000
92: 0.0000 0.5314 0.0000
93: 0.3758 0.3758 0.0000
94: 0.0000 0.0000 0.5314
95: 0.3758 0.0000 0.3758
96: 0.0000 0.3758 0.3758
97: 0.4413 0.2648 0.1324
98: 0.2648 0.4413 0.1324
99: 0.4339 0.2170 0.2170
9A: 0.2170 0.4339 0.2170
9B: 0.3543 0.3543 0.1771
9C: 0.2170 0.2170 0.4339
9D: 0.3543 0.1771 0.3543
9E: 0.1771 0.3543 0.3543
9F: 0.1324 0.2648 0.4413
A0: 0.3409 0.3409 0.3409
A1: 0.5905 0.0000 0.0000
A2: 0.0000 0.5905 0.0000
A3: 0.4175 0.4175 0.0000
A4: 0.0000 0.0000 0.5905
A5: 0.4175 0.0000 0.4175
A6: 0.0000 0.4175 0.4175
A7: 0.4904 0.2942 0.1471
A8: 0.2942 0.4904 0.1471
A9: 0.4821 0.2411 0.2411
AA: 0.2411 0.4821 0.2411
AB: 0.3937 0.3937 0.1968
AC: 0.2411 0.2411 0.4821
AD: 0.3937 0.1968 0.3937
AE: 0.1968 0.3937 0.3937
AF: 0.1471 0.2942 0.4904
B0: 0.3788 0.3788 0.3788
B1: 0.6561 0.0000 0.0000
B2: 0.0000 0.6561 0.0000
B3: 0.4639 0.4639 0.0000
B4: 0.0000 0.0000 0.6561
B5: 0.4639 0.0000 0.4639
B6: 0.0000 0.4639 0.4639
B7: 0.5449 0.3269 0.1635
B8: 0.3269 0.5449 0.1635
B9: 0.5357 0.2679 0.2679
BA: 0.2679 0.5357 0.2679
BB: 0.4374 0.4374 0.2187
BC: 0.2679 0.2679 0.5357
BD: 0.4374 0.2187 0.4374
BE: 0.2187 0.4374 0.4374
BF: 0.1635 0.3269 0.5449
C0: 0.4209 0.4209 0.4209
C1: 0.7290 0.0000 0.0000
C2: 0.0000 0.7290 0.0000
C3: 0.5155 0.5155 0.0000
C4: 0.0000 0.0000 0.7290
C5: 0.5155 0.0000 0.5155
C6: 0.0000 0.5155 0.5155
C7: 0.6054 0.3632 0.1816
C8: 0.3632 0.6054 0.1816
C9: 0.5952 0.2976 0.2976
CA: 0.2976 0.5952 0.2976
CB: 0.4860 0.4860 0.2430
CC: 0.2976 0.2976 0.5952
CD: 0.4860 0.2430 0.4860
CE: 0.2430 0.4860 0.4860
CF: 0.1816 0.3632 0.6054
D0: 0.4677 0.4677 0.4677
D1: 0.8100 0.0000 0.0000
D2: 0.0000 0.8100 0.0000
D3: 0.5728 0.5728 0.0000
D4: 0.0000 0.0000 0.8100
D5: 0.5728 0.0000 0.5728
D6: 0.0000 0.5728 0.5728
D7: 0.6727 0.4036 0.2018
D8: 0.4036 0.6727 0.2018
D9: 0.6614 0.3307 0.3307
DA: 0.3307 0.6614 0.3307
DB: 0.5400 0.5400 0.2700
DC: 0.3307 0.3307 0.6614
DD: 0.5400 0.2700 0.5400
DE: 0.2700 0.5400 0.5400
DF: 0.2018 0.4036 0.6727
E0: 0.5196 0.5196 0.5196
E1: 0.9000 0.0000 0.0000
E2: 0.0000 0.9000 0.0000
E3: 0.6364 0.6364 0.0000
E4: 0.0000 0.0000 0.9000
E5: 0.6364 0.0000 0.6364
E6: 0.0000 0.6364 0.6364
E7: 0.7474 0.4484 0.2242
E8: 0.4484 0.7474 0.2242
E9: 0.7348 0.3674 0.3674
EA: 0.3674 0.7348 0.3674
EB: 0.6000 0.6000 0.3000
EC: 0.3674 0.3674 0.7348
ED: 0.6000 0.3000 0.6000
EE: 0.3000 0.6000 0.6000
EF: 0.2242 0.4484 0.7474
F0: 0.5774 0.5774 0.5774
F1: 1.0000 0.0000 0.0000
F2: 0.0000 1.0000 0.0000
F3: 0.7071 0.7071 0.0000
F4: 0.0000 0.0000 1.0000
F5: 0.7071 0.0000 0.7071
F6: 0.0000 0.7071 0.7071
F7: 0.8305 0.4983 0.2491
F8: 0.4983 0.8305 0.2491
F9: 0.8165 0.4082 0.4082
FA: 0.4082 0.8165 0.4082
FB: 0.6667 0.6667 0.3333
FC: 0.4082 0.4082 0.8165
FD: 0.6667 0.3333 0.6667
FE: 0.3333 0.6667 0.6667
FF: 0.2491 0.4983 0.8305
BTGE_Voxel_LoadDungeonType: 1 none
Adler32: Fail  6DA618C2 8998E59B
BTGE_Voxel_LoadDungeonType: 1 none: OK
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick
Adler32: Fail  5C1D0EA6 0B620765
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick: OK
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick
Adler32: Fail  37090EA6 97677FC0
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick: OK
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick
Adler32: Fail  D4423C22 01D1F60F
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick: OK
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick
Adler32: Fail  8469FB06 A7E87EE2
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick: OK
BTGE_Voxel_LoadDungeonType: 8 break_px_brick
Adler32: Fail  2D34FB06 CF94C8A4
BTGE_Voxel_LoadDungeonType: 8 break_px_brick: OK
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick
Adler32: Fail  6DA9B4D1 3832E6F5
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick: OK
BTGE_Voxel_LoadDungeonType: 10 break_py_brick
Adler32: Fail  3886B463 B956C876
BTGE_Voxel_LoadDungeonType: 10 break_py_brick: OK
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick
Adler32: Fail  EC9F7922 DD7E44FD
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick
Adler32: Fail  DA580EA6 6212C77A
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick
Adler32: Fail  251B0EA6 8C6A59C4
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick
Adler32: Fail  F2243C22 1DCD0360
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick
Adler32: Fail  8469FB06 A7E87EE2
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick
Adler32: Fail  2D34FB06 CF94C8A4
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick
Adler32: Fail  6DA9B4D1 3832E6F5
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick
Adler32: Fail  3886B463 B956C876
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick
Adler32: Fail  28024F64 A3614B80
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick
Adler32: Fail  B26D1CD2 DDDB268D
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick
Adler32: Fail  DE3B8945 01BA751B
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick
Adler32: Fail  551E9045 C7A8F061
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick
Adler32: Fail  ACAAA395 E0E8D428
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick: OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,-1,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,-1,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,1,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,1,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
Adler32: Fail  3A9CBB36 35700B2E
Adler32: Fail  281164E6 E278911B
PNG: Check Fail: Offs=109 2->0
PNG: Check Fail: Offs=30998 30->0
BTGE_ServerInitFunc: BTGE_DecodeClientUpdate Pass 0B6C1352
BTGE_DecodeClientConnect
btFindSpawnpoint: 1 spawnpoints
BTGE_ServerInitFunc: btsvFreeUpdate Pass 0B6C1A50
BTGE_ClientInitFunc: BTCL_DecodeUpdate Pass 0FC41285
camera: 4
BTCL_SetupClientEntFrameWMdl: Model Changed
BTCL_SetupClientEntFrameWMdl: New wmdl instance
skel loaded, 2 bones, 0 solids
AC3D_LoadModel: loading 'models/weapons/v_blast/v_blast1.ac'
GroupMergeVecsFrac 1: 398 xyz, 705 st, 784 face
GroupMergeVecsFrac 2: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 1: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 2: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 1: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 2: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 1: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 2: 116 xyz, 617 st, 224 face
Hitbox: 0 22.990 Org=(-4.936 -15.016 -4.513) Rad=(0.116 0.905 0.122)
Hitbox: 1 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 0632D480
anim active: 0, 5 frames
anim pow: 5, 4 frames
anim idle1: 9, 24 frames
anim idle2: 33, 20 frames
anim putway: 53, 3 frames
Setup FBO
BTGE_Voxel_DeltaRegionBuffer: Buffer Space Check
BTGE_ClientInitFunc: BTCL_ComposeUpdate Pass 0FC41249
BTGE_Voxel_AllocRegionForPoint: Pt=(0,0,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,0,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(0,-512,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTCL_DecodeLDelta: (ldelta 1 (st 0) (fl 33537) (texname ()) (boxval 0.0 0.0 0.0) (maxs 0.0 0.0 0.0) (mins 0.0 0.0 0.0) (coeff 0.862069 0.862069 1.0) (val 10000.0 0.0) (clr 1.0 1.0 1.0) (dir 0.0 0.0 0.0) (org 0.0 0.0 2048.0))
stmt: (dbgmark "<eval-str>" 5) -> (dbgmark "<eval-str>" 5)
stmt: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: "Client Stuff Eval: Begin\n" -> "Client Stuff Eval: Begin\n"
stmt: (linenum 7) -> (linenum 7)
stmt: (vars (btcl_clientstuff_vol)) -> (vars (btcl_clientstuff_vol))
expr: () -> ()
stmt: (linenum 8) -> (linenum 8)
stmt: (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)) -> (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400))
expr: (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400) -> (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)
expr: "images/faces/anim/robotface0_aa" -> "images/faces/anim/robotface0_aa"
expr: (unary - 200) -> -200
expr: (unary - 150) -> -150
expr: 400 -> 400
expr: 400 -> 400
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: btcl_clientstuff_vol -> btcl_clientstuff_vol
expr: (unary - 1) -> -1
stmt: (linenum 13) -> (linenum 13)
stmt: (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))) -> (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))
stmt: (dbgmark "<eval-str>" 15) -> (dbgmark "<eval-str>" 15)
expr: (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)) -> (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))
expr: (funcall PDGL_KeyDown K_SHIFT) -> (funcall PDGL_KeyDown K_SHIFT)
expr: K_SHIFT -> 134
expr: () -> ()
expr: (begin) -> ()
BLK BTCL_ClientStuff_Draw, SA No, Capture=Yes
04CE8910 02 010F         dbgmark "<eval-str>" 15 
04CE8913 2A 02           tymark #"(r)r" 
04CE8915 57 86           push_sv_p 134 
04CE8917 23 03           call_s PDGL_KeyDown 
04CE8919 78 0500         jmp_false 04CE8921 
04CE891C 42              push_null 
04CE891D 1F 04           cast_s r 
04CE891F 1A              clearenv 
04CE8920 29              ret 
04CE8921 42              push_null 
04CE8922 1A              clearenv 
04CE8923 29              ret 

stmt: (linenum 25) -> (linenum 25)
expr: (funcall printf "Client Stuff Eval: End\n") -> (funcall printf "Client Stuff Eval: End\n")
expr: "Client Stuff Eval: End\n" -> "Client Stuff Eval: End\n"
BLK (null), SA No, Capture=Yes
04CE87A0 02 0105         dbgmark "<eval-str>" 5 
04CE87A3 2A 02           tymark #"(Cs)r" 
04CE87A5 10 03           push "Client Stuff Eval: Begin\n" 
04CE87A7 23 04           call_s gc_printf 
04CE87A9 11              pop 
04CE87AA 05 07           ln 7 
04CE87AC 42              push_null 
04CE87AD 14 05           bind btcl_clientstuff_vol 
04CE87AF 05 08           ln 8 
04CE87B1 2A 06           tymark #"(Csrrrr)r" 
04CE87B3 10 07           push "images/faces/anim/robotface0_aa" 
04CE87B5 58 C8           push_sv_n 200 
04CE87B7 58 96           push_sv_n 150 
04CE87B9 45 9001         push_sv 400 
04CE87BC 45 9001         push_sv 400 
04CE87BF 23 08           call_s LBXGL_BrushDraw2D_CreateDisplayImage2 
04CE87C1 13 05           store btcl_clientstuff_vol 
04CE87C3 05 0B           ln 11 
04CE87C5 2A 09           tymark #"(rr)r" 
04CE87C7 12 05           load btcl_clientstuff_vol 
04CE87C9 58 01           push_sv_n 1 
04CE87CB 23 0A           call_s LBXGL_BrushDraw2D_SetObjectOrdinal 
04CE87CD 11              pop 
04CE87CE 05 0D           ln 13 
04CE87D0 10 0B           push #!<svm_blk_t:04CE8880> 
04CE87D2 97 0C0D00       tybind BTCL_ClientStuff_Draw #"()r" () 
04CE87D6 05 19           ln 25 
04CE87D8 2A 02           tymark #"(Cs)r" 
04CE87DA 10 0E           push "Client Stuff Eval: End\n" 
04CE87DC 24 04           tailcall_s gc_printf 
04CE87DE 29              ret 

Client Stuff Eval: Begin
Client Stuff Eval: End
Texture: Missing-Base: textures/env/bkgtst
LBXGL_SkyBox_LoadSky: bkgtst
Texture: Missing-Base: textures/env/stars
LBXGL_SkyBox_LoadSky: stars
Texture: Missing-Base: textures/env/bkgr
LBXGL_SkyBox_LoadSky: bkgr
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,-512,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
SoundRec: Sound overrun
RNG Init
Th 00001D58 10464 00394557
SoundRec: Sound overrun
SoundRec: Sound overrun
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073E3680
mov [esi+248], 15
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x05404280
call @0x0F893585
mov [esp+4], eax
call @0x0F8922B6
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x054043A0
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x05404580
call @0x0F8918D9
mov [esp+4], eax
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
Load Patch sound/player/jump1 (4096)
MainAVIHeader:
dwMicroSecPerFrame=100000
dwMaxBytesPerSec=0
dwPaddingGranularity=0
dwFlags=16
dwTotalFrames=8
dwInitialFrames=0
dwStreams=1
dwSuggestedBufferSize=0
dwWidth=256
dwHeight=256

AVIStreamHeader(0):
fccType=vids
fccHandler=rpza
dwFlags=0
wPriority=0
wLanguage=0
dwInitialFrames=0
dwScale=1024
dwRate=10240
dwStart=0
dwLength=8
dwSuggestedBufferSize=0
dwQuality=0
dwSampleSize=0
rcFrame=left:0 top:0 right:0 bottom:0

BITMAPINFOHEADER(0):
biSize=40
biWidth=256
biHeight=256
biPlanes=1
biBitCount=32
biCompression=azpr
biSizeImage=262144
biXPelsPerMeter=0
biYPelsPerMeter=0
biClrUsed=0
biClrImportant=0

AVI: Index 8 ents
AVI: codec api
VFW: Init
fccType: vidc
fccHandler: mrle
fccType: vidc
fccHandler: msvc
fccType: vidc
fccHandler: uyvy
fccType: vidc
fccHandler: yuy2
fccType: vidc
fccHandler: yvyu
fccType: vidc
fccHandler: iyuv
fccType: vidc
fccHandler: i420
fccType: vidc
fccHandler: yvu9
fccType: vidc
fccHandler: cvid
fccType: vidc
fccHandler: fps1
fccType: vidc
fccHandler: hfyu
fccType: vidc
fccHandler: lags
fccType: vidc
fccHandler: x264
fccType: vidc
fccHandler: xvid
fccType: vidc
fccHandler: ffds
fccType: vidc
fccHandler: lwlr
fccType: vidc
fccHandler: btic
fccType: vidc
fccHandler: bt1c
fccType: vidc
fccHandler: bt1d
fccType: vidc
fccHandler: bt2c
fccType: vidc
fccHandler: bt1h
MJPG: Init
MBTC: Init
MBTC: Init
RPZA: Init
Load Patch sound/player/land (4097)
Th 00001D64 6968 008F1500
Load Patch sound/player/step1 (4098)
passive_pig: ctor
Add Slot 073F8F90 entity r
Add Slot 073F8F90 entity r
Add Slot 073F8F90 entity r
Add Slot 073F9130 spawnEntity r
Add Slot 073F9130 spawnEntity r
Add Slot 073F9130 spawnEntity r
monster_sheep: init A self=2E52E260
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 07426920 solidtype i
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 074268C0 movetype i
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 0742D7C0 snd_sight Pc
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 0742D850 snd_idle Pc
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 07427110 mins Cb
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 074271A0 maxs Cb
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 0742A1F0 health f
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2E52E950 ent=2E52E260
Add Slot 07411C70 stand1_mfi r
Load Patch sound/misc/tele1 (4099)
skel loaded, 32 bones, 0 solids
AC3D_LoadModel: loading 'models/monsters/pig/parasite2.ac'
GroupMergeVecsFrac 1: 696 xyz, 998 st, 1332 face
GroupMergeVecsFrac 2: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 1: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 2: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 1: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 2: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 1: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 2: 207 xyz, 973 st, 354 face
Hitbox: 0 59.495 Org=(0.006 0.897 0.687) Rad=(0.506 0.342 0.179)
Hitbox: 1 2.969 Org=(0.192 -2.232 2.020) Rad=(1.366 1.627 1.287)
Hitbox: 2 28.784 Org=(0.359 -0.520 0.710) Rad=(1.075 0.349 0.271)
Hitbox: 3 47.641 Org=(-0.145 -5.370 2.090) Rad=(0.241 0.323 0.217)
Hitbox: 4 4.833 Org=(0.069 -3.118 -0.419) Rad=(0.746 1.163 0.738)
Hitbox: 5 13.895 Org=(0.048 2.417 -0.516) Rad=(0.285 0.545 0.268)
Hitbox: 6 14.832 Org=(0.049 3.943 -0.256) Rad=(0.280 0.539 0.272)
Hitbox: 7 24.904 Org=(0.063 2.307 -0.139) Rad=(0.156 0.096 0.156)
Hitbox: 8 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 9 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 10 18.604 Org=(0.104 2.322 -4.180) Rad=(0.299 0.488 0.726)
Hitbox: 11 18.816 Org=(-0.011 2.025 -4.262) Rad=(0.299 0.491 0.749)
Hitbox: 12 23.046 Org=(-0.055 2.100 -5.228) Rad=(0.269 0.357 0.719)
Hitbox: 13 19.229 Org=(0.081 1.822 -5.075) Rad=(0.301 0.377 0.664)
Hitbox: 14 28.864 Org=(0.018 -3.398 -4.755) Rad=(0.234 0.458 0.550)
Hitbox: 15 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 16 28.045 Org=(0.029 -3.534 -4.878) Rad=(0.232 0.467 0.638)
Hitbox: 17 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 18 27.158 Org=(0.126 -3.331 -4.616) Rad=(0.233 0.474 0.645)
Hitbox: 19 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 20 27.157 Org=(0.024 -3.639 -4.766) Rad=(0.244 0.421 0.535)
Hitbox: 21 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 22 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 23 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 24 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 25 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 26 0.960 Org=(-0.278 -2.028 0.467) Rad=(2.764 0.000 0.000)
Hitbox: 27 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 28 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 29 3.192 Org=(0.344 1.051 0.960) Rad=(2.382 0.758 0.556)
Hitbox: 30 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 31 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 2E6050F0
anim walk1: 0, 30 frames
anim walk2: 30, 10 frames
anim run: 40, 7 frames
passive_sheep: ctor
Add Slot 073F8F90 entity r
Add Slot 073F9130 spawnEntity r
monster_sheep: init A self=2E9B1B70
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=2E9B2260 ent=2E9B1B70
skel loaded, 32 bones, 0 solids
AC3D_LoadModel: loading 'models/monsters/sheep/parasite2.ac'
GroupMergeVecsFrac 1: 696 xyz, 998 st, 1332 face
GroupMergeVecsFrac 2: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 1: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 2: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 1: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 2: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 1: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 2: 207 xyz, 973 st, 354 face
Hitbox: 0 59.495 Org=(0.006 0.897 0.687) Rad=(0.506 0.342 0.179)
Hitbox: 1 2.969 Org=(0.192 -2.232 2.020) Rad=(1.366 1.627 1.287)
Hitbox: 2 28.784 Org=(0.359 -0.520 0.710) Rad=(1.075 0.349 0.271)
Hitbox: 3 47.641 Org=(-0.145 -5.370 2.090) Rad=(0.241 0.323 0.217)
Hitbox: 4 4.833 Org=(0.069 -3.118 -0.419) Rad=(0.746 1.163 0.738)
Hitbox: 5 13.895 Org=(0.048 2.417 -0.516) Rad=(0.285 0.545 0.268)
Hitbox: 6 14.832 Org=(0.049 3.943 -0.256) Rad=(0.280 0.539 0.272)
Hitbox: 7 24.904 Org=(0.063 2.307 -0.139) Rad=(0.156 0.096 0.156)
Hitbox: 8 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 9 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 10 18.604 Org=(0.104 2.322 -4.180) Rad=(0.299 0.488 0.726)
Hitbox: 11 18.816 Org=(-0.011 2.025 -4.262) Rad=(0.299 0.491 0.749)
Hitbox: 12 23.046 Org=(-0.055 2.100 -5.228) Rad=(0.269 0.357 0.719)
Hitbox: 13 19.229 Org=(0.081 1.822 -5.075) Rad=(0.301 0.377 0.664)
Hitbox: 14 28.864 Org=(0.018 -3.398 -4.755) Rad=(0.234 0.458 0.550)
Hitbox: 15 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 16 28.045 Org=(0.029 -3.534 -4.878) Rad=(0.232 0.467 0.638)
Hitbox: 17 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 18 27.158 Org=(0.126 -3.331 -4.616) Rad=(0.233 0.474 0.645)
Hitbox: 19 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 20 27.157 Org=(0.024 -3.639 -4.766) Rad=(0.244 0.421 0.535)
Hitbox: 21 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 22 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 23 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 24 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 25 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 26 0.960 Org=(-0.278 -2.028 0.467) Rad=(2.764 0.000 0.000)
Hitbox: 27 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 28 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 29 3.192 Org=(0.344 1.051 0.960) Rad=(2.382 0.758 0.556)
Hitbox: 30 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 31 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 2EA3A9D0
anim walk1: 0, 30 frames
anim walk2: 30, 10 frames
anim run: 40, 7 frames
Add Slot 07411C70 stand1_mfi r
passive_sheep: ctor
monster_sheep: init A self=2EC6A790
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=2EC6AE80 ent=2EC6A790
passive_pig: ctor
monster_sheep: init A self=2EDFE9A0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2EDFF090 ent=2EDFE9A0
passive_sheep: ctor
monster_sheep: init A self=2EFD00B0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=2EFD07A0 ent=2EFD00B0
MainAVIHeader:
dwMicroSecPerFrame=100000
dwMaxBytesPerSec=0
dwPaddingGranularity=0
dwFlags=16
dwTotalFrames=10
dwInitialFrames=0
dwStreams=1
dwSuggestedBufferSize=0
dwWidth=128
dwHeight=128

AVIStreamHeader(0):
fccType=vids
fccHandler=MJPG
dwFlags=0
wPriority=0
wLanguage=0
dwInitialFrames=0
dwScale=1
dwRate=10
dwStart=0
dwLength=10
dwSuggestedBufferSize=0
dwQuality=0
dwSampleSize=0
rcFrame=left:1718776947 top:40 right:40 bottom:128

BITMAPINFOHEADER(0):
biSize=40
biWidth=128
biHeight=128
biPlanes=1
biBitCount=24
biCompression=JPEG
biSizeImage=49152
biXPelsPerMeter=0
biYPelsPerMeter=0
biClrUsed=0
biClrImportant=0

AVI: Index 10 ents
AVI: codec api
passive_pig: ctor
monster_sheep: init A self=2E4145D0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2E414CC0 ent=2E4145D0
passive_pig: ctor
monster_sheep: init A self=2EF2EF40
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2EF2F630 ent=2EF2EF40
Load Patch sound/player/land1 (4100)
passive_sheep: ctor
monster_sheep: init A self=2EFC5AB0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=2EFC61A0 ent=2EFC5AB0
passive_sheep: ctor
monster_sheep: init A self=2E854E80
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=2E855570 ent=2E854E80
Add Slot 07411D00 walk1_mfi r
Add Slot 07411D00 walk1_mfi r
Load Patch sound/animal/pig0 (4101)
Add Slot 07411D90 walk2_mfi r
MainAVIHeader:
dwMicroSecPerFrame=100000
dwMaxBytesPerSec=0
dwPaddingGranularity=0
dwFlags=16
dwTotalFrames=14
dwInitialFrames=0
dwStreams=1
dwSuggestedBufferSize=0
dwWidth=256
dwHeight=256

AVIStreamHeader(0):
fccType=vids
fccHandler=rpza
dwFlags=0
wPriority=0
wLanguage=0
dwInitialFrames=0
dwScale=1024
dwRate=10240
dwStart=0
dwLength=14
dwSuggestedBufferSize=0
dwQuality=0
dwSampleSize=0
rcFrame=left:0 top:0 right:0 bottom:0

BITMAPINFOHEADER(0):
biSize=40
biWidth=256
biHeight=256
biPlanes=1
biBitCount=32
biCompression=azpr
biSizeImage=262144
biXPelsPerMeter=0
biYPelsPerMeter=0
biClrUsed=0
biClrImportant=0

AVI: Index 14 ents
AVI: codec api
passive_pig: ctor
monster_sheep: init A self=33971B80
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33972270 ent=33971B80
passive_pig: ctor
monster_sheep: init A self=33AC81C0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33AC88B0 ent=33AC81C0
passive_pig: ctor
monster_sheep: init A self=33CA2060
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33CA2750 ent=33CA2060
passive_pig: ctor
monster_sheep: init A self=33DC6EA0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33DC7590 ent=33DC6EA0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 270
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x045FEB60
call @0x0F893585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x045FEC20
call @0x0F893012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+248], 150
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01A5A0
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2F01A660
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
Th 00001D70 10844 008F1500
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x045FF100
call @0x0F8918D9
mov [esp+4], eax
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_sheep: ctor
monster_sheep: init A self=33BAB660
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=33BABD50 ent=33BAB660
passive_pig: ctor
monster_sheep: init A self=33D776C0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33D77DB0 ent=33D776C0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 84
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F019E70
call @0x0F893585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F019F30
call @0x0F892E73
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 78
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F0813B0
call @0x0F893585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F081470
call @0x0F893012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_pig: ctor
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 115
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52F100
call @0x0F892CC0
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2E52F220
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073EFC80
mov [esi+248], 26
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52F730
call @0x0F892CC0
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2E52F850
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073EFC80
mov [esi+248], 9
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52FB80
call @0x0F892A90
mov esi, [ebp+8]
mov [esi+248], 10
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52FCA0
call @0x0F892554
mov [esp+4], eax
call @0x0F892A90
mov [esp+4], eax
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52F8B0
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52F280
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 118
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52F340
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52F400
call @0x0F891893
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
monster_sheep: init A self=33595E90
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33596580 ent=33595E90
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F081530
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F0815F0
call @0x0F892BEE
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 73
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E540090
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E540150
call @0x0F892BEE
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+248], 172
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x33680D10
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x33680DD0
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
Load Patch sound/weapons/blastf1a (4102)
LBXGL_AC3D_LoadModel: loading 'models/objects/laser/laser0.ac'
BT_RadiusDamage: Accel (-160.587,21.2121,-1.22515) g=161.986 cur=33AC81C0 att=074826C0
Load Patch sound/weapons/lashit (4103)
BT_RadiusDamage: Accel (47.0951,-153.416,-36.412) g=164.561 cur=33AC81C0 att=074826C0
Load Patch sound/weapons/rocklx1a (4104)
BT_RadiusDamage: Accel (-111.752,-178.942,31.0736) g=213.247 cur=33CA2060 att=074826C0
BT_RadiusDamage: Accel (-111.752,-178.942,31.0736) g=213.247 cur=33CA2060 att=074826C0
BTCL_SetupClientEntFrameWMdl: Model Changed
BTCL_SetupClientEntFrameWMdl: New wmdl instance
skel loaded, 2 bones, 0 solids
AC3D_LoadModel: loading 'models/weapons/v_handgr/v_handgr0.ac'
GroupMergeVecsFrac 1: 504 xyz, 893 st, 992 face
GroupMergeVecsFrac 2: 392 xyz, 1152 st, 780 face
GroupMergeVecsFrac 1: 392 xyz, 1152 st, 780 face
GroupMergeVecsFrac 2: 288 xyz, 1207 st, 572 face
GroupMergeVecsFrac 1: 288 xyz, 1207 st, 572 face
GroupMergeVecsFrac 2: 218 xyz, 1093 st, 434 face
GroupMergeVecsFrac 1: 218 xyz, 1093 st, 434 face
GroupMergeVecsFrac 2: 168 xyz, 899 st, 336 face
Hitbox: 0 31.551 Org=(-5.132 -13.806 -4.139) Rad=(0.096 0.717 0.094)
Hitbox: 1 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 3313E350
anim throw: 0, 16 frames
anim idle: 16, 33 frames
passive_pig: ctor
monster_sheep: init A self=2E701960
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2E702050 ent=2E701960
BTGE_Voxel_RandomThink_Grass: Convert To Dirt
BTCL_SetupClientEntFrameWMdl: Model Changed
BTCL_SetupClientEntFrameWMdl: New wmdl instance
passive_pig: ctor
monster_sheep: init A self=2E85F4E0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2E85FBD0 ent=2E85F4E0
BT_RadiusDamage: Accel (-172.41,-66.3573,14.5033) g=185.308 cur=2E85F4E0 att=074826C0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01A170
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01A230
call @0x0F892BEE
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BT_RadiusDamage: Accel (-192.003,122.732,46.0561) g=232.485 cur=2E85F4E0 att=074826C0
LBXGL_AC3D_LoadModel: loading 'models/items/ammo/bullets/bullets0.ac'
Load Patch sound/misc/am_pkup (4105)
passive_sheep: ctor
monster_sheep: init A self=33EB0420
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=33EB0B10 ent=33EB0420
Th 00001C6C 8448 008F1500
BT_RadiusDamage: Accel (-17.1145,223.352,107.287) g=248.374 cur=2E701960 att=074826C0
BT_RadiusDamage: Accel (-17.1145,223.352,107.287) g=248.374 cur=2E701960 att=074826C0
passive_pig: ctor
monster_sheep: init A self=2EDECAD0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2EDED1C0 ent=2EDECAD0
passive_pig: ctor
monster_sheep: init A self=3313E610
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=3313ED00 ent=3313E610
passive_pig: ctor
monster_sheep: init A self=052F8270
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=052F8960 ent=052F8270
BT_RadiusDamage: Accel (-59.4192,-160.155,1.00281) g=170.825 cur=33971B80 att=074826C0
BT_RadiusDamage: Accel (-59.4192,-160.155,1.00281) g=170.825 cur=33971B80 att=074826C0
passive_sheep: ctor
monster_sheep: init A self=39B68660
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=39B68D10 ent=39B68660
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 264
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52EB00
call @0x0F893585
mov [esp+4], eax
call @0x0F893012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_pig: ctor
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52EC20
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 265
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52ECE0
call @0x0F892CC0
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2E52EE00
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 279
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52FE80
call @0x0F893585
mov [esp+4], eax
call @0x0F893012
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2E52FFA0
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
monster_sheep: init A self=39DBF390
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530000
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 281
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E5300C0
call @0x0F892D10
mov [esp+4], eax
call @0x0F891D93
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E5301E0
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 282
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530300
call @0x0F892D06
mov [esp+4], eax
call @0x0F891D93
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530420
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 284
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530540
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530600
call @0x0F893012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E5306C0
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 285
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530780
call @0x0F893012
mov [esp+4], eax
call @0x0F892554
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E5308A0
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 286
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E5309C0
call @0x0F893012
mov [esp+4], eax
call @0x0F892554
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530AE0
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 288
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530C00
call @0x0F892CC0
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F891F91
mov [esp+4], eax
call @0x0F892554
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530EA0
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 289
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E530FC0
call @0x0F892CC0
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F891F91
mov [esp+4], eax
call @0x0F892554
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E531260
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 290
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E531380
call @0x0F8922B6
mov [esp+4], eax
call @0x0F891D93
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E5314A0
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 294
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E5315C0
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2E531680
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E52EE60
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=39DBFA80 ent=39DBF390
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F019FF0
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01A0B0
call @0x0F892BEE
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_sheep: ctor
monster_sheep: init A self=39FA29C0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=39FA30B0 ent=39FA29C0
Th 00001D68 11208 008F1500
passive_pig: ctor
monster_sheep: init A self=39E18E40
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=39E19530 ent=39E18E40
BT_RadiusDamage: Accel (52.4078,-200.304,75.8639) g=220.508 cur=39DBF390 att=074826C0
BT_RadiusDamage: Accel (45.535,-204.156,136.92) g=250 cur=39DBF390 att=074826C0
Add Slot 07411D90 walk2_mfi r
passive_pig: ctor
monster_sheep: init A self=39651A80
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=39652170 ent=39651A80
Th 00001D6C 2700 008F1500
Th 00001CCC 5724 008F1500
passive_sheep: ctor
monster_sheep: init A self=074FD860
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=074FDF50 ent=074FD860
passive_pig: ctor
monster_sheep: init A self=33AEFF60
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33AF0650 ent=33AEFF60
passive_sheep: ctor
monster_sheep: init A self=3A4231A0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=3A423850 ent=3A4231A0
passive_pig: ctor
monster_sheep: init A self=3A423A40
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=3A424130 ent=3A423A40
Th 00001CE0 8424 008F1500
passive_sheep: ctor
monster_sheep: init A self=39720CA0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=39721960 ent=39720CA0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+248], 272
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x045FED40
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x045FEE00
call @0x0F892D06
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x045FEEC0
call @0x0F89196A
mov [esp+4], eax
call @0x0F892E73
mov [esp+4], eax
call @0x0F892CFC
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x045FF040
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_pig: ctor
monster_sheep: init A self=33F89A00
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33F8A0F0 ent=33F89A00
passive_pig: ctor
monster_sheep: init A self=3A134860
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=3A134F50 ent=3A134860
Load Patch sound/animal/sheep_idle1 (4106)
passive_pig: ctor
monster_sheep: init A self=39661340
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=39661A30 ent=39661340
passive_pig: ctor
monster_sheep: init A self=39661F70
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=39662660 ent=39661F70
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 232
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01A840
call @0x0F893585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01A900
call @0x0F893012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01AF20
call @0x0F8918D9
mov [esp+4], eax
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_pig: ctor
monster_sheep: init A self=2E848710
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2E848E00 ent=2E848710
BT_RadiusDamage: Accel (109.125,-169.229,148.166) g=250 cur=3A4231A0 att=074826C0
BT_RadiusDamage: Accel (-114.661,-188.628,102.89) g=243.545 cur=3A4231A0 att=074826C0
BT_RadiusDamage: Accel (72.3437,110.144,0.819345) g=131.78 cur=3A423A40 att=074826C0
BT_RadiusDamage: Accel (-8.70859,-26.8013,-24.5448) g=37.3711 cur=074826C0 att=074826C0
Load Patch sound/player/pain5 (4107)
passive_sheep: ctor
monster_sheep: init A self=3A0EB9A0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=3A0EC090 ent=3A0EB9A0
BT_RadiusDamage: Accel (-18.1639,10.1896,91.2922) g=93.6377 cur=3A423A40 att=074826C0
passive_pig: ctor
monster_sheep: init A self=3A1E1800
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=3A1E1EF0 ent=3A1E1800
BT_RadiusDamage: Accel (63.7791,134.515,2.28524) g=148.887 cur=3A423A40 att=074826C0
passive_pig: ctor
monster_sheep: init A self=39C094A0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=39C09B90 ent=39C094A0
BT_RadiusDamage: Accel (-42.1123,-197.304,-147.64) g=250 cur=3A1E1800 att=074826C0
BTGE_Voxel_RandomThink_Grass: Tall Grass 333 -300 72
passive_sheep: ctor
monster_sheep: init A self=3A1A05A0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=3A1A0C90 ent=3A1A05A0
BT_RadiusDamage: Accel (-107.246,-193.307,85.8209) g=237.139 cur=3A1E1800 att=074826C0
passive_pig: ctor
monster_sheep: init A self=332EC8C0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=332ECFB0 ent=332EC8C0
passive_sheep: ctor
monster_sheep: init A self=2E940E10
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=2E941500 ent=2E940E10
Th 00001CE4 5844 008F1500
passive_pig: ctor
monster_sheep: init A self=33C2CE50
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33C2D540 ent=33C2CE50
BT_RadiusDamage: Accel (188.755,-60.5337,-80.1601) g=213.818 cur=39661340 att=074826C0
BT_RadiusDamage: Accel (180.683,-19.2201,-74.7695) g=196.484 cur=39661340 att=074826C0
BT_RadiusDamage: Accel (86.7771,-170.093,-151.86) g=243.975 cur=2E940E10 att=074826C0
BT_RadiusDamage: Accel (53.6347,-103.377,-120.874) g=167.852 cur=2E940E10 att=074826C0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 226
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B23A0
call @0x0F893585
mov [esp+4], eax
call @0x0F893012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_sheep: ctor
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B24C0
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 227
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B2580
call @0x0F892CC0
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2E9B26A0
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 241
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B2910
call @0x0F893585
mov [esp+4], eax
call @0x0F893012
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2E9B2A30
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
monster_sheep: init A self=396445D0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B2A90
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 243
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B2B50
call @0x0F892D10
mov [esp+4], eax
call @0x0F891D93
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B2C70
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 244
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B2D90
call @0x0F892D06
mov [esp+4], eax
call @0x0F891D93
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B2EB0
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 246
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B2FD0
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3090
call @0x0F893012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3150
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 247
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3210
call @0x0F893012
mov [esp+4], eax
call @0x0F892554
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3330
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 248
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3450
call @0x0F893012
mov [esp+4], eax
call @0x0F892554
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3570
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 250
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3690
call @0x0F892CC0
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F891F91
mov [esp+4], eax
call @0x0F892554
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3930
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 251
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3A50
call @0x0F892CC0
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F8922B6
mov [esp+4], eax
call @0x0F891F91
mov [esp+4], eax
call @0x0F892554
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3CF0
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 252
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3E10
call @0x0F8922B6
mov [esp+4], eax
call @0x0F891D93
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B3F30
call @0x0F891EE7
mov [esp+4], eax
call @0x0F89252C
mov esi, [ebp+8]
mov [esi+248], 256
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B4050
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2E9B4110
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2E9B2700
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=39644CC0 ent=396445D0
passive_pig: ctor
monster_sheep: init A self=39D665F0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=39D67AE0 ent=39D665F0
BT_RadiusDamage: Accel (-52.6689,113.298,88.4586) g=153.086 cur=2E848710 att=074826C0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F0816B0
call @0x0F8918D9
mov [esp+4], eax
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BT_RadiusDamage: Accel (-128.205,191.662,96.5872) g=250 cur=2E848710 att=074826C0
passive_sheep: ctor
monster_sheep: init A self=3A043B80
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=3A044270 ent=3A043B80
BT_RadiusDamage: Accel (159.841,-58.9334,-129.939) g=214.258 cur=3A1A05A0 att=074826C0
BT_RadiusDamage: Accel (189.084,60.2867,-39.595) g=202.373 cur=3A1A05A0 att=074826C0
Th 00001D74 11216 008F1500
BT_RadiusDamage: Accel (-203.321,-112.039,92.7779) g=250 cur=3A043B80 att=074826C0
BT_RadiusDamage: Accel (-61.7244,-213.104,5.40954) g=221.929 cur=3A043B80 att=074826C0
passive_pig: ctor
monster_sheep: init A self=3A482720
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=3A482DD0 ent=3A482720
passive_sheep: ctor
monster_sheep: init A self=39D2F4A0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=39D2FB90 ent=39D2F4A0
passive_pig: ctor
monster_sheep: init A self=39F66370
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=39F69350 ent=39F66370
Th 00001D78 10584 008F1500
Th 00001D7C 8320 008F1500
passive_pig: ctor
monster_sheep: init A self=33F75F10
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33F76600 ent=33F75F10
passive_sheep: ctor
monster_sheep: init A self=497E9B00
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=497EA1F0 ent=497E9B00
passive_sheep: ctor
monster_sheep: init A self=49CCC170
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=49CCC860 ent=49CCC170
passive_sheep: ctor
monster_sheep: init A self=49DC39C0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=49DC50C0 ent=49DC39C0
passive_sheep: ctor
monster_sheep: init A self=49EF77F0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=49EF7EE0 ent=49EF77F0
passive_sheep: ctor
monster_sheep: init A self=49EF90C0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=49EF97B0 ent=49EF90C0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x33521240
call @0x0F8918D9
mov [esp+4], eax
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BT_RadiusDamage: Accel (-159.986,-62.0461,143.509) g=223.696 cur=497E9B00 att=074826C0
BT_RadiusDamage: Accel (-151.575,16.7733,127.951) g=199.067 cur=497E9B00 att=074826C0
Th 00001D80 10796 008F1500
passive_pig: ctor
monster_sheep: init A self=4A297B30
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=4A298220 ent=4A297B30
passive_sheep: ctor
monster_sheep: init A self=4A298380
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=4A298BB0 ent=4A298380
BT_RadiusDamage: Accel (-125.028,162.707,-31.0326) g=207.529 cur=49EF90C0 att=074826C0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x073FA1C0
mov [esi+248], 65
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x3364C5D0
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-24]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x3364C690
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BT_RadiusDamage: Accel (-9.28106,240.781,-66.6199) g=250 cur=49EF90C0 att=074826C0
passive_sheep: ctor
monster_sheep: init A self=49D82E00
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=49D834F0 ent=49D82E00
passive_pig: ctor
monster_sheep: init A self=498002E0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=498009D0 ent=498002E0
passive_sheep: ctor
monster_sheep: init A self=49A17940
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=49A18030 ent=49A17940
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+248], 234
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01AA20
call @0x0F893585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01AAE0
call @0x0F892D06
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01ABA0
call @0x0F89196A
mov [esp+4], eax
call @0x0F892E73
mov [esp+4], eax
call @0x0F892CFC
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2F01AE60
call @0x0F8916EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x0F892D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BT_RadiusDamage: Accel (-25.1211,-129.895,-143.357) g=195.077 cur=49DC39C0 att=074826C0
BT_RadiusDamage: Accel (149.714,-122.386,-23.5062) g=194.795 cur=498002E0 att=074826C0
BT_RadiusDamage: Accel (149.714,-122.386,-23.5062) g=194.795 cur=498002E0 att=074826C0
Th 00001D84 8088 008F1500
passive_sheep: ctor
monster_sheep: init A self=50AD70F0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=50AD77E0 ent=50AD70F0
passive_pig: ctor
monster_sheep: init A self=50B73850
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=50B73F40 ent=50B73850
passive_pig: ctor
monster_sheep: init A self=50F3C8D0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=50F3CFC0 ent=50F3C8D0
passive_pig: ctor
monster_sheep: init A self=497B04D0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=497B0BC0 ent=497B04D0
BT_RadiusDamage: Accel (97.8398,-197.06,-68.8309) g=230.527 cur=50B73850 att=074826C0
BT_RadiusDamage: Accel (42.968,-75.0969,-104.056) g=135.327 cur=50B73850 att=074826C0
BT_RadiusDamage: Accel (-60.1468,83.0602,-15.4308) g=103.705 cur=074826C0 att=074826C0
Load Patch sound/player/pain4 (4108)
LBXGL_AC3D_LoadModel: loading 'models/items/quaddama/quaddama0.ac'
BT_RadiusDamage: Accel (-54.9661,103.367,75.9908) g=139.573 cur=074826C0 att=074826C0
Load Patch sound/items/damage (4109)
Th 00001D88 11256 008F1500
Load Patch sound/items/damage3 (4110)
BT_RadiusDamage: Accel (170.797,66.4885,-117.619) g=217.776 cur=33F89A00 att=074826C0
passive_pig: ctor
monster_sheep: init A self=50985170
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=50985820 ent=50985170
passive_sheep: ctor
monster_sheep: init A self=50A47E20
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=50A484D0 ent=50A47E20
passive_sheep: ctor
monster_sheep: init A self=50EE0E70
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=50EE1520 ent=50EE0E70
BT_RadiusDamage: Accel (177.76,-63.8949,50.3814) g=195.498 cur=3A0EB9A0 att=074826C0
BT_RadiusDamage: Accel (-3.309,-183.663,-57.1686) g=192.383 cur=33AEFF60 att=074826C0
BT_RadiusDamage: Accel (-10.6276,121.421,-48.3562) g=131.127 cur=074826C0 att=074826C0
Load Patch sound/player/pain2 (4111)
passive_sheep: ctor
monster_sheep: init A self=506F4180
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=506F4870 ent=506F4180
BT_RadiusDamage: Accel (-96.3969,-166.885,-87.8397) g=211.799 cur=39C094A0 att=074826C0
LBXGL_AC3D_LoadModel: loading 'models/items/armor/shard/shard0.ac'
Th 00001D8C 10836 008F1500
BT_RadiusDamage: Accel (-30.1193,195.986,-44.9172) g=203.311 cur=33C2CE50 att=074826C0
BT_RadiusDamage: Accel (10.8876,-43.7258,-7.77408) g=45.7266 cur=074826C0 att=074826C0
Load Patch sound/player/pain3 (4112)
LBXGL_AC3D_LoadModel: loading 'models/items/invulner/invulner1.ac'
Load Patch sound/items/protect (4113)
passive_sheep: ctor
monster_sheep: init A self=5116DFB0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=5116E660 ent=5116DFB0
BT_RadiusDamage: Accel (157.193,43.2753,12.8926) g=163.55 cur=39F66370 att=074826C0
passive_pig: ctor
monster_sheep: init A self=50C04EA0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=50C05550 ent=50C04EA0
passive_sheep: ctor
monster_sheep: init A self=5123DDA0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=5123E490 ent=5123DDA0
passive_pig: ctor
monster_sheep: init A self=512671E0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=512678D0 ent=512671E0
passive_sheep: ctor
monster_sheep: init A self=512725B0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=51272CA0 ent=512725B0
passive_sheep: ctor
monster_sheep: init A self=512BE930
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=512BF020 ent=512BE930
Noclip: Enabled
Load Patch sound/items/damage2 (4114)
Th 00001D90 8284 008F1500
passive_pig: ctor
monster_sheep: init A self=51357A80
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=51358170 ent=51357A80
passive_pig: ctor
monster_sheep: init A self=50DCFE20
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=50DD0510 ent=50DCFE20
passive_sheep: ctor
monster_sheep: init A self=51060540
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=51060C30 ent=51060540
Th 00001D94 8864 008F1500
passive_pig: ctor
monster_sheep: init A self=4959D190
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=4959D880 ent=4959D190
passive_pig: ctor
monster_sheep: init A self=33EBDAC0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=33EBE1B0 ent=33EBDAC0
passive_sheep: ctor
monster_sheep: init A self=39D82770
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=39D82E60 ent=39D82770
passive_pig: ctor
monster_sheep: init A self=338C84D0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=338C8BC0 ent=338C84D0
passive_sheep: ctor
monster_sheep: init A self=338DC6B0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=338DCDA0 ent=338DC6B0
passive_sheep: ctor
monster_sheep: init A self=50DA21E0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=50DA28D0 ent=50DA21E0
passive_sheep: ctor
monster_sheep: init A self=50711AC0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=507121B0 ent=50711AC0
passive_pig: ctor
monster_sheep: init A self=2E1B0AA0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2E1B1190 ent=2E1B0AA0
Th 00001D98 8436 008F1500
passive_sheep: ctor
monster_sheep: init A self=50E3F240
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=50E3F930 ent=50E3F240
passive_pig: ctor
monster_sheep: init A self=508DF4F0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=508DFBE0 ent=508DF4F0
passive_pig: ctor
monster_sheep: init A self=2E224630
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2E224D20 ent=2E224630
passive_pig: ctor
monster_sheep: init A self=3A1A86C0
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=3A1A8DB0 ent=3A1A86C0
passive_pig: ctor
monster_sheep: init A self=2EDFDA20
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=2EDFE110 ent=2EDFDA20
passive_sheep: ctor
monster_sheep: init A self=3A19C630
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=3A19CD20 ent=3A19C630
passive_sheep: ctor
monster_sheep: init A self=3A19E4A0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=33397B60 ent=3A19E4A0
passive_pig: ctor
monster_sheep: init A self=508F8210
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=508F8900 ent=508F8210
passive_sheep: ctor
monster_sheep: init A self=49F6E7A0
BT_SpawnSEntity: Spawn From Class inf=07421AC0 obj=49F6EE90 ent=49F6E7A0
passive_pig: ctor
monster_sheep: init A self=49FBA480
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=49FBAB70 ent=49FBA480
passive_pig: ctor
monster_sheep: init A self=05924510
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=059250C0 ent=05924510
passive_pig: ctor
monster_sheep: init A self=511B0810
BT_SpawnSEntity: Spawn From Class inf=074220E0 obj=511B0F00 ent=511B0810
Th 00001D9C 7760 008F1500
PDGL: Main Break
app1 shutdown
BGBGC_DeinitThread
GC: Termination Request (bgbgc_spawngc<0)
GC: Collect Loop Exited
