CmdLine: 'engine0'
Th 000000C8 9180 10001FFF
Th 000000CC 6268 0F951500
SpaceNew(0): _flonum_t C0000000..D0000000
SpaceNew(1): _fixint_t D0000000..E0000000
SpaceNew(2): _ustring_t E0000000..E1000000
SpaceNew(3): _usymbol_t E1000000..E2000000
SpaceNew(4): _char_t E2000000..E2010000
mounting F:\bgbtech_misc\bgbtech_engine as /
mounting F:\bgbtech_misc\bgbtech_engine\resource as /
vfexwad_vfmount: No Module Data engine0.exe
DYLL_MetaPath_LoadDB2: engine0_meta.txt engine0
Load DB 'engine0_meta.txt': fail
vfexwad_vfmount: No Module Data ntdll.dll
DYLL_MetaPath_LoadDB2: ntdll_meta.txt ntdll
Load DB 'ntdll_meta.txt': fail
vfexwad_vfmount: No Module Data kernel32.dll
DYLL_MetaPath_LoadDB2: kernel32_meta.txt kernel32
Load DB 'kernel32_meta.txt': fail
vfexwad_vfmount: No Module Data KERNELBASE.dll
DYLL_MetaPath_LoadDB2: KERNELBASE_meta.txt KERNELBASE
Load DB 'KERNELBASE_meta.txt': fail
Got Module Data 096A0020 905216
DYLL_MetaPath_LoadDB2: btgecm_meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm
DYLL_MetaPath_LoadDB2: exwad/btgecm/meta.txt btgecm (14295 keys, 51432 lines)
Load DB 'exwad/btgecm/meta.txt': pass
vfexwad_vfmount: No Module Data bgbbtjpg.dll
DYLL_MetaPath_LoadDB2: bgbbtjpg_meta.txt bgbbtjpg
Load DB 'bgbbtjpg_meta.txt': fail
vfexwad_vfmount: No Module Data bgbdy.dll
DYLL_MetaPath_LoadDB2: bgbdy_meta.txt bgbdy
Load DB 'bgbdy_meta.txt': fail
vfexwad_vfmount: No Module Data bgbgc.dll
DYLL_MetaPath_LoadDB2: bgbgc_meta.txt bgbgc
Load DB 'bgbgc_meta.txt': fail
vfexwad_vfmount: No Module Data bgbasm.dll
DYLL_MetaPath_LoadDB2: bgbasm_meta.txt bgbasm
Load DB 'bgbasm_meta.txt': fail
vfexwad_vfmount: No Module Data zpack.dll
DYLL_MetaPath_LoadDB2: zpack_meta.txt zpack
Load DB 'zpack_meta.txt': fail
vfexwad_vfmount: No Module Data libbgbmid.dll
DYLL_MetaPath_LoadDB2: libbgbmid_meta.txt libbgbmid
DYLL_MetaPath_LoadDB2: bgbmid_meta.txt libbgbmid
Load DB 'libbgbmid_meta.txt': fail
vfexwad_vfmount: No Module Data libvecmath.dll
DYLL_MetaPath_LoadDB2: libvecmath_meta.txt libvecmath
DYLL_MetaPath_LoadDB2: vecmath_meta.txt libvecmath
Load DB 'libvecmath_meta.txt': fail
vfexwad_vfmount: No Module Data WINMM.dll
DYLL_MetaPath_LoadDB2: WINMM_meta.txt WINMM
Load DB 'WINMM_meta.txt': fail
vfexwad_vfmount: No Module Data msvcrt.dll
DYLL_MetaPath_LoadDB2: msvcrt_meta.txt msvcrt
Load DB 'msvcrt_meta.txt': fail
vfexwad_vfmount: No Module Data USER32.dll
DYLL_MetaPath_LoadDB2: USER32_meta.txt USER32
Load DB 'USER32_meta.txt': fail
vfexwad_vfmount: No Module Data GDI32.dll
DYLL_MetaPath_LoadDB2: GDI32_meta.txt GDI32
Load DB 'GDI32_meta.txt': fail
vfexwad_vfmount: No Module Data LPK.dll
DYLL_MetaPath_LoadDB2: LPK_meta.txt LPK
Load DB 'LPK_meta.txt': fail
vfexwad_vfmount: No Module Data USP10.dll
DYLL_MetaPath_LoadDB2: USP10_meta.txt USP10
Load DB 'USP10_meta.txt': fail
vfexwad_vfmount: No Module Data ADVAPI32.dll
DYLL_MetaPath_LoadDB2: ADVAPI32_meta.txt ADVAPI32
Load DB 'ADVAPI32_meta.txt': fail
vfexwad_vfmount: No Module Data sechost.dll
DYLL_MetaPath_LoadDB2: sechost_meta.txt sechost
Load DB 'sechost_meta.txt': fail
vfexwad_vfmount: No Module Data RPCRT4.dll
DYLL_MetaPath_LoadDB2: RPCRT4_meta.txt RPCRT4
Load DB 'RPCRT4_meta.txt': fail
vfexwad_vfmount: No Module Data SspiCli.dll
DYLL_MetaPath_LoadDB2: SspiCli_meta.txt SspiCli
Load DB 'SspiCli_meta.txt': fail
vfexwad_vfmount: No Module Data CRYPTBASE.dll
DYLL_MetaPath_LoadDB2: CRYPTBASE_meta.txt CRYPTBASE
Load DB 'CRYPTBASE_meta.txt': fail
vfexwad_vfmount: No Module Data MSVFW32.dll
DYLL_MetaPath_LoadDB2: MSVFW32_meta.txt MSVFW32
Load DB 'MSVFW32_meta.txt': fail
vfexwad_vfmount: No Module Data SHELL32.dll
DYLL_MetaPath_LoadDB2: SHELL32_meta.txt SHELL32
Load DB 'SHELL32_meta.txt': fail
vfexwad_vfmount: No Module Data SHLWAPI.dll
DYLL_MetaPath_LoadDB2: SHLWAPI_meta.txt SHLWAPI
Load DB 'SHLWAPI_meta.txt': fail
vfexwad_vfmount: No Module Data COMCTL32.dll
DYLL_MetaPath_LoadDB2: COMCTL32_meta.txt COMCTL32
Load DB 'COMCTL32_meta.txt': fail
Got Module Data 09B80020 1159168
DYLL_MetaPath_LoadDB2: bgbsvm_meta.txt bgbsvm
DYLL_MetaPath_LoadDB2: exwad/bgbsvm/meta.txt bgbsvm
DYLL_MetaPath_LoadDB2: exwad/bgbsvm/meta.txt bgbsvm (10499 keys, 37580 lines)
Load DB 'exwad/bgbsvm/meta.txt': pass
vfexwad_vfmount: No Module Data bgbnet.dll
DYLL_MetaPath_LoadDB2: bgbnet_meta.txt bgbnet
Load DB 'bgbnet_meta.txt': fail
vfexwad_vfmount: No Module Data WSOCK32.dll
DYLL_MetaPath_LoadDB2: WSOCK32_meta.txt WSOCK32
Load DB 'WSOCK32_meta.txt': fail
vfexwad_vfmount: No Module Data WS2_32.dll
DYLL_MetaPath_LoadDB2: WS2_32_meta.txt WS2_32
Load DB 'WS2_32_meta.txt': fail
vfexwad_vfmount: No Module Data NSI.dll
DYLL_MetaPath_LoadDB2: NSI_meta.txt NSI
Load DB 'NSI_meta.txt': fail
vfexwad_vfmount: No Module Data ole32.dll
DYLL_MetaPath_LoadDB2: ole32_meta.txt ole32
Load DB 'ole32_meta.txt': fail
Got Module Data 09DB0020 1388544
DYLL_MetaPath_LoadDB2: liblbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: lbxgl2_meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2
DYLL_MetaPath_LoadDB2: exwad/liblbxgl2/meta.txt liblbxgl2 (19834 keys, 70888 lines)
Load DB 'exwad/liblbxgl2/meta.txt': pass
vfexwad_vfmount: No Module Data libpdgl.dll
DYLL_MetaPath_LoadDB2: libpdgl_meta.txt libpdgl
DYLL_MetaPath_LoadDB2: pdgl_meta.txt libpdgl
Load DB 'libpdgl_meta.txt': fail
vfexwad_vfmount: No Module Data libpdglui.dll
DYLL_MetaPath_LoadDB2: libpdglui_meta.txt libpdglui
DYLL_MetaPath_LoadDB2: pdglui_meta.txt libpdglui
Load DB 'libpdglui_meta.txt': fail
vfexwad_vfmount: No Module Data SETUPAPI.dll
DYLL_MetaPath_LoadDB2: SETUPAPI_meta.txt SETUPAPI
Load DB 'SETUPAPI_meta.txt': fail
vfexwad_vfmount: No Module Data CFGMGR32.dll
DYLL_MetaPath_LoadDB2: CFGMGR32_meta.txt CFGMGR32
Load DB 'CFGMGR32_meta.txt': fail
vfexwad_vfmount: No Module Data OLEAUT32.dll
DYLL_MetaPath_LoadDB2: OLEAUT32_meta.txt OLEAUT32
Load DB 'OLEAUT32_meta.txt': fail
vfexwad_vfmount: No Module Data DEVOBJ.dll
DYLL_MetaPath_LoadDB2: DEVOBJ_meta.txt DEVOBJ
Load DB 'DEVOBJ_meta.txt': fail
vfexwad_vfmount: No Module Data IMM32.DLL
DYLL_MetaPath_LoadDB2: IMM32_meta.txt IMM32
Load DB 'IMM32_meta.txt': fail
vfexwad_vfmount: No Module Data MSCTF.dll
DYLL_MetaPath_LoadDB2: MSCTF_meta.txt MSCTF
Load DB 'MSCTF_meta.txt': fail
DYLL_LoadLibraryI: Load game_base.dll
DYLL_LoadLibraryI: Load resource/game_base.dll
DYLL_MetaPath_LoadDB2: cc_usr/metapath.txt (null)
mounting F:\bgbtech_misc\bgbtech_engine\resource_mini as /
DYLL_LoadLibraryI: Load opengl32.dll
DYLL_LoadLibraryI: Success Loading opengl32.dll
vfexwad_vfmount: No Module Data opengl32.dll
DYLL_MetaPath_LoadDB2: opengl32_meta.txt opengl32
Load DB 'opengl32': fail
DYLL_LoadLibrary: Loaded opengl32
OpenGL Vendor=ATI Technologies Inc.
OpenGL Renderer=AMD Radeon R9 200 Series
OpenGL Version=4.5.13399 Compatibility Profile Context 15.200.1062.1004
OpenGL Extensions=<[[
GL_AMDX_debug_output GL_AMD_blend_minmax_factor GL_AMD_conservative_depth GL_AMD_debug_output GL_AMD_depth_clamp_separate GL_AMD_draw_buffers_blend GL_AMD_framebuffer_sample_positions GL_AMD_gcn_shader GL_AMD_gpu_shader_int64 GL_AMD_interleaved_elements GL_AMD_multi_draw_indirect GL_AMD_name_gen_delete GL_AMD_performance_monitor GL_AMD_pinned_memory GL_AMD_query_buffer_object GL_AMD_sample_positions GL_AMD_seamless_cubemap_per_texture GL_AMD_shader_atomic_counter_ops GL_AMD_shader_stencil_export GL_AMD_shader_stencil_value_export GL_AMD_shader_trace GL_AMD_shader_trinary_minmax GL_AMD_sparse_texture GL_AMD_stencil_operation_extended GL_AMD_texture_cube_map_array GL_AMD_texture_texture4 GL_AMD_transform_feedback3_lines_triangles GL_AMD_transform_feedback4 GL_AMD_vertex_shader_layer GL_AMD_vertex_shader_viewport_index GL_ARB_ES2_compatibility GL_ARB_ES3_1_compatibility GL_ARB_ES3_compatibility GL_ARB_arrays_of_arrays GL_ARB_base_instance GL_ARB_bindless_texture GL_ARB_blend_func_extended GL_ARB_buffer_storage GL_ARB_clear_buffer_object GL_ARB_clear_texture GL_ARB_clip_control GL_ARB_color_buffer_float GL_ARB_compatibility GL_ARB_compressed_texture_pixel_storage GL_ARB_compute_shader GL_ARB_conditional_render_inverted GL_ARB_conservative_depth GL_ARB_copy_buffer GL_ARB_copy_image GL_ARB_cull_distance GL_ARB_debug_output GL_ARB_depth_buffer_float GL_ARB_depth_clamp GL_ARB_depth_texture GL_ARB_derivative_control GL_ARB_direct_state_access GL_ARB_draw_buffers GL_ARB_draw_buffers_blend GL_ARB_draw_elements_base_vertex GL_ARB_draw_indirect GL_ARB_draw_instanced GL_ARB_enhanced_layouts GL_ARB_explicit_attrib_location GL_ARB_explicit_uniform_location GL_ARB_fragment_coord_conventions GL_ARB_fragment_layer_viewport GL_ARB_fragment_program GL_ARB_fragment_program_shadow GL_ARB_fragment_shader GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_object GL_ARB_framebuffer_sRGB GL_ARB_geometry_shader4 GL_ARB_get_program_binary GL_ARB_get_texture_sub_image GL_ARB_gpu_shader5 GL_ARB_gpu_shader_fp64 GL_ARB_half_float_pixel GL_ARB_half_float_vertex GL_ARB_imaging GL_ARB_indirect_parameters GL_ARB_instanced_arrays GL_ARB_internalformat_query GL_ARB_internalformat_query2 GL_ARB_invalidate_subdata GL_ARB_map_buffer_alignment GL_ARB_map_buffer_range GL_ARB_multi_bind GL_ARB_multi_draw_indirect GL_ARB_multisample GL_ARB_multitexture GL_ARB_occlusion_query GL_ARB_occlusion_query2 GL_ARB_pipeline_statistics_query GL_ARB_pixel_buffer_object GL_ARB_point_parameters GL_ARB_point_sprite GL_ARB_program_interface_query GL_ARB_provoking_vertex GL_ARB_query_buffer_object GL_ARB_robust_buffer_access_behavior GL_ARB_sample_shading GL_ARB_sampler_objects GL_ARB_seamless_cube_map GL_ARB_seamless_cubemap_per_texture GL_ARB_separate_shader_objects GL_ARB_shader_atomic_counters GL_ARB_shader_bit_encoding GL_ARB_shader_draw_parameters GL_ARB_shader_group_vote GL_ARB_shader_image_load_store GL_ARB_shader_image_size GL_ARB_shader_objects GL_ARB_shader_precision GL_ARB_shader_stencil_export GL_ARB_shader_storage_buffer_object GL_ARB_shader_subroutine GL_ARB_shader_texture_image_samples GL_ARB_shader_texture_lod GL_ARB_shading_language_100 GL_ARB_shading_language_420pack GL_ARB_shading_language_packing GL_ARB_shadow GL_ARB_shadow_ambient GL_ARB_sparse_buffer GL_ARB_sparse_texture GL_ARB_stencil_texturing GL_ARB_sync GL_ARB_tessellation_shader GL_ARB_texture_barrier GL_ARB_texture_border_clamp GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_range GL_ARB_texture_compression GL_ARB_texture_compression_bptc GL_ARB_texture_compression_rgtc GL_ARB_texture_cube_map GL_ARB_texture_cube_map_array GL_ARB_texture_env_add GL_ARB_texture_env_combine GL_ARB_texture_env_crossbar GL_ARB_texture_env_dot3 GL_ARB_texture_float GL_ARB_texture_gather GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_mirrored_repeat GL_ARB_texture_multisample GL_ARB_texture_non_power_of_two GL_ARB_texture_query_levels GL_ARB_texture_query_lod GL_ARB_texture_rectangle GL_ARB_texture_rg GL_ARB_texture_rgb10_a2ui GL_ARB_texture_snorm GL_ARB_texture_stencil8 GL_ARB_texture_storage GL_ARB_texture_storage_multisample GL_ARB_texture_swizzle GL_ARB_texture_view GL_ARB_timer_query GL_ARB_transform_feedback2 GL_ARB_transform_feedback3 GL_ARB_transform_feedback_instanced GL_ARB_transform_feedback_overflow_query GL_ARB_transpose_matrix GL_ARB_uniform_buffer_object GL_ARB_vertex_array_bgra GL_ARB_vertex_array_object GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_binding GL_ARB_vertex_buffer_object GL_ARB_vertex_program GL_ARB_vertex_shader GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_viewport_array GL_ARB_window_pos GL_ATI_draw_buffers GL_ATI_envmap_bumpmap GL_ATI_fragment_shader GL_ATI_separate_stencil GL_ATI_texture_compression_3dc GL_ATI_texture_env_combine3 GL_ATI_texture_float GL_ATI_texture_mirror_once GL_EXT_abgr GL_EXT_bgra GL_EXT_bindable_uniform GL_EXT_blend_color GL_EXT_blend_equation_separate GL_EXT_blend_func_separate GL_EXT_blend_minmax GL_EXT_blend_subtract GL_EXT_compiled_vertex_array GL_EXT_copy_buffer GL_EXT_copy_texture GL_EXT_depth_bounds_test GL_EXT_direct_state_access GL_EXT_draw_buffers2 GL_EXT_draw_instanced GL_EXT_draw_range_elements GL_EXT_fog_coord GL_EXT_framebuffer_blit GL_EXT_framebuffer_multisample GL_EXT_framebuffer_object GL_EXT_framebuffer_sRGB GL_EXT_geometry_shader4 GL_EXT_gpu_program_parameters GL_EXT_gpu_shader4 GL_EXT_histogram GL_EXT_multi_draw_arrays GL_EXT_packed_depth_stencil GL_EXT_packed_float GL_EXT_packed_pixels GL_EXT_pixel_buffer_object GL_EXT_point_parameters GL_EXT_polygon_offset_clamp GL_EXT_provoking_vertex GL_EXT_rescale_normal GL_EXT_secondary_color GL_EXT_separate_specular_color GL_EXT_shader_image_load_store GL_EXT_shader_integer_mix GL_EXT_shadow_funcs GL_EXT_stencil_wrap GL_EXT_subtexture GL_EXT_texgen_reflection GL_EXT_texture3D GL_EXT_texture_array GL_EXT_texture_buffer_object GL_EXT_texture_compression_bptc GL_EXT_texture_compression_latc GL_EXT_texture_compression_rgtc GL_EXT_texture_compression_s3tc GL_EXT_texture_cube_map GL_EXT_texture_edge_clamp GL_EXT_texture_env_add GL_EXT_texture_env_combine GL_EXT_texture_env_dot3 GL_EXT_texture_filter_anisotropic GL_EXT_texture_integer GL_EXT_texture_lod GL_EXT_texture_lod_bias GL_EXT_texture_mirror_clamp GL_EXT_texture_object GL_EXT_texture_rectangle GL_EXT_texture_sRGB GL_EXT_texture_sRGB_decode GL_EXT_texture_shared_exponent GL_EXT_texture_snorm GL_EXT_texture_storage GL_EXT_texture_swizzle GL_EXT_timer_query GL_EXT_transform_feedback GL_EXT_vertex_array GL_EXT_vertex_array_bgra GL_EXT_vertex_attrib_64bit GL_IBM_texture_mirrored_repeat GL_INTEL_fragment_shader_ordering GL_KHR_context_flush_control GL_KHR_debug GL_KHR_robust_buffer_access_behavior GL_KHR_robustness GL_KTX_buffer_region GL_NV_blend_square GL_NV_conditional_render GL_NV_copy_depth_to_color GL_NV_copy_image GL_NV_depth_buffer_float GL_NV_explicit_multisample GL_NV_float_buffer GL_NV_half_float GL_NV_primitive_restart GL_NV_texgen_reflection GL_NV_texture_barrier GL_OES_EGL_image GL_SGIS_generate_mipmap GL_SGIS_texture_edge_clamp GL_SGIS_texture_lod GL_SUN_multi_draw_arrays GL_WIN_swap_hint WGL_EXT_swap_control ]]>

PDGL: Startup
loading font 'unicode':'fonts/unifont.bfn'
loading font 'fixed_B':'fonts/fixed_b.bfn'
loading font 'fixed_16px':'fonts/fixed_cp437_16px.bfn'
loading font 'fixed_32px':'fonts/fixed_32px.bfn'
loading font 'fixed_64px':'fonts/fixed_64px.bfn'
loading font 'fixed':'fonts/fixed_cp437_8px.bfn'
loading font 'fixed_cp437_8px':'fonts/fixed_cp437_8px.bfn'
loading font 'gfx':'fonts/gfx.bfn'
Load Patch instruments/acpiano (0)
LBXGL_Particle_Init
PDGL: Textures Init
PDGL_InitShader
PDGL_InitShader: OK
DYLL_LoadLibraryI: Load clientx86.dll
DYLL_LoadLibraryI: Load resource/clientx86.dll
DYLL_LoadLibraryI: Success Loading resource/clientx86.dll
Got Module Data 0D42CBC8 512000
DYLL_MetaPath_LoadDB2: clientx86_meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86
DYLL_MetaPath_LoadDB2: exwad/clientx86/meta.txt clientx86 (19828 keys, 70870 lines)
Load DB 'clientx86': pass
DYLL_LoadLibrary: Loaded clientx86
BTGE_ClientInitFunc: BTCL_NewWorld Pass 518912DF
stmt: (dbgmark "bsvm/init.bs" 1) -> (dbgmark "bsvm/init.bs" 1)
stmt: (flag extern (import "bsvm/init/Exceptions")) -> (flag extern (import "bsvm/init/Exceptions"))
stmt: (linenum 2) -> (linenum 2)
expr: (flag extern (import "bsvm/init/Errors")) -> (flag extern (import "bsvm/init/Errors"))
BLK (null), SA No, Capture=Yes
083C8F20 02 0101         dbgmark "bsvm/init.bs" 1 
083C8F23 9A 0203         import "bsvm/init/Exceptions" Ce 
083C8F26 05 02           ln 2 
083C8F28 9A 0403         import "bsvm/init/Errors" Ce 
083C8F2B 42              push_null 
083C8F2C 1A              clearenv 
083C8F2D 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 1) -> (dbgmark "bsvm/init/Exceptions.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin)))))) -> (flag public (class Exception () () ((linenum 5) (flag public (define (Exception) (begin))) (dbgmark "bsvm/init/Exceptions.bs" 7) (flag public (define (Exception str) (begin))))))
expr: (rlambda Exception () (begin)) -> (rlambda Exception () (begin))
expr: (begin) -> ()
BLK Exception, SA No, Capture=Yes
083CADF0 42              push_null 
083CADF1 1A              clearenv 
083CADF2 29              ret 

expr: (rlambda Exception (str) (begin)) -> (rlambda Exception (str) (begin))
expr: (begin) -> ()
BLK Exception, SA Yes, Capture=Yes
083CB700 42              push_null 
083CB701 1A              clearenv 
083CB702 29              ret 

stmt: (dbgmark "bsvm/init/Exceptions.bs" 11) -> (dbgmark "bsvm/init/Exceptions.bs" 11)
stmt: (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))))))) -> (flag public (class NullPointerException Exception () ((linenum 13) (flag public (define (NullPointerException) (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))) (linenum 15) (flag public (define (NullPointerException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))))))
expr: (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))) -> (rlambda NullPointerException () (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 14) -> (dbgmark "bsvm/init/Exceptions.bs" 14)
expr: (funcall super) -> (funcall super)
BLK NullPointerException, SA No, Capture=Yes
083CC210 02 010E         dbgmark "bsvm/init/Exceptions.bs" 14 
083CC213 20              mark 
083CC214 C20E            call_super 
083CC216 1A              clearenv 
083CC217 29              ret 

expr: (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))) -> (rlambda NullPointerException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 16) -> (dbgmark "bsvm/init/Exceptions.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK NullPointerException, SA Yes, Capture=Yes
083CCC00 02 0110         dbgmark "bsvm/init/Exceptions.bs" 16 
083CCC03 20              mark 
083CCC04 5A 00           lload 0 
083CCC06 C20E            call_super 
083CCC08 1A              clearenv 
083CCC09 29              ret 

stmt: (linenum 19) -> (linenum 19)
stmt: (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))))))) -> (flag public (class CastFailException Exception () ((linenum 21) (flag public (define (CastFailException) (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))) (linenum 23) (flag public (define (CastFailException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))))))
expr: (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))) -> (rlambda CastFailException () (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 22) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 22) -> (dbgmark "bsvm/init/Exceptions.bs" 22)
expr: (funcall super) -> (funcall super)
BLK CastFailException, SA No, Capture=Yes
083CD4F0 02 0116         dbgmark "bsvm/init/Exceptions.bs" 22 
083CD4F3 20              mark 
083CD4F4 C20E            call_super 
083CD4F6 1A              clearenv 
083CD4F7 29              ret 

expr: (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))) -> (rlambda CastFailException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 24) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 24) -> (dbgmark "bsvm/init/Exceptions.bs" 24)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK CastFailException, SA Yes, Capture=Yes
083CDDE0 02 0118         dbgmark "bsvm/init/Exceptions.bs" 24 
083CDDE3 20              mark 
083CDDE4 5A 00           lload 0 
083CDDE6 C20E            call_super 
083CDDE8 1A              clearenv 
083CDDE9 29              ret 

stmt: (linenum 27) -> (linenum 27)
stmt: (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))))))) -> (flag public (class BoundsCheckException Exception () ((linenum 29) (flag public (define (BoundsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))) (linenum 31) (flag public (define (BoundsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))))))
expr: (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))) -> (rlambda BoundsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 30) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 30) -> (dbgmark "bsvm/init/Exceptions.bs" 30)
expr: (funcall super) -> (funcall super)
BLK BoundsCheckException, SA No, Capture=Yes
083CE6D0 02 011E         dbgmark "bsvm/init/Exceptions.bs" 30 
083CE6D3 20              mark 
083CE6D4 C20E            call_super 
083CE6D6 1A              clearenv 
083CE6D7 29              ret 

expr: (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))) -> (rlambda BoundsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 32) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 32) -> (dbgmark "bsvm/init/Exceptions.bs" 32)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK BoundsCheckException, SA Yes, Capture=Yes
083CEFC0 02 0120         dbgmark "bsvm/init/Exceptions.bs" 32 
083CEFC3 20              mark 
083CEFC4 5A 00           lload 0 
083CEFC6 C20E            call_super 
083CEFC8 1A              clearenv 
083CEFC9 29              ret 

stmt: (linenum 35) -> (linenum 35)
expr: (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))))))) -> (flag public (class RightsCheckException Exception () ((linenum 37) (flag public (define (RightsCheckException) (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))) (linenum 39) (flag public (define (RightsCheckException str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))))))
expr: (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))) -> (rlambda RightsCheckException () (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 38) (funcall super))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 38) -> (dbgmark "bsvm/init/Exceptions.bs" 38)
expr: (funcall super) -> (funcall super)
BLK RightsCheckException, SA No, Capture=Yes
083CF8B0 02 0126         dbgmark "bsvm/init/Exceptions.bs" 38 
083CF8B3 20              mark 
083CF8B4 C20E            call_super 
083CF8B6 1A              clearenv 
083CF8B7 29              ret 

expr: (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))) -> (rlambda RightsCheckException (str) (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str)) -> (begin (dbgmark "bsvm/init/Exceptions.bs" 40) (funcall super str))
stmt: (dbgmark "bsvm/init/Exceptions.bs" 40) -> (dbgmark "bsvm/init/Exceptions.bs" 40)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK RightsCheckException, SA Yes, Capture=Yes
083D01A0 02 0128         dbgmark "bsvm/init/Exceptions.bs" 40 
083D01A3 20              mark 
083D01A4 5A 00           lload 0 
083D01A6 C20E            call_super 
083D01A8 1A              clearenv 
083D01A9 29              ret 

BLK (null), SA No, Capture=Yes
083D02C0 02 0101         dbgmark "bsvm/init/Exceptions.bs" 1 
083D02C3 C200 0200       begin_package bsvm/init () 
083D02C7 05 03           ln 3 
083D02C9 C202 030004     begin_class Exception () p 
083D02CE 10 05           push #!<svm_blk_t:083CAD70> 
083D02D0 97 030604       tybind Exception #"()r" p 
083D02D4 10 07           push #!<svm_blk_t:083CB680> 
083D02D6 97 030804       tybind Exception #"(r)r" p 
083D02DA C206            end_class 
083D02DC 11              pop 
083D02DD 02 010B         dbgmark "bsvm/init/Exceptions.bs" 11 
083D02E0 C202 090304     begin_class NullPointerException Exception p 
083D02E5 10 0A           push #!<svm_blk_t:083CC190> 
083D02E7 97 090604       tybind NullPointerException #"()r" p 
083D02EB 10 0B           push #!<svm_blk_t:083CCB80> 
083D02ED 97 090804       tybind NullPointerException #"(r)r" p 
083D02F1 C206            end_class 
083D02F3 11              pop 
083D02F4 05 13           ln 19 
083D02F6 C202 0C0304     begin_class CastFailException Exception p 
083D02FB 10 0D           push #!<svm_blk_t:083CD470> 
083D02FD 97 0C0604       tybind CastFailException #"()r" p 
083D0301 10 0E           push #!<svm_blk_t:083CDD60> 
083D0303 97 0C0804       tybind CastFailException #"(r)r" p 
083D0307 C206            end_class 
083D0309 11              pop 
083D030A 05 1B           ln 27 
083D030C C202 0F0304     begin_class BoundsCheckException Exception p 
083D0311 10 10           push #!<svm_blk_t:083CE650> 
083D0313 97 0F0604       tybind BoundsCheckException #"()r" p 
083D0317 10 11           push #!<svm_blk_t:083CEF40> 
083D0319 97 0F0804       tybind BoundsCheckException #"(r)r" p 
083D031D C206            end_class 
083D031F 11              pop 
083D0320 05 23           ln 35 
083D0322 C202 120304     begin_class RightsCheckException Exception p 
083D0327 10 13           push #!<svm_blk_t:083CF830> 
083D0329 97 120604       tybind RightsCheckException #"()r" p 
083D032D 10 14           push #!<svm_blk_t:083D0120> 
083D032F 97 120804       tybind RightsCheckException #"(r)r" p 
083D0333 C206            end_class 
083D0335 C204            end_package 
083D0337 11              pop 
083D0338 29              ret 

stmt: (dbgmark "bsvm/init/Errors.bs" 1) -> (dbgmark "bsvm/init/Errors.bs" 1)
stmt: (package bsvm/init ()) -> (package bsvm/init ())
stmt: (linenum 3) -> (linenum 3)
stmt: (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))))))) -> (flag public (class Error Exception () ((linenum 5) (flag public (define (Error) (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))) (linenum 7) (flag public (define (Error str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))))))
expr: (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))) -> (rlambda Error () (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 6) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 6) -> (dbgmark "bsvm/init/Errors.bs" 6)
expr: (funcall super) -> (funcall super)
BLK Error, SA No, Capture=Yes
083D5170 02 0106         dbgmark "bsvm/init/Errors.bs" 6 
083D5173 20              mark 
083D5174 C20E            call_super 
083D5176 1A              clearenv 
083D5177 29              ret 

expr: (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))) -> (rlambda Error (str) (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 8) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 8) -> (dbgmark "bsvm/init/Errors.bs" 8)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK Error, SA Yes, Capture=Yes
083D5A60 02 0108         dbgmark "bsvm/init/Errors.bs" 8 
083D5A63 20              mark 
083D5A64 5A 00           lload 0 
083D5A66 C20E            call_super 
083D5A68 1A              clearenv 
083D5A69 29              ret 

stmt: (linenum 11) -> (linenum 11)
expr: (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))))))) -> (flag public (class IllegalAccessError Error () ((linenum 13) (flag public (define (IllegalAccessError) (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))) (linenum 15) (flag public (define (IllegalAccessError str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))))))
expr: (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))) -> (rlambda IllegalAccessError () (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super)) -> (begin (dbgmark "bsvm/init/Errors.bs" 14) (funcall super))
stmt: (dbgmark "bsvm/init/Errors.bs" 14) -> (dbgmark "bsvm/init/Errors.bs" 14)
expr: (funcall super) -> (funcall super)
BLK IllegalAccessError, SA No, Capture=Yes
083D6350 02 010E         dbgmark "bsvm/init/Errors.bs" 14 
083D6353 20              mark 
083D6354 C20E            call_super 
083D6356 1A              clearenv 
083D6357 29              ret 

expr: (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))) -> (rlambda IllegalAccessError (str) (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)))
expr: (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str)) -> (begin (dbgmark "bsvm/init/Errors.bs" 16) (funcall super str))
stmt: (dbgmark "bsvm/init/Errors.bs" 16) -> (dbgmark "bsvm/init/Errors.bs" 16)
expr: (funcall super str) -> (funcall super str)
expr: str -> str
BLK IllegalAccessError, SA Yes, Capture=Yes
083D6C40 02 0110         dbgmark "bsvm/init/Errors.bs" 16 
083D6C43 20              mark 
083D6C44 5A 00           lload 0 
083D6C46 C20E            call_super 
083D6C48 1A              clearenv 
083D6C49 29              ret 

BLK (null), SA No, Capture=Yes
083D50A0 02 0101         dbgmark "bsvm/init/Errors.bs" 1 
083D50A3 C200 0200       begin_package bsvm/init () 
083D50A7 05 03           ln 3 
083D50A9 C202 030405     begin_class Error Exception p 
083D50AE 10 06           push #!<svm_blk_t:083D50F0> 
083D50B0 97 030705       tybind Error #"()r" p 
083D50B4 10 08           push #!<svm_blk_t:083D59E0> 
083D50B6 97 030905       tybind Error #"(r)r" p 
083D50BA C206            end_class 
083D50BC 11              pop 
083D50BD 05 0B           ln 11 
083D50BF C202 0A0305     begin_class IllegalAccessError Error p 
083D50C4 10 0B           push #!<svm_blk_t:083D62D0> 
083D50C6 97 0A0705       tybind IllegalAccessError #"()r" p 
083D50CA 10 0C           push #!<svm_blk_t:083D6BC0> 
083D50CC 97 0A0905       tybind IllegalAccessError #"(r)r" p 
083D50D0 C206            end_class 
083D50D2 C204            end_package 
083D50D4 11              pop 
083D50D5 29              ret 

stmt: (dbgmark "game_cl/main.bs" 1) -> (dbgmark "game_cl/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: (funcall printf "BGBScript Client Start\n") -> (funcall printf "BGBScript Client Start\n")
expr: "BGBScript Client Start\n" -> "BGBScript Client Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))))) -> (flag native (package C/game_cl/main (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))) -> (begin (linenum 7) (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) (linenum 12) (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTCL_ScriptInit)) (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))) -> (rlambda (cast void BTCL_ScriptInit) () (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n")) -> (begin (dbgmark "game_cl/main.bs" 9) (funcall printf "BTCL_ScriptInit: Called\n"))
stmt: (dbgmark "game_cl/main.bs" 9) -> (dbgmark "game_cl/main.bs" 9)
expr: (funcall printf "BTCL_ScriptInit: Called\n") -> (funcall printf "BTCL_ScriptInit: Called\n")
expr: "BTCL_ScriptInit: Called\n" -> "BTCL_ScriptInit: Called\n"
BLK BTCL_ScriptInit, SA No, Capture=Yes
083D94D0 02 0109         dbgmark "game_cl/main.bs" 9 
083D94D3 2A 02           tymark #"(Cs)r" 
083D94D5 10 03           push "BTCL_ScriptInit: Called\n" 
083D94D7 24 04           tailcall_s gc_printf 
083D94D9 1A              clearenv 
083D94DA 29              ret 

stmt: (linenum 12) -> (linenum 12)
stmt: (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin))) -> (flag public (define ((cast void BTCL_ScriptDrawUI)) (begin)))
expr: (rlambda (cast void BTCL_ScriptDrawUI) () (begin)) -> (rlambda (cast void BTCL_ScriptDrawUI) () (begin))
expr: (begin) -> ()
BLK BTCL_ScriptDrawUI, SA No, Capture=Yes
083D9DE0 42              push_null 
083D9DE1 1A              clearenv 
083D9DE2 29              ret 

BLK (null), SA No, Capture=Yes
083D9E90 02 0101         dbgmark "game_cl/main.bs" 1 
083D9E93 9A 0203         import "C" n 
083D9E96 05 03           ln 3 
083D9E98 2A 04           tymark #"(Cs)r" 
083D9E9A 10 05           push "BGBScript Client Start\n" 
083D9E9C 23 06           call_s gc_printf 
083D9E9E 11              pop 
083D9E9F 05 05           ln 5 
083D9EA1 C200 0703       begin_package C/game_cl/main n 
083D9EA5 05 07           ln 7 
083D9EA7 10 08           push #!<svm_blk_t:083D9440> 
083D9EA9 97 090A00       tybind BTCL_ScriptInit #"()v" () 
083D9EAD 05 0C           ln 12 
083D9EAF 10 0B           push #!<svm_blk_t:083D9D60> 
083D9EB1 97 0C0A00       tybind BTCL_ScriptDrawUI #"()v" () 
083D9EB5 C204            end_package 
083D9EB7 11              pop 
083D9EB8 29              ret 

BGBScript Client Start
BSVM_Pop: Stack Underflow @ 083D9E90
BTCL_ScriptInit: Called
DYLL_LoadLibraryI: Load serverx86.dll
DYLL_LoadLibraryI: Load resource/serverx86.dll
DYLL_LoadLibraryI: Success Loading resource/serverx86.dll
Got Module Data 0EE40020 798720
DYLL_MetaPath_LoadDB2: serverx86_meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86
DYLL_MetaPath_LoadDB2: exwad/serverx86/meta.txt serverx86 (16000 keys, 57323 lines)
Load DB 'serverx86': pass
DYLL_LoadLibrary: Loaded serverx86
BTGE_ServerInitFunc: btsvBindWorld Pass 0F591EF1
BTGE_ClientInitFunc: BTCL_BindWorld Pass 51891091
BTGE_ClientInitFunc: BTCL_BindBrushWorld Pass 5189119A
Th 00001C38 4820 00A4100F
PDGL: Main
Net Init Low (Winsock).
  hostname=GAMMA4-W7
  IPv4=192.168.1.100
TCP Initialized
Meta0_Init
BSXRP Init
Meta0: new port 18512, service bsxrp-server
BTGE_ServerInitFunc: btsvStepWorld Pass 0F591D61
BTGE_ClientInitFunc: BTCL_HandleInput Pass 518910DC
PDGLUI_InitRift: No Device
BTGE_ClientInitFunc: BTCL_StepWorld Pass 51891118
BTGE_ClientInitFunc: BTCL_SetupClientFrame Pass 51891316
BTGE_ServerInitFunc: btsvComposeUpdate Pass 0F591C71
BTGE_ServerInitFunc: btsvFinishUpdate Pass 0F5918A2
Texture: Missing-Base: textures/env/space1
LBXGL_SkyBox_LoadSky: space1
BTGE_ClientInitFunc: BTCL_Draw2D Pass 5189116D
new frag
new frag
SoundRec: Sound overrun
Eval:  load("game/main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/main.bs") -> (funcall load "game/main.bs")
expr: "game/main.bs" -> "game/main.bs"
BLK (null), SA No, Capture=Yes
08664120 02 0101         dbgmark "<eval-str>" 1 
08664123 2A 02           tymark #"(Cs)r" 
08664125 10 03           push "game/main.bs" 
08664127 24 04           tailcall_s load 
08664129 1A              clearenv 
0866412A 29              ret 

stmt: (dbgmark "game/main.bs" 6) -> (dbgmark "game/main.bs" 6)
stmt: (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (define (Game_CreateMainMenu) (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))) -> (rlambda Game_CreateMainMenu () (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)))
expr: (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu)) -> (begin (dbgmark "game/main.bs" 8) (funcall PDGLUI_BeginMenu "menu") (linenum 10) (funcall PDGLUI_BeginSubMenu "&New Game") (linenum 11) (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") (linenum 12) (funcall PDGLUI_MenuItem "ng_easy" "Easy") (linenum 13) (funcall PDGLUI_MenuItem "ng_medium" "Medium") (linenum 14) (funcall PDGLUI_MenuItem "ng_hard" "Hard") (linenum 15) (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") (linenum 16) (funcall PDGLUI_EndSubMenu) (linenum 18) (funcall PDGLUI_BeginSubMenu "&Load Game") (linenum 19) (funcall PDGLUI_MenuItem "sv_load1" "Game 1") (linenum 20) (funcall PDGLUI_MenuItem "sv_load2" "Game 2") (linenum 21) (funcall PDGLUI_MenuItem "sv_load3" "Game 3") (linenum 22) (funcall PDGLUI_MenuItem "sv_load4" "Game 4") (linenum 23) (funcall PDGLUI_EndSubMenu) (linenum 25) (funcall PDGLUI_BeginSubMenu "&Save Game") (linenum 26) (funcall PDGLUI_MenuItem "sv_save1" "Game 1") (linenum 27) (funcall PDGLUI_MenuItem "sv_save2" "Game 2") (linenum 28) (funcall PDGLUI_MenuItem "sv_save3" "Game 3") (linenum 29) (funcall PDGLUI_MenuItem "sv_save4" "Game 4") (linenum 30) (funcall PDGLUI_EndSubMenu) (linenum 33) (funcall PDGLUI_BeginSubMenu "Help") (linenum 34) (funcall PDGLUI_MenuItem "help_generic" "General") (linenum 35) (funcall PDGLUI_MenuItem "help_about" "About") (linenum 36) (funcall PDGLUI_EndSubMenu) (linenum 38) (funcall PDGLUI_EndMenu))
stmt: (dbgmark "game/main.bs" 8) -> (dbgmark "game/main.bs" 8)
stmt: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: (funcall PDGLUI_BeginMenu "menu") -> (funcall PDGLUI_BeginMenu "menu")
expr: "menu" -> "menu"
stmt: (linenum 10) -> (linenum 10)
stmt: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: (funcall PDGLUI_BeginSubMenu "&New Game") -> (funcall PDGLUI_BeginSubMenu "&New Game")
expr: "&New Game" -> "&New Game"
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful") -> (funcall PDGLUI_MenuItem "ng_peaceful" "Peaceful")
expr: "ng_peaceful" -> "ng_peaceful"
expr: "Peaceful" -> "Peaceful"
stmt: (linenum 12) -> (linenum 12)
stmt: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: (funcall PDGLUI_MenuItem "ng_easy" "Easy") -> (funcall PDGLUI_MenuItem "ng_easy" "Easy")
expr: "ng_easy" -> "ng_easy"
expr: "Easy" -> "Easy"
stmt: (linenum 13) -> (linenum 13)
stmt: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: (funcall PDGLUI_MenuItem "ng_medium" "Medium") -> (funcall PDGLUI_MenuItem "ng_medium" "Medium")
expr: "ng_medium" -> "ng_medium"
expr: "Medium" -> "Medium"
stmt: (linenum 14) -> (linenum 14)
stmt: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: (funcall PDGLUI_MenuItem "ng_hard" "Hard") -> (funcall PDGLUI_MenuItem "ng_hard" "Hard")
expr: "ng_hard" -> "ng_hard"
expr: "Hard" -> "Hard"
stmt: (linenum 15) -> (linenum 15)
stmt: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare") -> (funcall PDGLUI_MenuItem "ng_nightmare" "Nightmare")
expr: "ng_nightmare" -> "ng_nightmare"
expr: "Nightmare" -> "Nightmare"
stmt: (linenum 16) -> (linenum 16)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 18) -> (linenum 18)
stmt: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: (funcall PDGLUI_BeginSubMenu "&Load Game") -> (funcall PDGLUI_BeginSubMenu "&Load Game")
expr: "&Load Game" -> "&Load Game"
stmt: (linenum 19) -> (linenum 19)
stmt: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_load1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_load1" "Game 1")
expr: "sv_load1" -> "sv_load1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 20) -> (linenum 20)
stmt: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_load2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_load2" "Game 2")
expr: "sv_load2" -> "sv_load2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 21) -> (linenum 21)
stmt: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_load3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_load3" "Game 3")
expr: "sv_load3" -> "sv_load3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 22) -> (linenum 22)
stmt: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_load4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_load4" "Game 4")
expr: "sv_load4" -> "sv_load4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 23) -> (linenum 23)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 25) -> (linenum 25)
stmt: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: (funcall PDGLUI_BeginSubMenu "&Save Game") -> (funcall PDGLUI_BeginSubMenu "&Save Game")
expr: "&Save Game" -> "&Save Game"
stmt: (linenum 26) -> (linenum 26)
stmt: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: (funcall PDGLUI_MenuItem "sv_save1" "Game 1") -> (funcall PDGLUI_MenuItem "sv_save1" "Game 1")
expr: "sv_save1" -> "sv_save1"
expr: "Game 1" -> "Game 1"
stmt: (linenum 27) -> (linenum 27)
stmt: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: (funcall PDGLUI_MenuItem "sv_save2" "Game 2") -> (funcall PDGLUI_MenuItem "sv_save2" "Game 2")
expr: "sv_save2" -> "sv_save2"
expr: "Game 2" -> "Game 2"
stmt: (linenum 28) -> (linenum 28)
stmt: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: (funcall PDGLUI_MenuItem "sv_save3" "Game 3") -> (funcall PDGLUI_MenuItem "sv_save3" "Game 3")
expr: "sv_save3" -> "sv_save3"
expr: "Game 3" -> "Game 3"
stmt: (linenum 29) -> (linenum 29)
stmt: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: (funcall PDGLUI_MenuItem "sv_save4" "Game 4") -> (funcall PDGLUI_MenuItem "sv_save4" "Game 4")
expr: "sv_save4" -> "sv_save4"
expr: "Game 4" -> "Game 4"
stmt: (linenum 30) -> (linenum 30)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: (funcall PDGLUI_BeginSubMenu "Help") -> (funcall PDGLUI_BeginSubMenu "Help")
expr: "Help" -> "Help"
stmt: (linenum 34) -> (linenum 34)
stmt: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: (funcall PDGLUI_MenuItem "help_generic" "General") -> (funcall PDGLUI_MenuItem "help_generic" "General")
expr: "help_generic" -> "help_generic"
expr: "General" -> "General"
stmt: (linenum 35) -> (linenum 35)
stmt: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: (funcall PDGLUI_MenuItem "help_about" "About") -> (funcall PDGLUI_MenuItem "help_about" "About")
expr: "help_about" -> "help_about"
expr: "About" -> "About"
stmt: (linenum 36) -> (linenum 36)
stmt: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
expr: (funcall PDGLUI_EndSubMenu) -> (funcall PDGLUI_EndSubMenu)
stmt: (linenum 38) -> (linenum 38)
expr: (funcall PDGLUI_EndMenu) -> (funcall PDGLUI_EndMenu)
BLK Game_CreateMainMenu, SA No, Capture=Yes
08666170 02 0108         dbgmark "game/main.bs" 8 
08666173 2A 02           tymark #"(Cs)r" 
08666175 10 03           push "menu" 
08666177 23 04           call_s PDGLUI_BeginMenu 
08666179 11              pop 
0866617A 05 0A           ln 10 
0866617C 2A 02           tymark #"(Cs)r" 
0866617E 10 05           push "&New Game" 
08666180 23 06           call_s PDGLUI_BeginSubMenu 
08666182 11              pop 
08666183 05 0B           ln 11 
08666185 2A 07           tymark #"(CsCs)r" 
08666187 10 08           push "ng_peaceful" 
08666189 10 09           push "Peaceful" 
0866618B 23 0A           call_s PDGLUI_MenuItem 
0866618D 11              pop 
0866618E 05 0C           ln 12 
08666190 2A 07           tymark #"(CsCs)r" 
08666192 10 0B           push "ng_easy" 
08666194 10 0C           push "Easy" 
08666196 23 0A           call_s PDGLUI_MenuItem 
08666198 11              pop 
08666199 05 0D           ln 13 
0866619B 2A 07           tymark #"(CsCs)r" 
0866619D 10 0D           push "ng_medium" 
0866619F 10 0E           push "Medium" 
086661A1 23 0A           call_s PDGLUI_MenuItem 
086661A3 11              pop 
086661A4 05 0E           ln 14 
086661A6 2A 07           tymark #"(CsCs)r" 
086661A8 10 0F           push "ng_hard" 
086661AA 10 10           push "Hard" 
086661AC 23 0A           call_s PDGLUI_MenuItem 
086661AE 11              pop 
086661AF 05 0F           ln 15 
086661B1 2A 07           tymark #"(CsCs)r" 
086661B3 10 11           push "ng_nightmare" 
086661B5 10 12           push "Nightmare" 
086661B7 23 0A           call_s PDGLUI_MenuItem 
086661B9 11              pop 
086661BA 05 10           ln 16 
086661BC 2A 13           tymark #"()r" 
086661BE 23 14           call_s PDGLUI_EndSubMenu 
086661C0 11              pop 
086661C1 05 12           ln 18 
086661C3 2A 02           tymark #"(Cs)r" 
086661C5 10 15           push "&Load Game" 
086661C7 23 06           call_s PDGLUI_BeginSubMenu 
086661C9 11              pop 
086661CA 05 13           ln 19 
086661CC 2A 07           tymark #"(CsCs)r" 
086661CE 10 16           push "sv_load1" 
086661D0 10 17           push "Game 1" 
086661D2 23 0A           call_s PDGLUI_MenuItem 
086661D4 11              pop 
086661D5 05 14           ln 20 
086661D7 2A 07           tymark #"(CsCs)r" 
086661D9 10 18           push "sv_load2" 
086661DB 10 19           push "Game 2" 
086661DD 23 0A           call_s PDGLUI_MenuItem 
086661DF 11              pop 
086661E0 05 15           ln 21 
086661E2 2A 07           tymark #"(CsCs)r" 
086661E4 10 1A           push "sv_load3" 
086661E6 10 1B           push "Game 3" 
086661E8 23 0A           call_s PDGLUI_MenuItem 
086661EA 11              pop 
086661EB 05 16           ln 22 
086661ED 2A 07           tymark #"(CsCs)r" 
086661EF 10 1C           push "sv_load4" 
086661F1 10 1D           push "Game 4" 
086661F3 23 0A           call_s PDGLUI_MenuItem 
086661F5 11              pop 
086661F6 05 17           ln 23 
086661F8 2A 13           tymark #"()r" 
086661FA 23 14           call_s PDGLUI_EndSubMenu 
086661FC 11              pop 
086661FD 05 19           ln 25 
086661FF 2A 02           tymark #"(Cs)r" 
08666201 10 1E           push "&Save Game" 
08666203 23 06           call_s PDGLUI_BeginSubMenu 
08666205 11              pop 
08666206 05 1A           ln 26 
08666208 2A 07           tymark #"(CsCs)r" 
0866620A 10 1F           push "sv_save1" 
0866620C 10 17           push "Game 1" 
0866620E 23 0A           call_s PDGLUI_MenuItem 
08666210 11              pop 
08666211 05 1B           ln 27 
08666213 2A 07           tymark #"(CsCs)r" 
08666215 10 20           push "sv_save2" 
08666217 10 19           push "Game 2" 
08666219 23 0A           call_s PDGLUI_MenuItem 
0866621B 11              pop 
0866621C 05 1C           ln 28 
0866621E 2A 07           tymark #"(CsCs)r" 
08666220 10 21           push "sv_save3" 
08666222 10 1B           push "Game 3" 
08666224 23 0A           call_s PDGLUI_MenuItem 
08666226 11              pop 
08666227 05 1D           ln 29 
08666229 2A 07           tymark #"(CsCs)r" 
0866622B 10 22           push "sv_save4" 
0866622D 10 1D           push "Game 4" 
0866622F 23 0A           call_s PDGLUI_MenuItem 
08666231 11              pop 
08666232 05 1E           ln 30 
08666234 2A 13           tymark #"()r" 
08666236 23 14           call_s PDGLUI_EndSubMenu 
08666238 11              pop 
08666239 05 21           ln 33 
0866623B 2A 02           tymark #"(Cs)r" 
0866623D 10 23           push "Help" 
0866623F 23 06           call_s PDGLUI_BeginSubMenu 
08666241 11              pop 
08666242 05 22           ln 34 
08666244 2A 07           tymark #"(CsCs)r" 
08666246 10 24           push "help_generic" 
08666248 10 25           push "General" 
0866624A 23 0A           call_s PDGLUI_MenuItem 
0866624C 11              pop 
0866624D 05 23           ln 35 
0866624F 2A 07           tymark #"(CsCs)r" 
08666251 10 26           push "help_about" 
08666253 10 27           push "About" 
08666255 23 0A           call_s PDGLUI_MenuItem 
08666257 11              pop 
08666258 05 24           ln 36 
0866625A 2A 13           tymark #"()r" 
0866625C 23 14           call_s PDGLUI_EndSubMenu 
0866625E 11              pop 
0866625F 05 26           ln 38 
08666261 2A 13           tymark #"()r" 
08666263 24 28           tailcall_s PDGLUI_EndMenu 
08666265 1A              clearenv 
08666266 29              ret 

stmt: (linenum 41) -> (linenum 41)
stmt: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: (funcall printf "BGBScript Main Start\n") -> (funcall printf "BGBScript Main Start\n")
expr: "BGBScript Main Start\n" -> "BGBScript Main Start\n"
stmt: (linenum 43) -> (linenum 43)
stmt: (flag extern (import "game_cl/main")) -> (flag extern (import "game_cl/main"))
stmt: (linenum 45) -> (linenum 45)
stmt: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
expr: (funcall Game_CreateMainMenu) -> (funcall Game_CreateMainMenu)
stmt: (linenum 47) -> (linenum 47)
expr: (funcall printf "BGBScript Main End\n") -> (funcall printf "BGBScript Main End\n")
expr: "BGBScript Main End\n" -> "BGBScript Main End\n"
BLK (null), SA No, Capture=Yes
08666350 02 0106         dbgmark "game/main.bs" 6 
08666353 10 02           push #!<svm_blk_t:08666050> 
08666355 97 030400       tybind Game_CreateMainMenu #"()r" () 
08666359 05 29           ln 41 
0866635B 2A 05           tymark #"(Cs)r" 
0866635D 10 06           push "BGBScript Main Start\n" 
0866635F 23 07           call_s gc_printf 
08666361 11              pop 
08666362 05 2B           ln 43 
08666364 9A 0809         import "game_cl/main" Ce 
08666367 05 2D           ln 45 
08666369 2A 04           tymark #"()r" 
0866636B 23 03           call_s Game_CreateMainMenu 
0866636D 11              pop 
0866636E 05 2F           ln 47 
08666370 2A 05           tymark #"(Cs)r" 
08666372 10 0A           push "BGBScript Main End\n" 
08666374 24 07           tailcall_s gc_printf 
08666376 29              ret 

BGBScript Main Start
BGBScript Main End
()
new frag
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x08662B90
call @0x006B18D9
mov [esp+4], eax
call @0x006B16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
BTGE_ClientInitFunc: BTCL_FlushWorld Pass 518912CB
BTGE_ServerInitFunc: BTGE_WorldTeardown Pass 0F5921D0
BTGE_ClientInitFunc: BTCL_LoadMapFile Pass 51891136
BTGE_ServerInitFunc: BTSV_LoadMapFile Pass 0F591F82
Map Loaded: 0 brushes, 4 ents, 1 lights
BTGE_ServerInitFunc: btsvSpawnWorld Pass 0F591DC0
BT_SpawnWorld 0D3ACA08
stmt: (dbgmark "game_sv/main.bs" 1) -> (dbgmark "game_sv/main.bs" 1)
stmt: (flag native (import "C")) -> (flag native (import "C"))
stmt: (linenum 3) -> (linenum 3)
stmt: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: (funcall printf "BGBScript Server Start\n") -> (funcall printf "BGBScript Server Start\n")
expr: "BGBScript Server Start\n" -> "BGBScript Server Start\n"
stmt: (linenum 5) -> (linenum 5)
stmt: (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))))) -> (flag native (package C/game_sv/main (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))))
stmt: (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))) -> (begin (linenum 7) (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))))
stmt: (linenum 7) -> (linenum 7)
stmt: (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))) -> (flag public (define ((cast void BTSV_ScriptInit)) (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))))
expr: (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))) -> (rlambda (cast void BTSV_ScriptInit) () (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")))
expr: (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n")) -> (begin (dbgmark "game_sv/main.bs" 9) (funcall printf "BTSV_ScriptInit: Called\n"))
stmt: (dbgmark "game_sv/main.bs" 9) -> (dbgmark "game_sv/main.bs" 9)
expr: (funcall printf "BTSV_ScriptInit: Called\n") -> (funcall printf "BTSV_ScriptInit: Called\n")
expr: "BTSV_ScriptInit: Called\n" -> "BTSV_ScriptInit: Called\n"
BLK BTSV_ScriptInit, SA No, Capture=Yes
0866E960 02 0109         dbgmark "game_sv/main.bs" 9 
0866E963 2A 02           tymark #"(Cs)r" 
0866E965 10 03           push "BTSV_ScriptInit: Called\n" 
0866E967 24 04           tailcall_s gc_printf 
0866E969 1A              clearenv 
0866E96A 29              ret 

stmt: (linenum 13) -> (linenum 13)
stmt: (flag extern (import "game_sv/EntityBase")) -> (flag extern (import "game_sv/EntityBase"))
stmt: (linenum 14) -> (linenum 14)
expr: (flag extern (import "game_sv/MonsterGeneric")) -> (flag extern (import "game_sv/MonsterGeneric"))
BLK (null), SA No, Capture=Yes
0866EA10 02 0101         dbgmark "game_sv/main.bs" 1 
0866EA13 9A 0203         import "C" n 
0866EA16 05 03           ln 3 
0866EA18 2A 04           tymark #"(Cs)r" 
0866EA1A 10 05           push "BGBScript Server Start\n" 
0866EA1C 23 06           call_s gc_printf 
0866EA1E 11              pop 
0866EA1F 05 05           ln 5 
0866EA21 C200 0703       begin_package C/game_sv/main n 
0866EA25 05 07           ln 7 
0866EA27 10 08           push #!<svm_blk_t:0866E8D0> 
0866EA29 97 090A00       tybind BTSV_ScriptInit #"()v" () 
0866EA2D C204            end_package 
0866EA2F 11              pop 
0866EA30 05 0D           ln 13 
0866EA32 9A 0B0C         import "game_sv/EntityBase" Ce 
0866EA35 05 0E           ln 14 
0866EA37 9A 0D0C         import "game_sv/MonsterGeneric" Ce 
0866EA3A 42              push_null 
0866EA3B 29              ret 

BGBScript Server Start
stmt: (dbgmark "game_sv/EntityBase.bs" 1) -> (dbgmark "game_sv/EntityBase.bs" 1)
stmt: (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin)))))) -> (flag public (class EntityBase () () ((linenum 3) (flag public (vars (entity))) (linenum 4) (flag public (vars (spawnEntity))) (linenum 6) (flag public (define (EntityBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))) (linenum 13) (flag public (define (use self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 14) (flag public (define (touch self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 15) (flag public (define (blocked self other) (begin))) (dbgmark "game_sv/EntityBase.bs" 16) (flag public (define (pain self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 17) (flag public (define (die self other damage) (begin))) (dbgmark "game_sv/EntityBase.bs" 18) (flag public (define (prethink self) (begin))))))
expr: () -> ()
expr: () -> ()
expr: (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))) -> (rlambda EntityBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 9) (set! entity ent) (linenum 10) (set! spawnEntity sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 9) -> (dbgmark "game_sv/EntityBase.bs" 9)
stmt: (set! entity ent) -> (set! entity ent)
expr: ent -> ent
stmt: (linenum 10) -> (linenum 10)
expr: (set! spawnEntity sent) -> (set! spawnEntity sent)
expr: sent -> sent
BLK EntityBase, SA Yes, Capture=Yes
08671230 02 0109         dbgmark "game_sv/EntityBase.bs" 9 
08671233 5A 01           lload 1 
08671235 13 02           store entity 
08671237 05 0A           ln 10 
08671239 5A 00           lload 0 
0867123B 30              dup 
0867123C 13 03           store spawnEntity 
0867123E 1A              clearenv 
0867123F 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
08671B40 42              push_null 
08671B41 1A              clearenv 
08671B42 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
08672430 42              push_null 
08672431 1A              clearenv 
08672432 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
08672D20 42              push_null 
08672D21 1A              clearenv 
08672D22 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
08673610 42              push_null 
08673611 1A              clearenv 
08673612 29              ret 

expr: (rlambda die (self other damage) (begin)) -> (rlambda die (self other damage) (begin))
expr: (begin) -> ()
BLK die, SA Yes, Capture=Yes
08673F20 42              push_null 
08673F21 1A              clearenv 
08673F22 29              ret 

expr: (rlambda prethink (self) (begin)) -> (rlambda prethink (self) (begin))
expr: (begin) -> ()
BLK prethink, SA Yes, Capture=Yes
08674810 42              push_null 
08674811 1A              clearenv 
08674812 29              ret 

stmt: (dbgmark "game_sv/EntityBase.bs" 21) -> (dbgmark "game_sv/EntityBase.bs" 21)
expr: (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin)))))) -> (flag public (class ActorBase EntityBase () ((linenum 23) (flag public (define (ActorBase ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))) (linenum 29) (flag public (define (stand self) (begin))) (dbgmark "game_sv/EntityBase.bs" 30) (flag public (define (walk self) (begin))) (dbgmark "game_sv/EntityBase.bs" 31) (flag public (define (run self) (begin))) (dbgmark "game_sv/EntityBase.bs" 32) (flag public (define (missile self) (begin))) (dbgmark "game_sv/EntityBase.bs" 33) (flag public (define (melee self) (begin))))))
expr: (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))) -> (rlambda ActorBase (ent sent) (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent)) -> (begin (dbgmark "game_sv/EntityBase.bs" 26) (funcall super ent sent))
stmt: (dbgmark "game_sv/EntityBase.bs" 26) -> (dbgmark "game_sv/EntityBase.bs" 26)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK ActorBase, SA Yes, Capture=Yes
08675100 02 011A         dbgmark "game_sv/EntityBase.bs" 26 
08675103 20              mark 
08675104 5A 01           lload 1 
08675106 5A 00           lload 0 
08675108 C20E            call_super 
0867510A 1A              clearenv 
0867510B 29              ret 

expr: (rlambda stand (self) (begin)) -> (rlambda stand (self) (begin))
expr: (begin) -> ()
BLK stand, SA Yes, Capture=Yes
086759F0 42              push_null 
086759F1 1A              clearenv 
086759F2 29              ret 

expr: (rlambda walk (self) (begin)) -> (rlambda walk (self) (begin))
expr: (begin) -> ()
BLK walk, SA Yes, Capture=Yes
086762E0 42              push_null 
086762E1 1A              clearenv 
086762E2 29              ret 

expr: (rlambda run (self) (begin)) -> (rlambda run (self) (begin))
expr: (begin) -> ()
BLK run, SA Yes, Capture=Yes
08676BD0 42              push_null 
08676BD1 1A              clearenv 
08676BD2 29              ret 

expr: (rlambda missile (self) (begin)) -> (rlambda missile (self) (begin))
expr: (begin) -> ()
BLK missile, SA Yes, Capture=Yes
086774C0 42              push_null 
086774C1 1A              clearenv 
086774C2 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
08677DB0 42              push_null 
08677DB1 1A              clearenv 
08677DB2 29              ret 

BLK (null), SA No, Capture=Yes
08677F00 02 0101         dbgmark "game_sv/EntityBase.bs" 1 
08677F03 C202 020003     begin_class EntityBase () p 
08677F08 42              push_null 
08677F09 97 040003       tybind entity () p 
08677F0D 42              push_null 
08677F0E 97 050003       tybind spawnEntity () p 
08677F12 10 06           push #!<svm_blk_t:086711A0> 
08677F14 97 020703       tybind EntityBase #"(rr)r" p 
08677F18 10 08           push #!<svm_blk_t:08671AC0> 
08677F1A 97 090703       tybind use #"(rr)r" p 
08677F1E 10 0A           push #!<svm_blk_t:086723B0> 
08677F20 97 0B0703       tybind touch #"(rr)r" p 
08677F24 10 0C           push #!<svm_blk_t:08672CA0> 
08677F26 97 0D0703       tybind blocked #"(rr)r" p 
08677F2A 10 0E           push #!<svm_blk_t:08673590> 
08677F2C 97 0F1003       tybind pain #"(rrr)r" p 
08677F30 10 11           push #!<svm_blk_t:08673EA0> 
08677F32 97 121003       tybind die #"(rrr)r" p 
08677F36 10 13           push #!<svm_blk_t:08674790> 
08677F38 97 141503       tybind prethink #"(r)r" p 
08677F3C C206            end_class 
08677F3E 11              pop 
08677F3F 02 0115         dbgmark "game_sv/EntityBase.bs" 21 
08677F42 C202 160203     begin_class ActorBase EntityBase p 
08677F47 10 17           push #!<svm_blk_t:08675080> 
08677F49 97 160703       tybind ActorBase #"(rr)r" p 
08677F4D 10 18           push #!<svm_blk_t:08675970> 
08677F4F 97 191503       tybind stand #"(r)r" p 
08677F53 10 1A           push #!<svm_blk_t:08676260> 
08677F55 97 1B1503       tybind walk #"(r)r" p 
08677F59 10 1C           push #!<svm_blk_t:08676B50> 
08677F5B 97 1D1503       tybind run #"(r)r" p 
08677F5F 10 1E           push #!<svm_blk_t:08677440> 
08677F61 97 1F1503       tybind missile #"(r)r" p 
08677F65 10 20           push #!<svm_blk_t:08677D30> 
08677F67 97 211503       tybind melee #"(r)r" p 
08677F6B C206            end_class 
08677F6D 29              ret 

Add Slot 08679070 entity r
Add Slot 08679210 spawnEntity r
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 2) -> (dbgmark "game_sv/MonsterGeneric.bs" 2)
stmt: (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))))))) -> (flag public (class monster_generic2 ActorBase () ((linenum 4) (flag static (vars (stand1_mf))) (linenum 5) (flag static (vars (walk1_mf))) (linenum 6) (flag static (vars (walk2_mf))) (linenum 8) (flag static (vars (stand1_mfi))) (linenum 9) (flag static (vars (walk1_mfi))) (linenum 10) (flag static (vars (walk2_mfi))) (linenum 12) (flag static (vars (run_mf))) (linenum 13) (flag static (vars (attack1_mf))) (linenum 14) (flag static (vars (run_mfi))) (linenum 15) (flag static (vars (attack1_mfi))) (linenum 17) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 26) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) (linenum 46) (define (deinit self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 51) (define (blocked self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 53) (define (touch self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 55) (define (use self other) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 57) (define (pain self other damage) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 60) (define (die self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) (linenum 68) (define (cmdmsg self other str) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 71) (define (stand self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) (linenum 76) (define (walk1_random self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) (linenum 82) (define (walk self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) (linenum 90) (define (run self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) (linenum 92) (define (missile self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) (linenum 95) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) (linenum 108) (define (melee self) (begin)) (dbgmark "game_sv/MonsterGeneric.bs" 112) (flag public (define (monster_generic2 ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))) (linenum 123) (flag static (begin (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))))))
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: () -> ()
expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 19) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 19) -> (dbgmark "game_sv/MonsterGeneric.bs" 19)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 21) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 21) -> (linenum 21)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0867C2E0 02 0113         dbgmark "game_sv/MonsterGeneric.bs" 19 
0867C2E3 2A 02           tymark #"()r" 
0867C2E5 23 03           call_s btRandom 
0867C2E7 10 04           push 0.100000 
0867C2E9 7A 111300       jmp_cond_b ge 0867C300 
0867C2ED 05 15           ln 21 
0867C2EF 2A 05           tymark #"(rrrrr)r" 
0867C2F1 5A 00           lload 0 
0867C2F3 48              push_2 
0867C2F4 5A 00           lload 0 
0867C2F6 64 06           loadindex_s snd_idle 
0867C2F8 59 6400         push_sv_f 1 
0867C2FB 47              push_1 
0867C2FC 23 07           call_s btSound 
0867C2FE 1A              clearenv 
0867C2FF 29              ret 
0867C300 42              push_null 
0867C301 1A              clearenv 
0867C302 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 30) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 31) (objset! self movetype BT_MOVE_STEP) (linenum 33) (funcall btSetModel self "models/monsters/soldier/soldier.model") (linenum 34) (objset! self snd_sight "sound/soldier/solsght1") (linenum 35) (objset! self snd_idle "sound/soldier/solidle1") (linenum 37) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) (linenum 38) (objset! self maxs (vector 16 16 40)) (linenum 39) (objset! self health 30) (linenum 43) (funcall btWalkmonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 30) -> (dbgmark "game_sv/MonsterGeneric.bs" 30)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 31) -> (linenum 31)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 33) -> (linenum 33)
stmt: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: (funcall btSetModel self "models/monsters/soldier/soldier.model") -> (funcall btSetModel self "models/monsters/soldier/soldier.model")
expr: self -> self
expr: "models/monsters/soldier/soldier.model" -> "models/monsters/soldier/soldier.model"
stmt: (linenum 34) -> (linenum 34)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 35) -> (linenum 35)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 37) -> (linenum 37)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 24)))
expr: (vector (unary - 16) (unary - 16) (unary - 24)) -> (vector (unary - 16) (unary - 16) (unary - 24))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 24) -> -24
expr: self -> self
stmt: (linenum 38) -> (linenum 38)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 39) -> (linenum 39)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 43) -> (linenum 43)
expr: (funcall btWalkmonsterStart self) -> (funcall btWalkmonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0867CCF0 02 011E         dbgmark "game_sv/MonsterGeneric.bs" 30 
0867CCF3 49              push_3 
0867CCF4 36              dup_f 
0867CCF5 5A 00           lload 0 
0867CCF7 65 02           storeindex_s solidtype 
0867CCF9 11              pop 
0867CCFA 05 1F           ln 31 
0867CCFC 48              push_2 
0867CCFD 36              dup_f 
0867CCFE 5A 00           lload 0 
0867CD00 65 03           storeindex_s movetype 
0867CD02 11              pop 
0867CD03 05 21           ln 33 
0867CD05 2A 04           tymark #"(rCs)r" 
0867CD07 5A 00           lload 0 
0867CD09 10 05           push "models/monsters/soldier/soldier.model" 
0867CD0B 23 06           call_s btSetModel 
0867CD0D 11              pop 
0867CD0E 05 22           ln 34 
0867CD10 10 07           push "sound/soldier/solsght1" 
0867CD12 30              dup 
0867CD13 5A 00           lload 0 
0867CD15 65 08           storeindex_s snd_sight 
0867CD17 11              pop 
0867CD18 05 23           ln 35 
0867CD1A 10 09           push "sound/soldier/solidle1" 
0867CD1C 30              dup 
0867CD1D 5A 00           lload 0 
0867CD1F 65 0A           storeindex_s snd_idle 
0867CD21 11              pop 
0867CD22 05 25           ln 37 
0867CD24 20              mark 
0867CD25 58 10           push_sv_n 16 
0867CD27 58 10           push_sv_n 16 
0867CD29 58 18           push_sv_n 24 
0867CD2B 84              vector 
0867CD2C 30              dup 
0867CD2D 5A 00           lload 0 
0867CD2F 65 0B           storeindex_s mins 
0867CD31 11              pop 
0867CD32 05 26           ln 38 
0867CD34 20              mark 
0867CD35 57 10           push_sv_p 16 
0867CD37 57 10           push_sv_p 16 
0867CD39 57 28           push_sv_p 40 
0867CD3B 84              vector 
0867CD3C 30              dup 
0867CD3D 5A 00           lload 0 
0867CD3F 65 0C           storeindex_s maxs 
0867CD41 11              pop 
0867CD42 05 27           ln 39 
0867CD44 57 1E           push_sv_p 30 
0867CD46 36              dup_f 
0867CD47 5A 00           lload 0 
0867CD49 65 0D           storeindex_s health 
0867CD4B 11              pop 
0867CD4C 05 2B           ln 43 
0867CD4E 2A 0E           tymark #"(r)r" 
0867CD50 5A 00           lload 0 
0867CD52 24 0F           tailcall_s btWalkmonsterStart 
0867CD54 1A              clearenv 
0867CD55 29              ret 

expr: (rlambda deinit (self) (begin)) -> (rlambda deinit (self) (begin))
expr: (begin) -> ()
BLK deinit, SA Yes, Capture=Yes
0867D640 42              push_null 
0867D641 1A              clearenv 
0867D642 29              ret 

expr: (rlambda blocked (self other) (begin)) -> (rlambda blocked (self other) (begin))
expr: (begin) -> ()
BLK blocked, SA Yes, Capture=Yes
0867DF30 42              push_null 
0867DF31 1A              clearenv 
0867DF32 29              ret 

expr: (rlambda touch (self other) (begin)) -> (rlambda touch (self other) (begin))
expr: (begin) -> ()
BLK touch, SA Yes, Capture=Yes
0867E820 42              push_null 
0867E821 1A              clearenv 
0867E822 29              ret 

expr: (rlambda use (self other) (begin)) -> (rlambda use (self other) (begin))
expr: (begin) -> ()
BLK use, SA Yes, Capture=Yes
0867F110 42              push_null 
0867F111 1A              clearenv 
0867F112 29              ret 

expr: (rlambda pain (self other damage) (begin)) -> (rlambda pain (self other damage) (begin))
expr: (begin) -> ()
BLK pain, SA Yes, Capture=Yes
0867FA00 42              push_null 
0867FA01 1A              clearenv 
0867FA02 29              ret 

expr: (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))) -> (rlambda die (self other damage) (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 65) (funcall BT_EntityRobotExplode self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 65) -> (dbgmark "game_sv/MonsterGeneric.bs" 65)
expr: (funcall BT_EntityRobotExplode self) -> (funcall BT_EntityRobotExplode self)
expr: self -> self
BLK die, SA Yes, Capture=Yes
08680300 02 0141         dbgmark "game_sv/MonsterGeneric.bs" 65 
08680303 2A 02           tymark #"(r)r" 
08680305 5A 02           lload 2 
08680307 24 03           tailcall_s BT_EntityRobotExplode 
08680309 1A              clearenv 
0868030A 29              ret 

expr: (rlambda cmdmsg (self other str) (begin)) -> (rlambda cmdmsg (self other str) (begin))
expr: (begin) -> ()
BLK cmdmsg, SA Yes, Capture=Yes
08680BF0 42              push_null 
08680BF1 1A              clearenv 
08680BF2 29              ret 

expr: (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))) -> (rlambda stand (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 73) (funcall btSetMove self stand1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 73) -> (dbgmark "game_sv/MonsterGeneric.bs" 73)
expr: (funcall btSetMove self stand1_mfi) -> (funcall btSetMove self stand1_mfi)
expr: self -> self
expr: stand1_mfi -> stand1_mfi
BLK stand, SA Yes, Capture=Yes
086814F0 02 0149         dbgmark "game_sv/MonsterGeneric.bs" 73 
086814F3 2A 02           tymark #"(rr)r" 
086814F5 5A 00           lload 0 
086814F7 12 03           load stand1_mfi 
086814F9 24 04           tailcall_s btSetMove 
086814FB 1A              clearenv 
086814FC 29              ret 

expr: (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))) -> (rlambda walk1_random (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 78) (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 78) -> (dbgmark "game_sv/MonsterGeneric.bs" 78)
expr: (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi)) -> (if (binary > (funcall btRandom) 0.100000) (funcall btSetMove self walk1_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
BLK walk1_random, SA Yes, Capture=Yes
08681E20 02 014E         dbgmark "game_sv/MonsterGeneric.bs" 78 
08681E23 2A 02           tymark #"()r" 
08681E25 23 03           call_s btRandom 
08681E27 10 04           push 0.100000 
08681E29 7A 100800       jmp_cond_b le 08681E35 
08681E2D 2A 05           tymark #"(rr)r" 
08681E2F 5A 00           lload 0 
08681E31 12 06           load walk1_mfi 
08681E33 24 07           tailcall_s btSetMove 
08681E35 42              push_null 
08681E36 1A              clearenv 
08681E37 29              ret 

expr: (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))) -> (rlambda walk (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 84) (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 84) -> (dbgmark "game_sv/MonsterGeneric.bs" 84)
expr: (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi)) -> (if (binary > (funcall btRandom) 0.500000) (funcall btSetMove self walk1_mfi) (funcall btSetMove self walk2_mfi))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.500000 -> 0.500000
expr: (funcall btSetMove self walk1_mfi) -> (funcall btSetMove self walk1_mfi)
expr: self -> self
expr: walk1_mfi -> walk1_mfi
expr: (funcall btSetMove self walk2_mfi) -> (funcall btSetMove self walk2_mfi)
expr: self -> self
expr: walk2_mfi -> walk2_mfi
BLK walk, SA Yes, Capture=Yes
08682760 02 0154         dbgmark "game_sv/MonsterGeneric.bs" 84 
08682763 2A 02           tymark #"()r" 
08682765 23 03           call_s btRandom 
08682767 59 3200         push_sv_f 0.5 
0868276A 7A 100800       jmp_cond_b le 08682776 
0868276E 2A 04           tymark #"(rr)r" 
08682770 5A 00           lload 0 
08682772 12 05           load walk1_mfi 
08682774 24 06           tailcall_s btSetMove 
08682776 2A 04           tymark #"(rr)r" 
08682778 5A 00           lload 0 
0868277A 12 07           load walk2_mfi 
0868277C 24 06           tailcall_s btSetMove 
0868277E 1A              clearenv 
0868277F 29              ret 

expr: (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))) -> (rlambda run (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 91) (funcall btSetMove self run_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 91) -> (dbgmark "game_sv/MonsterGeneric.bs" 91)
expr: (funcall btSetMove self run_mfi) -> (funcall btSetMove self run_mfi)
expr: self -> self
expr: run_mfi -> run_mfi
BLK run, SA Yes, Capture=Yes
08683070 02 015B         dbgmark "game_sv/MonsterGeneric.bs" 91 
08683073 2A 02           tymark #"(rr)r" 
08683075 5A 00           lload 0 
08683077 12 03           load run_mfi 
08683079 24 04           tailcall_s btSetMove 
0868307B 1A              clearenv 
0868307C 29              ret 

expr: (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))) -> (rlambda missile (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 93) (funcall btSetMove self attack1_mfi))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 93) -> (dbgmark "game_sv/MonsterGeneric.bs" 93)
expr: (funcall btSetMove self attack1_mfi) -> (funcall btSetMove self attack1_mfi)
expr: self -> self
expr: attack1_mfi -> attack1_mfi
BLK missile, SA Yes, Capture=Yes
08683970 02 015D         dbgmark "game_sv/MonsterGeneric.bs" 93 
08683973 2A 02           tymark #"(rr)r" 
08683975 5A 00           lload 0 
08683977 12 03           load attack1_mfi 
08683979 24 04           tailcall_s btSetMove 
0868397B 1A              clearenv 
0868397C 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 97) (vars (org dir)) (linenum 101) (set! org (funcall BT_AimOrigin self)) (linenum 102) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 105) (funcall BT_FireBlaster self org dir 25 600 32))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 97) -> (dbgmark "game_sv/MonsterGeneric.bs" 97)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 101) -> (linenum 101)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 102) -> (linenum 102)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 105) -> (linenum 105)
expr: (funcall BT_FireBlaster self org dir 25 600 32) -> (funcall BT_FireBlaster self org dir 25 600 32)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 25 -> 25
expr: 600 -> 600
expr: 32 -> 32
BLK think_fire, SA Yes, Capture=Yes
086842A0 02 0161         dbgmark "game_sv/MonsterGeneric.bs" 97 
086842A3 42              push_null 
086842A4 16 02           lexbind org 
086842A6 42              push_null 
086842A7 16 03           lexbind dir 
086842A9 05 65           ln 101 
086842AB 2A 04           tymark #"(r)r" 
086842AD 5A 02           lload 2 
086842AF 23 05           call_s BT_AimOrigin 
086842B1 5B 01           lstore 1 
086842B3 05 66           ln 102 
086842B5 2A 06           tymark #"(rrr)r" 
086842B7 5A 02           lload 2 
086842B9 5A 02           lload 2 
086842BB 64 07           loadindex_s enemy 
086842BD 45 5802         push_sv 600 
086842C0 23 08           call_s BT_AimDirection 
086842C2 5B 00           lstore 0 
086842C4 05 69           ln 105 
086842C6 2A 09           tymark #"(rrrrrr)r" 
086842C8 5A 02           lload 2 
086842CA 5A 01           lload 1 
086842CC 5A 00           lload 0 
086842CE 57 19           push_sv_p 25 
086842D0 45 5802         push_sv 600 
086842D3 57 20           push_sv_p 32 
086842D5 24 0A           tailcall_s BT_FireBlaster 
086842D7 1A              clearenv 
086842D8 29              ret 

expr: (rlambda melee (self) (begin)) -> (rlambda melee (self) (begin))
expr: (begin) -> ()
BLK melee, SA Yes, Capture=Yes
08684BC0 42              push_null 
08684BC1 1A              clearenv 
08684BC2 29              ret 

expr: (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))) -> (rlambda monster_generic2 (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 115) (funcall super ent sent) (linenum 118) (methodcall this init ent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 115) -> (dbgmark "game_sv/MonsterGeneric.bs" 115)
stmt: (funcall super ent sent) -> (funcall super ent sent)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
stmt: (linenum 118) -> (linenum 118)
expr: (methodcall this init ent) -> (methodcall this init ent)
expr: ent -> ent
expr: this -> this
BLK monster_generic2, SA Yes, Capture=Yes
086854E0 02 0173         dbgmark "game_sv/MonsterGeneric.bs" 115 
086854E3 20              mark 
086854E4 5A 01           lload 1 
086854E6 5A 00           lload 0 
086854E8 C20E            call_super 
086854EA 11              pop 
086854EB 05 76           ln 118 
086854ED 2A 02           tymark #"(r)r" 
086854EF 5A 01           lload 1 
086854F1 19              push_self 
086854F2 28 03           methodtailcall_s init 
086854F4 1A              clearenv 
086854F5 29              ret 

expr: (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))) -> (lambda () (linenum 125) (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) (linenum 147) (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) (linenum 169) (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) (linenum 180) (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) (linenum 188) (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) (linenum 200) (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) (linenum 203) (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) (linenum 206) (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) (linenum 209) (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) (linenum 212) (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) (linenum 216) (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)))
stmt: (linenum 125) -> (linenum 125)
stmt: (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))) -> (set! stand1_mf (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)))
expr: (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null)) -> (array (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null) (array btaiStand 0 null))
expr: (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self)))) -> (array btaiStand 0 (lambda (self) (begin (linenum 128) (funcall think_idle self))))
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 128) (funcall think_idle self))) -> (lambda (self) (begin (linenum 128) (funcall think_idle self)))
expr: (begin (linenum 128) (funcall think_idle self)) -> (begin (linenum 128) (funcall think_idle self))
stmt: (linenum 128) -> (linenum 128)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08686760 05 8080         ln 128 
08686763 2A 01           tymark #"(r)r" 
08686765 5A 00           lload 0 
08686767 24 02           tailcall_s think_idle 
08686769 1A              clearenv 
0868676A 29              ret 

expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
expr: (array btaiStand 0 null) -> (array btaiStand 0 null)
expr: btaiStand -> btaiStand
expr: 0 -> 0
expr: null -> null
stmt: (linenum 147) -> (linenum 147)
stmt: (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))) -> (set! walk1_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 walk1_random) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 150) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 150) (funcall think_idle self))) -> (lambda (self) (begin (linenum 150) (funcall think_idle self)))
expr: (begin (linenum 150) (funcall think_idle self)) -> (begin (linenum 150) (funcall think_idle self))
stmt: (linenum 150) -> (linenum 150)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08687050 05 8096         ln 150 
08687053 2A 01           tymark #"(r)r" 
08687055 5A 00           lload 0 
08687057 24 02           tailcall_s think_idle 
08687059 1A              clearenv 
0868705A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 walk1_random) -> (array btaiWalk 0 walk1_random)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: walk1_random -> walk1_random
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 169) -> (linenum 169)
stmt: (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))) -> (set! walk2_mf (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)))
expr: (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null)) -> (array (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) (array btaiWalk 5 null) (array btaiWalk 3 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 2 null) (array btaiWalk 5 null) (array btaiWalk 5 null) (array btaiWalk 2 null) (array btaiWalk 0 null))
expr: (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self)))) -> (array btaiWalk 3 (lambda (self) (begin (linenum 172) (funcall think_idle self))))
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: (lambda (self) (begin (linenum 172) (funcall think_idle self))) -> (lambda (self) (begin (linenum 172) (funcall think_idle self)))
expr: (begin (linenum 172) (funcall think_idle self)) -> (begin (linenum 172) (funcall think_idle self))
stmt: (linenum 172) -> (linenum 172)
expr: (funcall think_idle self) -> (funcall think_idle self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08687940 05 80AC         ln 172 
08687943 2A 01           tymark #"(r)r" 
08687945 5A 00           lload 0 
08687947 24 02           tailcall_s think_idle 
08687949 1A              clearenv 
0868794A 29              ret 

expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 3 null) -> (array btaiWalk 3 null)
expr: btaiWalk -> btaiWalk
expr: 3 -> 3
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 5 null) -> (array btaiWalk 5 null)
expr: btaiWalk -> btaiWalk
expr: 5 -> 5
expr: null -> null
expr: (array btaiWalk 2 null) -> (array btaiWalk 2 null)
expr: btaiWalk -> btaiWalk
expr: 2 -> 2
expr: null -> null
expr: (array btaiWalk 0 null) -> (array btaiWalk 0 null)
expr: btaiWalk -> btaiWalk
expr: 0 -> 0
expr: null -> null
stmt: (linenum 180) -> (linenum 180)
stmt: (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))) -> (set! run_mf (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)))
expr: (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null)) -> (array (array btaiRun 10 null) (array btaiRun 11 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 11 null) (array btaiRun 15 null) (array btaiRun 15 null))
expr: (array btaiRun 10 null) -> (array btaiRun 10 null)
expr: btaiRun -> btaiRun
expr: 10 -> 10
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 11 null) -> (array btaiRun 11 null)
expr: btaiRun -> btaiRun
expr: 11 -> 11
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
expr: (array btaiRun 15 null) -> (array btaiRun 15 null)
expr: btaiRun -> btaiRun
expr: 15 -> 15
expr: null -> null
stmt: (linenum 188) -> (linenum 188)
stmt: (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))) -> (set! attack1_mf (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)))
expr: (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null)) -> (array (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null) (array btaiCharge 0 null))
expr: (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self)))) -> (array btaiCharge 0 (lambda (self) (begin (linenum 191) (funcall think_fire self))))
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: (lambda (self) (begin (linenum 191) (funcall think_fire self))) -> (lambda (self) (begin (linenum 191) (funcall think_fire self)))
expr: (begin (linenum 191) (funcall think_fire self)) -> (begin (linenum 191) (funcall think_fire self))
stmt: (linenum 191) -> (linenum 191)
expr: (funcall think_fire self) -> (funcall think_fire self)
expr: self -> self
BLK (null), SA Yes, Capture=Yes
08688230 05 80BF         ln 191 
08688233 2A 01           tymark #"(r)r" 
08688235 5A 00           lload 0 
08688237 24 02           tailcall_s think_fire 
08688239 1A              clearenv 
0868823A 29              ret 

expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
expr: (array btaiCharge 0 null) -> (array btaiCharge 0 null)
expr: btaiCharge -> btaiCharge
expr: 0 -> 0
expr: null -> null
stmt: (linenum 200) -> (linenum 200)
stmt: (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)) -> (set! stand1_mfi (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand))
expr: (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand) -> (funcall btDyBuildMove "stand1" 0 30 stand1_mf stand)
expr: "stand1" -> "stand1"
expr: 0 -> 0
expr: 30 -> 30
expr: stand1_mf -> stand1_mf
expr: stand -> stand
stmt: (linenum 203) -> (linenum 203)
stmt: (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)) -> (set! walk1_mfi (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk))
expr: (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk) -> (funcall btDyBuildMove "walk1" 0 32 walk1_mf walk)
expr: "walk1" -> "walk1"
expr: 0 -> 0
expr: 32 -> 32
expr: walk1_mf -> walk1_mf
expr: walk -> walk
stmt: (linenum 206) -> (linenum 206)
stmt: (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)) -> (set! walk2_mfi (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk))
expr: (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk) -> (funcall btDyBuildMove "walk2" 0 10 walk2_mf walk)
expr: "walk2" -> "walk2"
expr: 0 -> 0
expr: 10 -> 10
expr: walk2_mf -> walk2_mf
expr: walk -> walk
stmt: (linenum 209) -> (linenum 209)
stmt: (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run)) -> (set! run_mfi (funcall btDyBuildMove "run" 2 8 run_mf run))
expr: (funcall btDyBuildMove "run" 2 8 run_mf run) -> (funcall btDyBuildMove "run" 2 8 run_mf run)
expr: "run" -> "run"
expr: 2 -> 2
expr: 8 -> 8
expr: run_mf -> run_mf
expr: run -> run
stmt: (linenum 212) -> (linenum 212)
stmt: (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)) -> (set! attack1_mfi (funcall btDyBuildMove "attack1" 2 8 attack1_mf run))
expr: (funcall btDyBuildMove "attack1" 2 8 attack1_mf run) -> (funcall btDyBuildMove "attack1" 2 8 attack1_mf run)
expr: "attack1" -> "attack1"
expr: 2 -> 2
expr: 8 -> 8
expr: attack1_mf -> attack1_mf
expr: run -> run
stmt: (linenum 216) -> (linenum 216)
expr: (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run)) -> (funcall printf "This A = %p, run=%p, this.run=%p\n" this run (objref this run))
expr: "This A = %p, run=%p, this.run=%p\n" -> "This A = %p, run=%p, this.run=%p\n"
expr: this -> this
expr: run -> run
expr: (objref this run) -> (objref this run)
expr: this -> this
BLK (null), SA No, Capture=Yes
086883C0 05 7D           ln 125 
086883C2 20              mark 
086883C3 20              mark 
086883C4 12 01           load btaiStand 
086883C6 46              push_0 
086883C7 10 02           push #!<svm_blk_t:086866E0> 
086883C9 80              array 
086883CA 20              mark 
086883CB 12 01           load btaiStand 
086883CD 46              push_0 
086883CE 42              push_null 
086883CF 80              array 
086883D0 20              mark 
086883D1 12 01           load btaiStand 
086883D3 46              push_0 
086883D4 42              push_null 
086883D5 80              array 
086883D6 20              mark 
086883D7 12 01           load btaiStand 
086883D9 46              push_0 
086883DA 42              push_null 
086883DB 80              array 
086883DC 20              mark 
086883DD 12 01           load btaiStand 
086883DF 46              push_0 
086883E0 42              push_null 
086883E1 80              array 
086883E2 20              mark 
086883E3 12 01           load btaiStand 
086883E5 46              push_0 
086883E6 42              push_null 
086883E7 80              array 
086883E8 20              mark 
086883E9 12 01           load btaiStand 
086883EB 46              push_0 
086883EC 42              push_null 
086883ED 80              array 
086883EE 20              mark 
086883EF 12 01           load btaiStand 
086883F1 46              push_0 
086883F2 42              push_null 
086883F3 80              array 
086883F4 20              mark 
086883F5 12 01           load btaiStand 
086883F7 46              push_0 
086883F8 42              push_null 
086883F9 80              array 
086883FA 20              mark 
086883FB 12 01           load btaiStand 
086883FD 46              push_0 
086883FE 42              push_null 
086883FF 80              array 
08688400 20              mark 
08688401 12 01           load btaiStand 
08688403 46              push_0 
08688404 42              push_null 
08688405 80              array 
08688406 20              mark 
08688407 12 01           load btaiStand 
08688409 46              push_0 
0868840A 42              push_null 
0868840B 80              array 
0868840C 20              mark 
0868840D 12 01           load btaiStand 
0868840F 46              push_0 
08688410 42              push_null 
08688411 80              array 
08688412 20              mark 
08688413 12 01           load btaiStand 
08688415 46              push_0 
08688416 42              push_null 
08688417 80              array 
08688418 20              mark 
08688419 12 01           load btaiStand 
0868841B 46              push_0 
0868841C 42              push_null 
0868841D 80              array 
0868841E 20              mark 
0868841F 12 01           load btaiStand 
08688421 46              push_0 
08688422 42              push_null 
08688423 80              array 
08688424 20              mark 
08688425 12 01           load btaiStand 
08688427 46              push_0 
08688428 42              push_null 
08688429 80              array 
0868842A 20              mark 
0868842B 12 01           load btaiStand 
0868842D 46              push_0 
0868842E 42              push_null 
0868842F 80              array 
08688430 20              mark 
08688431 12 01           load btaiStand 
08688433 46              push_0 
08688434 42              push_null 
08688435 80              array 
08688436 20              mark 
08688437 12 01           load btaiStand 
08688439 46              push_0 
0868843A 42              push_null 
0868843B 80              array 
0868843C 20              mark 
0868843D 12 01           load btaiStand 
0868843F 46              push_0 
08688440 42              push_null 
08688441 80              array 
08688442 20              mark 
08688443 12 01           load btaiStand 
08688445 46              push_0 
08688446 42              push_null 
08688447 80              array 
08688448 20              mark 
08688449 12 01           load btaiStand 
0868844B 46              push_0 
0868844C 42              push_null 
0868844D 80              array 
0868844E 20              mark 
0868844F 12 01           load btaiStand 
08688451 46              push_0 
08688452 42              push_null 
08688453 80              array 
08688454 20              mark 
08688455 12 01           load btaiStand 
08688457 46              push_0 
08688458 42              push_null 
08688459 80              array 
0868845A 20              mark 
0868845B 12 01           load btaiStand 
0868845D 46              push_0 
0868845E 42              push_null 
0868845F 80              array 
08688460 20              mark 
08688461 12 01           load btaiStand 
08688463 46              push_0 
08688464 42              push_null 
08688465 80              array 
08688466 20              mark 
08688467 12 01           load btaiStand 
08688469 46              push_0 
0868846A 42              push_null 
0868846B 80              array 
0868846C 20              mark 
0868846D 12 01           load btaiStand 
0868846F 46              push_0 
08688470 42              push_null 
08688471 80              array 
08688472 20              mark 
08688473 12 01           load btaiStand 
08688475 46              push_0 
08688476 42              push_null 
08688477 80              array 
08688478 20              mark 
08688479 12 01           load btaiStand 
0868847B 46              push_0 
0868847C 42              push_null 
0868847D 80              array 
0868847E 80              array 
0868847F 13 03           store stand1_mf 
08688481 05 8093         ln 147 
08688484 20              mark 
08688485 20              mark 
08688486 12 04           load btaiWalk 
08688488 49              push_3 
08688489 10 05           push #!<svm_blk_t:08686FD0> 
0868848B 80              array 
0868848C 20              mark 
0868848D 12 04           load btaiWalk 
0868848F 4B              push_5 
08688490 42              push_null 
08688491 80              array 
08688492 20              mark 
08688493 12 04           load btaiWalk 
08688495 49              push_3 
08688496 42              push_null 
08688497 80              array 
08688498 20              mark 
08688499 12 04           load btaiWalk 
0868849B 48              push_2 
0868849C 42              push_null 
0868849D 80              array 
0868849E 20              mark 
0868849F 12 04           load btaiWalk 
086884A1 48              push_2 
086884A2 42              push_null 
086884A3 80              array 
086884A4 20              mark 
086884A5 12 04           load btaiWalk 
086884A7 48              push_2 
086884A8 42              push_null 
086884A9 80              array 
086884AA 20              mark 
086884AB 12 04           load btaiWalk 
086884AD 4B              push_5 
086884AE 42              push_null 
086884AF 80              array 
086884B0 20              mark 
086884B1 12 04           load btaiWalk 
086884B3 4B              push_5 
086884B4 42              push_null 
086884B5 80              array 
086884B6 20              mark 
086884B7 12 04           load btaiWalk 
086884B9 48              push_2 
086884BA 42              push_null 
086884BB 80              array 
086884BC 20              mark 
086884BD 12 04           load btaiWalk 
086884BF 46              push_0 
086884C0 12 06           load walk1_random 
086884C2 80              array 
086884C3 20              mark 
086884C4 12 04           load btaiWalk 
086884C6 46              push_0 
086884C7 42              push_null 
086884C8 80              array 
086884C9 20              mark 
086884CA 12 04           load btaiWalk 
086884CC 46              push_0 
086884CD 42              push_null 
086884CE 80              array 
086884CF 20              mark 
086884D0 12 04           load btaiWalk 
086884D2 46              push_0 
086884D3 42              push_null 
086884D4 80              array 
086884D5 20              mark 
086884D6 12 04           load btaiWalk 
086884D8 46              push_0 
086884D9 42              push_null 
086884DA 80              array 
086884DB 20              mark 
086884DC 12 04           load btaiWalk 
086884DE 46              push_0 
086884DF 42              push_null 
086884E0 80              array 
086884E1 20              mark 
086884E2 12 04           load btaiWalk 
086884E4 46              push_0 
086884E5 42              push_null 
086884E6 80              array 
086884E7 20              mark 
086884E8 12 04           load btaiWalk 
086884EA 46              push_0 
086884EB 42              push_null 
086884EC 80              array 
086884ED 20              mark 
086884EE 12 04           load btaiWalk 
086884F0 46              push_0 
086884F1 42              push_null 
086884F2 80              array 
086884F3 20              mark 
086884F4 12 04           load btaiWalk 
086884F6 46              push_0 
086884F7 42              push_null 
086884F8 80              array 
086884F9 20              mark 
086884FA 12 04           load btaiWalk 
086884FC 46              push_0 
086884FD 42              push_null 
086884FE 80              array 
086884FF 20              mark 
08688500 12 04           load btaiWalk 
08688502 46              push_0 
08688503 42              push_null 
08688504 80              array 
08688505 20              mark 
08688506 12 04           load btaiWalk 
08688508 46              push_0 
08688509 42              push_null 
0868850A 80              array 
0868850B 20              mark 
0868850C 12 04           load btaiWalk 
0868850E 46              push_0 
0868850F 42              push_null 
08688510 80              array 
08688511 20              mark 
08688512 12 04           load btaiWalk 
08688514 46              push_0 
08688515 42              push_null 
08688516 80              array 
08688517 20              mark 
08688518 12 04           load btaiWalk 
0868851A 46              push_0 
0868851B 42              push_null 
0868851C 80              array 
0868851D 20              mark 
0868851E 12 04           load btaiWalk 
08688520 46              push_0 
08688521 42              push_null 
08688522 80              array 
08688523 20              mark 
08688524 12 04           load btaiWalk 
08688526 46              push_0 
08688527 42              push_null 
08688528 80              array 
08688529 20              mark 
0868852A 12 04           load btaiWalk 
0868852C 46              push_0 
0868852D 42              push_null 
0868852E 80              array 
0868852F 20              mark 
08688530 12 04           load btaiWalk 
08688532 46              push_0 
08688533 42              push_null 
08688534 80              array 
08688535 20              mark 
08688536 12 04           load btaiWalk 
08688538 46              push_0 
08688539 42              push_null 
0868853A 80              array 
0868853B 20              mark 
0868853C 12 04           load btaiWalk 
0868853E 46              push_0 
0868853F 42              push_null 
08688540 80              array 
08688541 20              mark 
08688542 12 04           load btaiWalk 
08688544 46              push_0 
08688545 42              push_null 
08688546 80              array 
08688547 80              array 
08688548 13 07           store walk1_mf 
0868854A 05 80A9         ln 169 
0868854D 20              mark 
0868854E 20              mark 
0868854F 12 04           load btaiWalk 
08688551 49              push_3 
08688552 10 08           push #!<svm_blk_t:086878C0> 
08688554 80              array 
08688555 20              mark 
08688556 12 04           load btaiWalk 
08688558 4B              push_5 
08688559 42              push_null 
0868855A 80              array 
0868855B 20              mark 
0868855C 12 04           load btaiWalk 
0868855E 49              push_3 
0868855F 42              push_null 
08688560 80              array 
08688561 20              mark 
08688562 12 04           load btaiWalk 
08688564 48              push_2 
08688565 42              push_null 
08688566 80              array 
08688567 20              mark 
08688568 12 04           load btaiWalk 
0868856A 48              push_2 
0868856B 42              push_null 
0868856C 80              array 
0868856D 20              mark 
0868856E 12 04           load btaiWalk 
08688570 48              push_2 
08688571 42              push_null 
08688572 80              array 
08688573 20              mark 
08688574 12 04           load btaiWalk 
08688576 4B              push_5 
08688577 42              push_null 
08688578 80              array 
08688579 20              mark 
0868857A 12 04           load btaiWalk 
0868857C 4B              push_5 
0868857D 42              push_null 
0868857E 80              array 
0868857F 20              mark 
08688580 12 04           load btaiWalk 
08688582 48              push_2 
08688583 42              push_null 
08688584 80              array 
08688585 20              mark 
08688586 12 04           load btaiWalk 
08688588 46              push_0 
08688589 42              push_null 
0868858A 80              array 
0868858B 80              array 
0868858C 13 09           store walk2_mf 
0868858E 05 80B4         ln 180 
08688591 20              mark 
08688592 20              mark 
08688593 12 0A           load btaiRun 
08688595 57 0A           push_sv_p 10 
08688597 42              push_null 
08688598 80              array 
08688599 20              mark 
0868859A 12 0A           load btaiRun 
0868859C 57 0B           push_sv_p 11 
0868859E 42              push_null 
0868859F 80              array 
086885A0 20              mark 
086885A1 12 0A           load btaiRun 
086885A3 57 0B           push_sv_p 11 
086885A5 42              push_null 
086885A6 80              array 
086885A7 20              mark 
086885A8 12 0A           load btaiRun 
086885AA 57 0F           push_sv_p 15 
086885AC 42              push_null 
086885AD 80              array 
086885AE 20              mark 
086885AF 12 0A           load btaiRun 
086885B1 57 0B           push_sv_p 11 
086885B3 42              push_null 
086885B4 80              array 
086885B5 20              mark 
086885B6 12 0A           load btaiRun 
086885B8 57 0F           push_sv_p 15 
086885BA 42              push_null 
086885BB 80              array 
086885BC 20              mark 
086885BD 12 0A           load btaiRun 
086885BF 57 0F           push_sv_p 15 
086885C1 42              push_null 
086885C2 80              array 
086885C3 80              array 
086885C4 13 0B           store run_mf 
086885C6 05 80BC         ln 188 
086885C9 20              mark 
086885CA 20              mark 
086885CB 12 0C           load btaiCharge 
086885CD 46              push_0 
086885CE 10 0D           push #!<svm_blk_t:086881B0> 
086885D0 80              array 
086885D1 20              mark 
086885D2 12 0C           load btaiCharge 
086885D4 46              push_0 
086885D5 42              push_null 
086885D6 80              array 
086885D7 20              mark 
086885D8 12 0C           load btaiCharge 
086885DA 46              push_0 
086885DB 42              push_null 
086885DC 80              array 
086885DD 20              mark 
086885DE 12 0C           load btaiCharge 
086885E0 46              push_0 
086885E1 42              push_null 
086885E2 80              array 
086885E3 20              mark 
086885E4 12 0C           load btaiCharge 
086885E6 46              push_0 
086885E7 42              push_null 
086885E8 80              array 
086885E9 20              mark 
086885EA 12 0C           load btaiCharge 
086885EC 46              push_0 
086885ED 42              push_null 
086885EE 80              array 
086885EF 20              mark 
086885F0 12 0C           load btaiCharge 
086885F2 46              push_0 
086885F3 42              push_null 
086885F4 80              array 
086885F5 20              mark 
086885F6 12 0C           load btaiCharge 
086885F8 46              push_0 
086885F9 42              push_null 
086885FA 80              array 
086885FB 20              mark 
086885FC 12 0C           load btaiCharge 
086885FE 46              push_0 
086885FF 42              push_null 
08688600 80              array 
08688601 20              mark 
08688602 12 0C           load btaiCharge 
08688604 46              push_0 
08688605 42              push_null 
08688606 80              array 
08688607 20              mark 
08688608 12 0C           load btaiCharge 
0868860A 46              push_0 
0868860B 42              push_null 
0868860C 80              array 
0868860D 20              mark 
0868860E 12 0C           load btaiCharge 
08688610 46              push_0 
08688611 42              push_null 
08688612 80              array 
08688613 80              array 
08688614 13 0E           store attack1_mf 
08688616 05 80C8         ln 200 
08688619 2A 0F           tymark #"(Csrrrr)r" 
0868861B 10 10           push "stand1" 
0868861D 46              push_0 
0868861E 57 1E           push_sv_p 30 
08688620 12 03           load stand1_mf 
08688622 12 11           load stand 
08688624 23 12           call_s btDyBuildMove 
08688626 13 13           store stand1_mfi 
08688628 05 80CB         ln 203 
0868862B 2A 0F           tymark #"(Csrrrr)r" 
0868862D 10 14           push "walk1" 
0868862F 46              push_0 
08688630 57 20           push_sv_p 32 
08688632 12 07           load walk1_mf 
08688634 12 15           load walk 
08688636 23 12           call_s btDyBuildMove 
08688638 13 16           store walk1_mfi 
0868863A 05 80CE         ln 206 
0868863D 2A 0F           tymark #"(Csrrrr)r" 
0868863F 10 17           push "walk2" 
08688641 46              push_0 
08688642 57 0A           push_sv_p 10 
08688644 12 09           load walk2_mf 
08688646 12 15           load walk 
08688648 23 12           call_s btDyBuildMove 
0868864A 13 18           store walk2_mfi 
0868864C 05 80D1         ln 209 
0868864F 2A 0F           tymark #"(Csrrrr)r" 
08688651 10 19           push "run" 
08688653 48              push_2 
08688654 57 08           push_sv_p 8 
08688656 12 0B           load run_mf 
08688658 12 1A           load run 
0868865A 23 12           call_s btDyBuildMove 
0868865C 13 1B           store run_mfi 
0868865E 05 80D4         ln 212 
08688661 2A 0F           tymark #"(Csrrrr)r" 
08688663 10 1C           push "attack1" 
08688665 48              push_2 
08688666 57 08           push_sv_p 8 
08688668 12 0E           load attack1_mf 
0868866A 12 1A           load run 
0868866C 23 12           call_s btDyBuildMove 
0868866E 13 1D           store attack1_mfi 
08688670 05 80D8         ln 216 
08688673 2A 1E           tymark #"(Csrrr)r" 
08688675 10 1F           push "This A = %p, run=%p, this.run=%p\n" 
08688677 19              push_self 
08688678 12 1A           load run 
0868867A 19              push_self 
0868867B 64 1A           loadindex_s run 
0868867D 24 20           tailcall_s gc_printf 
0868867F 29              ret 

stmt: (linenum 222) -> (linenum 222)
stmt: (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_sheep monster_generic2 () ((linenum 224) (flag public (define (passive_sheep ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))) (linenum 230) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 239) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))) -> (rlambda passive_sheep (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 226) (funcall printf "passive_sheep: ctor\n") (linenum 227) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 226) -> (dbgmark "game_sv/MonsterGeneric.bs" 226)
stmt: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: (funcall printf "passive_sheep: ctor\n") -> (funcall printf "passive_sheep: ctor\n")
expr: "passive_sheep: ctor\n" -> "passive_sheep: ctor\n"
stmt: (linenum 227) -> (linenum 227)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_sheep, SA Yes, Capture=Yes
08688F70 02 0180E2       dbgmark "game_sv/MonsterGeneric.bs" 226 
08688F74 2A 02           tymark #"(Cs)r" 
08688F76 10 03           push "passive_sheep: ctor\n" 
08688F78 23 04           call_s gc_printf 
08688F7A 11              pop 
08688F7B 05 80E3         ln 227 
08688F7E 20              mark 
08688F7F 5A 01           lload 1 
08688F81 5A 00           lload 0 
08688F83 C20E            call_super 
08688F85 1A              clearenv 
08688F86 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 232) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 232) -> (dbgmark "game_sv/MonsterGeneric.bs" 232)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 234) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 234) -> (linenum 234)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
086898B0 02 0180E8       dbgmark "game_sv/MonsterGeneric.bs" 232 
086898B4 2A 02           tymark #"()r" 
086898B6 23 03           call_s btRandom 
086898B8 10 04           push 0.100000 
086898BA 7A 111400       jmp_cond_b ge 086898D2 
086898BE 05 80EA         ln 234 
086898C1 2A 05           tymark #"(rrrrr)r" 
086898C3 5A 00           lload 0 
086898C5 48              push_2 
086898C6 5A 00           lload 0 
086898C8 64 06           loadindex_s snd_idle 
086898CA 59 6400         push_sv_f 1 
086898CD 47              push_1 
086898CE 23 07           call_s btSound 
086898D0 1A              clearenv 
086898D1 29              ret 
086898D2 42              push_null 
086898D3 1A              clearenv 
086898D4 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 241) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 243) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 244) (objset! self movetype BT_MOVE_STEP) (linenum 246) (funcall btSetModel self "models/monsters/sheep/sheep.model") (linenum 247) (objset! self snd_sight "sound/soldier/solsght1") (linenum 248) (objset! self snd_idle "sound/animal/sheep_idle1") (linenum 250) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 251) (objset! self maxs (vector 16 16 40)) (linenum 252) (objset! self health 30) (linenum 256) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 241) -> (dbgmark "game_sv/MonsterGeneric.bs" 241)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 243) -> (linenum 243)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 244) -> (linenum 244)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 246) -> (linenum 246)
stmt: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: (funcall btSetModel self "models/monsters/sheep/sheep.model") -> (funcall btSetModel self "models/monsters/sheep/sheep.model")
expr: self -> self
expr: "models/monsters/sheep/sheep.model" -> "models/monsters/sheep/sheep.model"
stmt: (linenum 247) -> (linenum 247)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 248) -> (linenum 248)
stmt: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: (objset! self snd_idle "sound/animal/sheep_idle1") -> (objset! self snd_idle "sound/animal/sheep_idle1")
expr: "sound/animal/sheep_idle1" -> "sound/animal/sheep_idle1"
expr: self -> self
stmt: (linenum 250) -> (linenum 250)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 251) -> (linenum 251)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 252) -> (linenum 252)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 256) -> (linenum 256)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0868A220 02 0180F1       dbgmark "game_sv/MonsterGeneric.bs" 241 
0868A224 2A 02           tymark #"(Csr)r" 
0868A226 10 03           push "monster_sheep: init A self=%p\n" 
0868A228 5A 00           lload 0 
0868A22A 23 04           call_s gc_printf 
0868A22C 11              pop 
0868A22D 05 80F3         ln 243 
0868A230 49              push_3 
0868A231 36              dup_f 
0868A232 5A 00           lload 0 
0868A234 65 05           storeindex_s solidtype 
0868A236 11              pop 
0868A237 05 80F4         ln 244 
0868A23A 48              push_2 
0868A23B 36              dup_f 
0868A23C 5A 00           lload 0 
0868A23E 65 06           storeindex_s movetype 
0868A240 11              pop 
0868A241 05 80F6         ln 246 
0868A244 2A 07           tymark #"(rCs)r" 
0868A246 5A 00           lload 0 
0868A248 10 08           push "models/monsters/sheep/sheep.model" 
0868A24A 23 09           call_s btSetModel 
0868A24C 11              pop 
0868A24D 05 80F7         ln 247 
0868A250 10 0A           push "sound/soldier/solsght1" 
0868A252 30              dup 
0868A253 5A 00           lload 0 
0868A255 65 0B           storeindex_s snd_sight 
0868A257 11              pop 
0868A258 05 80F8         ln 248 
0868A25B 10 0C           push "sound/animal/sheep_idle1" 
0868A25D 30              dup 
0868A25E 5A 00           lload 0 
0868A260 65 0D           storeindex_s snd_idle 
0868A262 11              pop 
0868A263 05 80FA         ln 250 
0868A266 20              mark 
0868A267 58 10           push_sv_n 16 
0868A269 58 10           push_sv_n 16 
0868A26B 58 10           push_sv_n 16 
0868A26D 84              vector 
0868A26E 30              dup 
0868A26F 5A 00           lload 0 
0868A271 65 0E           storeindex_s mins 
0868A273 11              pop 
0868A274 05 80FB         ln 251 
0868A277 20              mark 
0868A278 57 10           push_sv_p 16 
0868A27A 57 10           push_sv_p 16 
0868A27C 57 28           push_sv_p 40 
0868A27E 84              vector 
0868A27F 30              dup 
0868A280 5A 00           lload 0 
0868A282 65 0F           storeindex_s maxs 
0868A284 11              pop 
0868A285 05 80FC         ln 252 
0868A288 57 1E           push_sv_p 30 
0868A28A 36              dup_f 
0868A28B 5A 00           lload 0 
0868A28D 65 10           storeindex_s health 
0868A28F 11              pop 
0868A290 05 8100         ln 256 
0868A293 2A 11           tymark #"(r)r" 
0868A295 5A 00           lload 0 
0868A297 24 12           tailcall_s btWalkPassiveStart 
0868A299 1A              clearenv 
0868A29A 29              ret 

stmt: (linenum 260) -> (linenum 260)
stmt: (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))))) -> (flag public (class passive_pig monster_generic2 () ((linenum 262) (flag public (define (passive_pig ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))) (linenum 268) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 277) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))))))
expr: (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))) -> (rlambda passive_pig (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 264) (funcall printf "passive_pig: ctor\n") (linenum 265) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 264) -> (dbgmark "game_sv/MonsterGeneric.bs" 264)
stmt: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: (funcall printf "passive_pig: ctor\n") -> (funcall printf "passive_pig: ctor\n")
expr: "passive_pig: ctor\n" -> "passive_pig: ctor\n"
stmt: (linenum 265) -> (linenum 265)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK passive_pig, SA Yes, Capture=Yes
0868AB90 02 018108       dbgmark "game_sv/MonsterGeneric.bs" 264 
0868AB94 2A 02           tymark #"(Cs)r" 
0868AB96 10 03           push "passive_pig: ctor\n" 
0868AB98 23 04           call_s gc_printf 
0868AB9A 11              pop 
0868AB9B 05 8109         ln 265 
0868AB9E 20              mark 
0868AB9F 5A 01           lload 1 
0868ABA1 5A 00           lload 0 
0868ABA3 C20E            call_super 
0868ABA5 1A              clearenv 
0868ABA6 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 270) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 270) -> (dbgmark "game_sv/MonsterGeneric.bs" 270)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 272) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 272) -> (linenum 272)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0868B4D0 02 01810E       dbgmark "game_sv/MonsterGeneric.bs" 270 
0868B4D4 2A 02           tymark #"()r" 
0868B4D6 23 03           call_s btRandom 
0868B4D8 10 04           push 0.100000 
0868B4DA 7A 111400       jmp_cond_b ge 0868B4F2 
0868B4DE 05 8110         ln 272 
0868B4E1 2A 05           tymark #"(rrrrr)r" 
0868B4E3 5A 00           lload 0 
0868B4E5 48              push_2 
0868B4E6 5A 00           lload 0 
0868B4E8 64 06           loadindex_s snd_idle 
0868B4EA 59 6400         push_sv_f 1 
0868B4ED 47              push_1 
0868B4EE 23 07           call_s btSound 
0868B4F0 1A              clearenv 
0868B4F1 29              ret 
0868B4F2 42              push_null 
0868B4F3 1A              clearenv 
0868B4F4 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 279) (funcall printf "monster_sheep: init A self=%p\n" self) (linenum 281) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 282) (objset! self movetype BT_MOVE_STEP) (linenum 284) (funcall btSetModel self "models/monsters/pig/pig.model") (linenum 285) (objset! self snd_sight "sound/soldier/solsght1") (linenum 286) (objset! self snd_idle "sound/animal/pig0") (linenum 288) (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) (linenum 289) (objset! self maxs (vector 16 16 40)) (linenum 290) (objset! self health 30) (linenum 294) (funcall btWalkPassiveStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 279) -> (dbgmark "game_sv/MonsterGeneric.bs" 279)
stmt: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: (funcall printf "monster_sheep: init A self=%p\n" self) -> (funcall printf "monster_sheep: init A self=%p\n" self)
expr: "monster_sheep: init A self=%p\n" -> "monster_sheep: init A self=%p\n"
expr: self -> self
stmt: (linenum 281) -> (linenum 281)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 282) -> (linenum 282)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 284) -> (linenum 284)
stmt: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: (funcall btSetModel self "models/monsters/pig/pig.model") -> (funcall btSetModel self "models/monsters/pig/pig.model")
expr: self -> self
expr: "models/monsters/pig/pig.model" -> "models/monsters/pig/pig.model"
stmt: (linenum 285) -> (linenum 285)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 286) -> (linenum 286)
stmt: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: (objset! self snd_idle "sound/animal/pig0") -> (objset! self snd_idle "sound/animal/pig0")
expr: "sound/animal/pig0" -> "sound/animal/pig0"
expr: self -> self
stmt: (linenum 288) -> (linenum 288)
stmt: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16))) -> (objset! self mins (vector (unary - 16) (unary - 16) (unary - 16)))
expr: (vector (unary - 16) (unary - 16) (unary - 16)) -> (vector (unary - 16) (unary - 16) (unary - 16))
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: (unary - 16) -> -16
expr: self -> self
stmt: (linenum 289) -> (linenum 289)
stmt: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (objset! self maxs (vector 16 16 40)) -> (objset! self maxs (vector 16 16 40))
expr: (vector 16 16 40) -> (vector 16 16 40)
expr: 16 -> 16
expr: 16 -> 16
expr: 40 -> 40
expr: self -> self
stmt: (linenum 290) -> (linenum 290)
stmt: (objset! self health 30) -> (objset! self health 30)
expr: (objset! self health 30) -> (objset! self health 30)
expr: 30 -> 30
expr: self -> self
stmt: (linenum 294) -> (linenum 294)
expr: (funcall btWalkPassiveStart self) -> (funcall btWalkPassiveStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0868BE20 02 018117       dbgmark "game_sv/MonsterGeneric.bs" 279 
0868BE24 2A 02           tymark #"(Csr)r" 
0868BE26 10 03           push "monster_sheep: init A self=%p\n" 
0868BE28 5A 00           lload 0 
0868BE2A 23 04           call_s gc_printf 
0868BE2C 11              pop 
0868BE2D 05 8119         ln 281 
0868BE30 49              push_3 
0868BE31 36              dup_f 
0868BE32 5A 00           lload 0 
0868BE34 65 05           storeindex_s solidtype 
0868BE36 11              pop 
0868BE37 05 811A         ln 282 
0868BE3A 48              push_2 
0868BE3B 36              dup_f 
0868BE3C 5A 00           lload 0 
0868BE3E 65 06           storeindex_s movetype 
0868BE40 11              pop 
0868BE41 05 811C         ln 284 
0868BE44 2A 07           tymark #"(rCs)r" 
0868BE46 5A 00           lload 0 
0868BE48 10 08           push "models/monsters/pig/pig.model" 
0868BE4A 23 09           call_s btSetModel 
0868BE4C 11              pop 
0868BE4D 05 811D         ln 285 
0868BE50 10 0A           push "sound/soldier/solsght1" 
0868BE52 30              dup 
0868BE53 5A 00           lload 0 
0868BE55 65 0B           storeindex_s snd_sight 
0868BE57 11              pop 
0868BE58 05 811E         ln 286 
0868BE5B 10 0C           push "sound/animal/pig0" 
0868BE5D 30              dup 
0868BE5E 5A 00           lload 0 
0868BE60 65 0D           storeindex_s snd_idle 
0868BE62 11              pop 
0868BE63 05 8120         ln 288 
0868BE66 20              mark 
0868BE67 58 10           push_sv_n 16 
0868BE69 58 10           push_sv_n 16 
0868BE6B 58 10           push_sv_n 16 
0868BE6D 84              vector 
0868BE6E 30              dup 
0868BE6F 5A 00           lload 0 
0868BE71 65 0E           storeindex_s mins 
0868BE73 11              pop 
0868BE74 05 8121         ln 289 
0868BE77 20              mark 
0868BE78 57 10           push_sv_p 16 
0868BE7A 57 10           push_sv_p 16 
0868BE7C 57 28           push_sv_p 40 
0868BE7E 84              vector 
0868BE7F 30              dup 
0868BE80 5A 00           lload 0 
0868BE82 65 0F           storeindex_s maxs 
0868BE84 11              pop 
0868BE85 05 8122         ln 290 
0868BE88 57 1E           push_sv_p 30 
0868BE8A 36              dup_f 
0868BE8B 5A 00           lload 0 
0868BE8D 65 10           storeindex_s health 
0868BE8F 11              pop 
0868BE90 05 8126         ln 294 
0868BE93 2A 11           tymark #"(r)r" 
0868BE95 5A 00           lload 0 
0868BE97 24 12           tailcall_s btWalkPassiveStart 
0868BE99 1A              clearenv 
0868BE9A 29              ret 

stmt: (linenum 298) -> (linenum 298)
stmt: (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))))))) -> (flag public (class monster_army monster_generic2 () ((linenum 300) (flag public (define (monster_army ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))))))
expr: (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))) -> (rlambda monster_army (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 303) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 303) -> (dbgmark "game_sv/MonsterGeneric.bs" 303)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_army, SA Yes, Capture=Yes
0868C780 02 01812F       dbgmark "game_sv/MonsterGeneric.bs" 303 
0868C784 20              mark 
0868C785 5A 01           lload 1 
0868C787 5A 00           lload 0 
0868C789 C20E            call_super 
0868C78B 1A              clearenv 
0868C78C 29              ret 

stmt: (linenum 308) -> (linenum 308)
expr: (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))))) -> (flag public (class monster_enemyhead monster_generic2 () ((linenum 310) (flag public (define (monster_enemyhead ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))) (linenum 316) (define (think_idle self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) (linenum 325) (define (think_fire self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) (linenum 338) (define (init self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))))))
expr: (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))) -> (rlambda monster_enemyhead (ent sent) (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 312) (funcall printf "monster_enemyhead: ctor\n") (linenum 313) (funcall super ent sent))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 312) -> (dbgmark "game_sv/MonsterGeneric.bs" 312)
stmt: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: (funcall printf "monster_enemyhead: ctor\n") -> (funcall printf "monster_enemyhead: ctor\n")
expr: "monster_enemyhead: ctor\n" -> "monster_enemyhead: ctor\n"
stmt: (linenum 313) -> (linenum 313)
expr: (funcall super ent sent) -> (funcall super ent sent)
expr: ent -> ent
expr: sent -> sent
BLK monster_enemyhead, SA Yes, Capture=Yes
0868D080 02 018138       dbgmark "game_sv/MonsterGeneric.bs" 312 
0868D084 2A 02           tymark #"(Cs)r" 
0868D086 10 03           push "monster_enemyhead: ctor\n" 
0868D088 23 04           call_s gc_printf 
0868D08A 11              pop 
0868D08B 05 8139         ln 313 
0868D08E 20              mark 
0868D08F 5A 01           lload 1 
0868D091 5A 00           lload 0 
0868D093 C20E            call_super 
0868D095 1A              clearenv 
0868D096 29              ret 

expr: (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))) -> (rlambda think_idle (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 318) (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 318) -> (dbgmark "game_sv/MonsterGeneric.bs" 318)
expr: (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))) -> (if (binary < (funcall btRandom) 0.100000) (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)))
expr: (funcall btRandom) -> (funcall btRandom)
expr: 0.100000 -> 0.100000
expr: (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)) -> (begin (linenum 320) (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM))
stmt: (linenum 320) -> (linenum 320)
expr: (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM) -> (funcall btSound self BT_CHAN_VOICE (objref self snd_idle) 1.0 BT_ATTN_NORM)
expr: self -> self
expr: BT_CHAN_VOICE -> 2
expr: (objref self snd_idle) -> (objref self snd_idle)
expr: self -> self
expr: 1.0 -> 1.0
expr: BT_ATTN_NORM -> 1
BLK think_idle, SA Yes, Capture=Yes
0868D9C0 02 01813E       dbgmark "game_sv/MonsterGeneric.bs" 318 
0868D9C4 2A 02           tymark #"()r" 
0868D9C6 23 03           call_s btRandom 
0868D9C8 10 04           push 0.100000 
0868D9CA 7A 111400       jmp_cond_b ge 0868D9E2 
0868D9CE 05 8140         ln 320 
0868D9D1 2A 05           tymark #"(rrrrr)r" 
0868D9D3 5A 00           lload 0 
0868D9D5 48              push_2 
0868D9D6 5A 00           lload 0 
0868D9D8 64 06           loadindex_s snd_idle 
0868D9DA 59 6400         push_sv_f 1 
0868D9DD 47              push_1 
0868D9DE 23 07           call_s btSound 
0868D9E0 1A              clearenv 
0868D9E1 29              ret 
0868D9E2 42              push_null 
0868D9E3 1A              clearenv 
0868D9E4 29              ret 

expr: (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))) -> (rlambda think_fire (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 327) (vars (org dir)) (linenum 331) (set! org (funcall BT_AimOrigin self)) (linenum 332) (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) (linenum 335) (funcall BT_FireRocket self org dir 60 600 160))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 327) -> (dbgmark "game_sv/MonsterGeneric.bs" 327)
stmt: (vars (org dir)) -> (vars (org dir))
expr: () -> ()
expr: () -> ()
stmt: (linenum 331) -> (linenum 331)
stmt: (set! org (funcall BT_AimOrigin self)) -> (set! org (funcall BT_AimOrigin self))
expr: (funcall BT_AimOrigin self) -> (funcall BT_AimOrigin self)
expr: self -> self
stmt: (linenum 332) -> (linenum 332)
stmt: (set! dir (funcall BT_AimDirection self (objref self enemy) 600)) -> (set! dir (funcall BT_AimDirection self (objref self enemy) 600))
expr: (funcall BT_AimDirection self (objref self enemy) 600) -> (funcall BT_AimDirection self (objref self enemy) 600)
expr: self -> self
expr: (objref self enemy) -> (objref self enemy)
expr: self -> self
expr: 600 -> 600
stmt: (linenum 335) -> (linenum 335)
expr: (funcall BT_FireRocket self org dir 60 600 160) -> (funcall BT_FireRocket self org dir 60 600 160)
expr: self -> self
expr: org -> org
expr: dir -> dir
expr: 60 -> 60
expr: 600 -> 600
expr: 160 -> 160
BLK think_fire, SA Yes, Capture=Yes
08686640 02 018147       dbgmark "game_sv/MonsterGeneric.bs" 327 
08686644 42              push_null 
08686645 16 02           lexbind org 
08686647 42              push_null 
08686648 16 03           lexbind dir 
0868664A 05 814B         ln 331 
0868664D 2A 04           tymark #"(r)r" 
0868664F 5A 02           lload 2 
08686651 23 05           call_s BT_AimOrigin 
08686653 5B 01           lstore 1 
08686655 05 814C         ln 332 
08686658 2A 06           tymark #"(rrr)r" 
0868665A 5A 02           lload 2 
0868665C 5A 02           lload 2 
0868665E 64 07           loadindex_s enemy 
08686660 45 5802         push_sv 600 
08686663 23 08           call_s BT_AimDirection 
08686665 5B 00           lstore 0 
08686667 05 814F         ln 335 
0868666A 2A 09           tymark #"(rrrrrr)r" 
0868666C 5A 02           lload 2 
0868666E 5A 01           lload 1 
08686670 5A 00           lload 0 
08686672 57 3C           push_sv_p 60 
08686674 45 5802         push_sv 600 
08686677 57 A0           push_sv_p 160 
08686679 24 0A           tailcall_s BT_FireRocket 
0868667B 1A              clearenv 
0868667C 29              ret 

expr: (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))) -> (rlambda init (self) (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)))
expr: (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self)) -> (begin (dbgmark "game_sv/MonsterGeneric.bs" 340) (funcall printf "monster_enemyhead: init A self=%p\n" self) (linenum 342) (objset! self solidtype BT_SOLID_SLIDEBOX) (linenum 343) (objset! self movetype BT_MOVE_STEP) (linenum 345) (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") (linenum 346) (objset! self snd_sight "sound/soldier/solsght1") (linenum 347) (objset! self snd_idle "sound/soldier/solidle1") (linenum 349) (objset! self origin (binary + (objref self origin) (vector 0 0 256))) (linenum 351) (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) (linenum 352) (objset! self maxs (vector 64 64 64)) (linenum 353) (objset! self health 900) (linenum 357) (funcall btFlymonsterStart self))
stmt: (dbgmark "game_sv/MonsterGeneric.bs" 340) -> (dbgmark "game_sv/MonsterGeneric.bs" 340)
stmt: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: (funcall printf "monster_enemyhead: init A self=%p\n" self) -> (funcall printf "monster_enemyhead: init A self=%p\n" self)
expr: "monster_enemyhead: init A self=%p\n" -> "monster_enemyhead: init A self=%p\n"
expr: self -> self
stmt: (linenum 342) -> (linenum 342)
stmt: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: (objset! self solidtype BT_SOLID_SLIDEBOX) -> (objset! self solidtype BT_SOLID_SLIDEBOX)
expr: BT_SOLID_SLIDEBOX -> 3
expr: self -> self
stmt: (linenum 343) -> (linenum 343)
stmt: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: (objset! self movetype BT_MOVE_STEP) -> (objset! self movetype BT_MOVE_STEP)
expr: BT_MOVE_STEP -> 2
expr: self -> self
stmt: (linenum 345) -> (linenum 345)
stmt: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model") -> (funcall btSetModel self "models/monsters/enemyhead/enemyhead.model")
expr: self -> self
expr: "models/monsters/enemyhead/enemyhead.model" -> "models/monsters/enemyhead/enemyhead.model"
stmt: (linenum 346) -> (linenum 346)
stmt: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: (objset! self snd_sight "sound/soldier/solsght1") -> (objset! self snd_sight "sound/soldier/solsght1")
expr: "sound/soldier/solsght1" -> "sound/soldier/solsght1"
expr: self -> self
stmt: (linenum 347) -> (linenum 347)
stmt: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: (objset! self snd_idle "sound/soldier/solidle1") -> (objset! self snd_idle "sound/soldier/solidle1")
expr: "sound/soldier/solidle1" -> "sound/soldier/solidle1"
expr: self -> self
stmt: (linenum 349) -> (linenum 349)
stmt: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (objset! self origin (binary + (objref self origin) (vector 0 0 256))) -> (objset! self origin (binary + (objref self origin) (vector 0 0 256)))
expr: (binary + (objref self origin) (vector 0 0 256)) -> (binary + (objref self origin) (vector 0 0 256))
expr: (objref self origin) -> (objref self origin)
expr: self -> self
expr: (vector 0 0 256) -> (vector 0 0 256)
expr: 0 -> 0
expr: 0 -> 0
expr: 256 -> 256
expr: self -> self
stmt: (linenum 351) -> (linenum 351)
stmt: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32))) -> (objset! self mins (vector (unary - 64) (unary - 64) (unary - 32)))
expr: (vector (unary - 64) (unary - 64) (unary - 32)) -> (vector (unary - 64) (unary - 64) (unary - 32))
expr: (unary - 64) -> -64
expr: (unary - 64) -> -64
expr: (unary - 32) -> -32
expr: self -> self
stmt: (linenum 352) -> (linenum 352)
stmt: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (objset! self maxs (vector 64 64 64)) -> (objset! self maxs (vector 64 64 64))
expr: (vector 64 64 64) -> (vector 64 64 64)
expr: 64 -> 64
expr: 64 -> 64
expr: 64 -> 64
expr: self -> self
stmt: (linenum 353) -> (linenum 353)
stmt: (objset! self health 900) -> (objset! self health 900)
expr: (objset! self health 900) -> (objset! self health 900)
expr: 900 -> 900
expr: self -> self
stmt: (linenum 357) -> (linenum 357)
expr: (funcall btFlymonsterStart self) -> (funcall btFlymonsterStart self)
expr: self -> self
BLK init, SA Yes, Capture=Yes
0868ED50 02 018154       dbgmark "game_sv/MonsterGeneric.bs" 340 
0868ED54 2A 02           tymark #"(Csr)r" 
0868ED56 10 03           push "monster_enemyhead: init A self=%p\n" 
0868ED58 5A 00           lload 0 
0868ED5A 23 04           call_s gc_printf 
0868ED5C 11              pop 
0868ED5D 05 8156         ln 342 
0868ED60 49              push_3 
0868ED61 36              dup_f 
0868ED62 5A 00           lload 0 
0868ED64 65 05           storeindex_s solidtype 
0868ED66 11              pop 
0868ED67 05 8157         ln 343 
0868ED6A 48              push_2 
0868ED6B 36              dup_f 
0868ED6C 5A 00           lload 0 
0868ED6E 65 06           storeindex_s movetype 
0868ED70 11              pop 
0868ED71 05 8159         ln 345 
0868ED74 2A 07           tymark #"(rCs)r" 
0868ED76 5A 00           lload 0 
0868ED78 10 08           push "models/monsters/enemyhead/enemyhead.model" 
0868ED7A 23 09           call_s btSetModel 
0868ED7C 11              pop 
0868ED7D 05 815A         ln 346 
0868ED80 10 0A           push "sound/soldier/solsght1" 
0868ED82 30              dup 
0868ED83 5A 00           lload 0 
0868ED85 65 0B           storeindex_s snd_sight 
0868ED87 11              pop 
0868ED88 05 815B         ln 347 
0868ED8B 10 0C           push "sound/soldier/solidle1" 
0868ED8D 30              dup 
0868ED8E 5A 00           lload 0 
0868ED90 65 0D           storeindex_s snd_idle 
0868ED92 11              pop 
0868ED93 05 815D         ln 349 
0868ED96 5A 00           lload 0 
0868ED98 64 0E           loadindex_s origin 
0868ED9A 20              mark 
0868ED9B 46              push_0 
0868ED9C 46              push_0 
0868ED9D 45 0001         push_sv 256 
0868EDA0 84              vector 
0868EDA1 9F              add 
0868EDA2 30              dup 
0868EDA3 5A 00           lload 0 
0868EDA5 65 0E           storeindex_s origin 
0868EDA7 11              pop 
0868EDA8 05 815F         ln 351 
0868EDAB 20              mark 
0868EDAC 58 40           push_sv_n 64 
0868EDAE 58 40           push_sv_n 64 
0868EDB0 58 20           push_sv_n 32 
0868EDB2 84              vector 
0868EDB3 30              dup 
0868EDB4 5A 00           lload 0 
0868EDB6 65 0F           storeindex_s mins 
0868EDB8 11              pop 
0868EDB9 05 8160         ln 352 
0868EDBC 20              mark 
0868EDBD 57 40           push_sv_p 64 
0868EDBF 57 40           push_sv_p 64 
0868EDC1 57 40           push_sv_p 64 
0868EDC3 84              vector 
0868EDC4 30              dup 
0868EDC5 5A 00           lload 0 
0868EDC7 65 10           storeindex_s maxs 
0868EDC9 11              pop 
0868EDCA 05 8161         ln 353 
0868EDCD 45 8403         push_sv 900 
0868EDD0 36              dup_f 
0868EDD1 5A 00           lload 0 
0868EDD3 65 11           storeindex_s health 
0868EDD5 11              pop 
0868EDD6 05 8165         ln 357 
0868EDD9 2A 12           tymark #"(r)r" 
0868EDDB 5A 00           lload 0 
0868EDDD 24 13           tailcall_s btFlymonsterStart 
0868EDDF 1A              clearenv 
0868EDE0 29              ret 

BLK (null), SA No, Capture=Yes
0868EFC0 02 0102         dbgmark "game_sv/MonsterGeneric.bs" 2 
0868EFC3 C202 020304     begin_class monster_generic2 ActorBase p 
0868EFC8 42              push_null 
0868EFC9 97 050006       tybind stand1_mf () s 
0868EFCD 42              push_null 
0868EFCE 97 070006       tybind walk1_mf () s 
0868EFD2 42              push_null 
0868EFD3 97 080006       tybind walk2_mf () s 
0868EFD7 42              push_null 
0868EFD8 97 090006       tybind stand1_mfi () s 
0868EFDC 42              push_null 
0868EFDD 97 0A0006       tybind walk1_mfi () s 
0868EFE1 42              push_null 
0868EFE2 97 0B0006       tybind walk2_mfi () s 
0868EFE6 42              push_null 
0868EFE7 97 0C0006       tybind run_mf () s 
0868EFEB 42              push_null 
0868EFEC 97 0D0006       tybind attack1_mf () s 
0868EFF0 42              push_null 
0868EFF1 97 0E0006       tybind run_mfi () s 
0868EFF5 42              push_null 
0868EFF6 97 0F0006       tybind attack1_mfi () s 
0868EFFA 10 10           push #!<svm_blk_t:0867C240> 
0868EFFC 97 111200       tybind think_idle #"(r)r" () 
0868F000 10 13           push #!<svm_blk_t:0867CC30> 
0868F002 97 141200       tybind init #"(r)r" () 
0868F006 10 15           push #!<svm_blk_t:0867D5C0> 
0868F008 97 161200       tybind deinit #"(r)r" () 
0868F00C 10 17           push #!<svm_blk_t:0867DEB0> 
0868F00E 97 181900       tybind blocked #"(rr)r" () 
0868F012 10 1A           push #!<svm_blk_t:0867E7A0> 
0868F014 97 1B1900       tybind touch #"(rr)r" () 
0868F018 10 1C           push #!<svm_blk_t:0867F090> 
0868F01A 97 1D1900       tybind use #"(rr)r" () 
0868F01E 10 1E           push #!<svm_blk_t:0867F980> 
0868F020 97 1F2000       tybind pain #"(rrr)r" () 
0868F024 10 21           push #!<svm_blk_t:08680270> 
0868F026 97 222000       tybind die #"(rrr)r" () 
0868F02A 10 23           push #!<svm_blk_t:08680B70> 
0868F02C 97 242000       tybind cmdmsg #"(rrr)r" () 
0868F030 10 25           push #!<svm_blk_t:08681460> 
0868F032 97 261200       tybind stand #"(r)r" () 
0868F036 10 27           push #!<svm_blk_t:08681D80> 
0868F038 97 281200       tybind walk1_random #"(r)r" () 
0868F03C 10 29           push #!<svm_blk_t:086826C0> 
0868F03E 97 2A1200       tybind walk #"(r)r" () 
0868F042 10 2B           push #!<svm_blk_t:08682FE0> 
0868F044 97 2C1200       tybind run #"(r)r" () 
0868F048 10 2D           push #!<svm_blk_t:086838E0> 
0868F04A 97 2E1200       tybind missile #"(r)r" () 
0868F04E 10 2F           push #!<svm_blk_t:08684200> 
0868F050 97 301200       tybind think_fire #"(r)r" () 
0868F054 10 31           push #!<svm_blk_t:08684B40> 
0868F056 97 321200       tybind melee #"(r)r" () 
0868F05A 10 33           push #!<svm_blk_t:08685450> 
0868F05C 97 021904       tybind monster_generic2 #"(rr)r" p 
0868F060 20              mark 
0868F061 10 34           push #!<svm_blk_t:086882C0> 
0868F063 21              call 
0868F064 C206            end_class 
0868F066 11              pop 
0868F067 05 80DE         ln 222 
0868F06A C202 350204     begin_class passive_sheep monster_generic2 p 
0868F06F 10 36           push #!<svm_blk_t:08688EE0> 
0868F071 97 351904       tybind passive_sheep #"(rr)r" p 
0868F075 10 37           push #!<svm_blk_t:08689810> 
0868F077 97 111200       tybind think_idle #"(r)r" () 
0868F07B 10 38           push #!<svm_blk_t:0868A160> 
0868F07D 97 141200       tybind init #"(r)r" () 
0868F081 C206            end_class 
0868F083 11              pop 
0868F084 05 8104         ln 260 
0868F087 C202 390204     begin_class passive_pig monster_generic2 p 
0868F08C 10 3A           push #!<svm_blk_t:0868AB00> 
0868F08E 97 391904       tybind passive_pig #"(rr)r" p 
0868F092 10 3B           push #!<svm_blk_t:0868B430> 
0868F094 97 111200       tybind think_idle #"(r)r" () 
0868F098 10 3C           push #!<svm_blk_t:0868BD60> 
0868F09A 97 141200       tybind init #"(r)r" () 
0868F09E C206            end_class 
0868F0A0 11              pop 
0868F0A1 05 812A         ln 298 
0868F0A4 C202 3D0204     begin_class monster_army monster_generic2 p 
0868F0A9 10 3E           push #!<svm_blk_t:0868C700> 
0868F0AB 97 3D1904       tybind monster_army #"(rr)r" p 
0868F0AF C206            end_class 
0868F0B1 11              pop 
0868F0B2 05 8134         ln 308 
0868F0B5 C202 3F0204     begin_class monster_enemyhead monster_generic2 p 
0868F0BA 10 40           push #!<svm_blk_t:0868CFF0> 
0868F0BC 97 3F1904       tybind monster_enemyhead #"(rr)r" p 
0868F0C0 10 41           push #!<svm_blk_t:0868D920> 
0868F0C2 97 111200       tybind think_idle #"(r)r" () 
0868F0C6 10 42           push #!<svm_blk_t:0868E250> 
0868F0C8 97 301200       tybind think_fire #"(r)r" () 
0868F0CC 10 43           push #!<svm_blk_t:0868EC80> 
0868F0CE 97 141200       tybind init #"(r)r" () 
0868F0D2 C206            end_class 
0868F0D4 29              ret 

Add Slot 08691BA0 stand1_mf r
Add Slot 08691C30 walk1_mf r
Add Slot 08691CC0 walk2_mf r
Add Slot 08691D50 stand1_mfi r
Add Slot 08691DE0 walk1_mfi r
Add Slot 08691E70 walk2_mfi r
Add Slot 08691F00 run_mf r
Add Slot 08691F90 attack1_mf r
Add Slot 08692020 run_mfi r
Add Slot 086920B0 attack1_mfi r
This A = 08691670, run=08682FE0, this.run=08682FE0
BTSV_ScriptInit: Called
Eval:  load("game/sv_main.bs");;;
stmt: (dbgmark "<eval-str>" 1) -> (dbgmark "<eval-str>" 1)
expr: (funcall load "game/sv_main.bs") -> (funcall load "game/sv_main.bs")
expr: "game/sv_main.bs" -> "game/sv_main.bs"
BLK (null), SA No, Capture=Yes
086A4300 02 0101         dbgmark "<eval-str>" 1 
086A4303 2A 02           tymark #"(Cs)r" 
086A4305 10 03           push "game/sv_main.bs" 
086A4307 24 04           tailcall_s load 
086A4309 1A              clearenv 
086A430A 29              ret 

stmt: (dbgmark "game/sv_main.bs" 1) -> (dbgmark "game/sv_main.bs" 1)
stmt: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: (funcall printf "BGBScript Server Main Start\n") -> (funcall printf "BGBScript Server Main Start\n")
expr: "BGBScript Server Main Start\n" -> "BGBScript Server Main Start\n"
stmt: (linenum 5) -> (linenum 5)
expr: (funcall printf "BGBScript Server Main End\n") -> (funcall printf "BGBScript Server Main End\n")
expr: "BGBScript Server Main End\n" -> "BGBScript Server Main End\n"
BLK (null), SA No, Capture=Yes
086A5010 02 0101         dbgmark "game/sv_main.bs" 1 
086A5013 2A 02           tymark #"(Cs)r" 
086A5015 10 03           push "BGBScript Server Main Start\n" 
086A5017 23 04           call_s gc_printf 
086A5019 11              pop 
086A501A 05 05           ln 5 
086A501C 2A 02           tymark #"(Cs)r" 
086A501E 10 05           push "BGBScript Server Main End\n" 
086A5020 24 04           tailcall_s gc_printf 
086A5022 1A              clearenv 
086A5023 29              ret 

BGBScript Server Main Start
BGBScript Server Main End
()
Add Slot 086AB690 light PXBTGE_Light_s;
Add Slot 086AB760 item PXBTGE_ItemInfo_s;
Add Slot 086AB840 groundEntity PXBTGE_Entity_s;
Add Slot 086AB920 chain PXBTGE_Entity_s;
Add Slot 086AB9D0 enemy PXBTGE_Entity_s;
Add Slot 086ABA60 owner PXBTGE_Entity_s;
Add Slot 086ABB10 goalEntity PXBTGE_Entity_s;
Add Slot 086ABBC0 moveTarget PXBTGE_Entity_s;
Add Slot 086ABC70 oldEnemy PXBTGE_Entity_s;
Add Slot 086ABD20 linkNext PXBTGE_Entity_s;
Add Slot 086ABDD0 linkFirst PXBTGE_Entity_s;
Add Slot 086ABE80 entNextNode PXBTGE_Entity_s;
Add Slot 086ABF30 entNode PXBTGE_EntityNode_s;
Add Slot 086ACFB0 triggerEntity PXBTGE_Entity_s;
Add Slot 086AE0A0 teamLeader PXBTGE_Entity_s;
Add Slot 086AF240 gui_ctx PXBTCMUI_Context_s;
00: 0.1189 0.1189 0.1189
01: 0.2059 0.0000 0.0000
02: 0.0000 0.2059 0.0000
03: 0.1456 0.1456 0.0000
04: 0.0000 0.0000 0.2059
05: 0.1456 0.0000 0.1456
06: 0.0000 0.1456 0.1456
07: 0.1710 0.1026 0.0513
08: 0.1026 0.1710 0.0513
09: 0.1681 0.0841 0.0841
0A: 0.0841 0.1681 0.0841
0B: 0.1373 0.1373 0.0686
0C: 0.0841 0.0841 0.1681
0D: 0.1373 0.0686 0.1373
0E: 0.0686 0.1373 0.1373
0F: 0.0513 0.1026 0.1710
10: 0.1321 0.1321 0.1321
11: 0.2288 0.0000 0.0000
12: 0.0000 0.2288 0.0000
13: 0.1618 0.1618 0.0000
14: 0.0000 0.0000 0.2288
15: 0.1618 0.0000 0.1618
16: 0.0000 0.1618 0.1618
17: 0.1900 0.1140 0.0570
18: 0.1140 0.1900 0.0570
19: 0.1868 0.0934 0.0934
1A: 0.0934 0.1868 0.0934
1B: 0.1525 0.1525 0.0763
1C: 0.0934 0.0934 0.1868
1D: 0.1525 0.0763 0.1525
1E: 0.0763 0.1525 0.1525
1F: 0.0570 0.1140 0.1900
20: 0.1468 0.1468 0.1468
21: 0.2542 0.0000 0.0000
22: 0.0000 0.2542 0.0000
23: 0.1797 0.1797 0.0000
24: 0.0000 0.0000 0.2542
25: 0.1797 0.0000 0.1797
26: 0.0000 0.1797 0.1797
27: 0.2111 0.1267 0.0633
28: 0.1267 0.2111 0.0633
29: 0.2075 0.1038 0.1038
2A: 0.1038 0.2075 0.1038
2B: 0.1695 0.1695 0.0847
2C: 0.1038 0.1038 0.2075
2D: 0.1695 0.0847 0.1695
2E: 0.0847 0.1695 0.1695
2F: 0.0633 0.1267 0.2111
30: 0.1631 0.1631 0.1631
31: 0.2824 0.0000 0.0000
32: 0.0000 0.2824 0.0000
33: 0.1997 0.1997 0.0000
34: 0.0000 0.0000 0.2824
35: 0.1997 0.0000 0.1997
36: 0.0000 0.1997 0.1997
37: 0.2345 0.1407 0.0704
38: 0.1407 0.2345 0.0704
39: 0.2306 0.1153 0.1153
3A: 0.1153 0.2306 0.1153
3B: 0.1883 0.1883 0.0941
3C: 0.1153 0.1153 0.2306
3D: 0.1883 0.0941 0.1883
3E: 0.0941 0.1883 0.1883
3F: 0.0704 0.1407 0.2345
40: 0.1812 0.1812 0.1812
41: 0.3138 0.0000 0.0000
42: 0.0000 0.3138 0.0000
43: 0.2219 0.2219 0.0000
44: 0.0000 0.0000 0.3138
45: 0.2219 0.0000 0.2219
46: 0.0000 0.2219 0.2219
47: 0.2606 0.1564 0.0782
48: 0.1564 0.2606 0.0782
49: 0.2562 0.1281 0.1281
4A: 0.1281 0.2562 0.1281
4B: 0.2092 0.2092 0.1046
4C: 0.1281 0.1281 0.2562
4D: 0.2092 0.1046 0.2092
4E: 0.1046 0.2092 0.2092
4F: 0.0782 0.1564 0.2606
50: 0.2013 0.2013 0.2013
51: 0.3487 0.0000 0.0000
52: 0.0000 0.3487 0.0000
53: 0.2466 0.2466 0.0000
54: 0.0000 0.0000 0.3487
55: 0.2466 0.0000 0.2466
56: 0.0000 0.2466 0.2466
57: 0.2896 0.1737 0.0869
58: 0.1737 0.2896 0.0869
59: 0.2847 0.1423 0.1423
5A: 0.1423 0.2847 0.1423
5B: 0.2325 0.2325 0.1162
5C: 0.1423 0.1423 0.2847
5D: 0.2325 0.1162 0.2325
5E: 0.1162 0.2325 0.2325
5F: 0.0869 0.1737 0.2896
60: 0.2237 0.2237 0.2237
61: 0.3874 0.0000 0.0000
62: 0.0000 0.3874 0.0000
63: 0.2739 0.2739 0.0000
64: 0.0000 0.0000 0.3874
65: 0.2739 0.0000 0.2739
66: 0.0000 0.2739 0.2739
67: 0.3217 0.1930 0.0965
68: 0.1930 0.3217 0.0965
69: 0.3163 0.1582 0.1582
6A: 0.1582 0.3163 0.1582
6B: 0.2583 0.2583 0.1291
6C: 0.1582 0.1582 0.3163
6D: 0.2583 0.1291 0.2583
6E: 0.1291 0.2583 0.2583
6F: 0.0965 0.1930 0.3217
70: 0.2485 0.2485 0.2485
71: 0.4305 0.0000 0.0000
72: 0.0000 0.4305 0.0000
73: 0.3044 0.3044 0.0000
74: 0.0000 0.0000 0.4305
75: 0.3044 0.0000 0.3044
76: 0.0000 0.3044 0.3044
77: 0.3575 0.2145 0.1072
78: 0.2145 0.3575 0.1072
79: 0.3515 0.1757 0.1757
7A: 0.1757 0.3515 0.1757
7B: 0.2870 0.2870 0.1435
7C: 0.1757 0.1757 0.3515
7D: 0.2870 0.1435 0.2870
7E: 0.1435 0.2870 0.2870
7F: 0.1072 0.2145 0.3575
80: 0.2761 0.2761 0.2761
81: 0.4783 0.0000 0.0000
82: 0.0000 0.4783 0.0000
83: 0.3382 0.3382 0.0000
84: 0.0000 0.0000 0.4783
85: 0.3382 0.0000 0.3382
86: 0.0000 0.3382 0.3382
87: 0.3972 0.2383 0.1192
88: 0.2383 0.3972 0.1192
89: 0.3905 0.1953 0.1953
8A: 0.1953 0.3905 0.1953
8B: 0.3189 0.3189 0.1594
8C: 0.1953 0.1953 0.3905
8D: 0.3189 0.1594 0.3189
8E: 0.1594 0.3189 0.3189
8F: 0.1192 0.2383 0.3972
90: 0.3068 0.3068 0.3068
91: 0.5314 0.0000 0.0000
92: 0.0000 0.5314 0.0000
93: 0.3758 0.3758 0.0000
94: 0.0000 0.0000 0.5314
95: 0.3758 0.0000 0.3758
96: 0.0000 0.3758 0.3758
97: 0.4413 0.2648 0.1324
98: 0.2648 0.4413 0.1324
99: 0.4339 0.2170 0.2170
9A: 0.2170 0.4339 0.2170
9B: 0.3543 0.3543 0.1771
9C: 0.2170 0.2170 0.4339
9D: 0.3543 0.1771 0.3543
9E: 0.1771 0.3543 0.3543
9F: 0.1324 0.2648 0.4413
A0: 0.3409 0.3409 0.3409
A1: 0.5905 0.0000 0.0000
A2: 0.0000 0.5905 0.0000
A3: 0.4175 0.4175 0.0000
A4: 0.0000 0.0000 0.5905
A5: 0.4175 0.0000 0.4175
A6: 0.0000 0.4175 0.4175
A7: 0.4904 0.2942 0.1471
A8: 0.2942 0.4904 0.1471
A9: 0.4821 0.2411 0.2411
AA: 0.2411 0.4821 0.2411
AB: 0.3937 0.3937 0.1968
AC: 0.2411 0.2411 0.4821
AD: 0.3937 0.1968 0.3937
AE: 0.1968 0.3937 0.3937
AF: 0.1471 0.2942 0.4904
B0: 0.3788 0.3788 0.3788
B1: 0.6561 0.0000 0.0000
B2: 0.0000 0.6561 0.0000
B3: 0.4639 0.4639 0.0000
B4: 0.0000 0.0000 0.6561
B5: 0.4639 0.0000 0.4639
B6: 0.0000 0.4639 0.4639
B7: 0.5449 0.3269 0.1635
B8: 0.3269 0.5449 0.1635
B9: 0.5357 0.2679 0.2679
BA: 0.2679 0.5357 0.2679
BB: 0.4374 0.4374 0.2187
BC: 0.2679 0.2679 0.5357
BD: 0.4374 0.2187 0.4374
BE: 0.2187 0.4374 0.4374
BF: 0.1635 0.3269 0.5449
C0: 0.4209 0.4209 0.4209
C1: 0.7290 0.0000 0.0000
C2: 0.0000 0.7290 0.0000
C3: 0.5155 0.5155 0.0000
C4: 0.0000 0.0000 0.7290
C5: 0.5155 0.0000 0.5155
C6: 0.0000 0.5155 0.5155
C7: 0.6054 0.3632 0.1816
C8: 0.3632 0.6054 0.1816
C9: 0.5952 0.2976 0.2976
CA: 0.2976 0.5952 0.2976
CB: 0.4860 0.4860 0.2430
CC: 0.2976 0.2976 0.5952
CD: 0.4860 0.2430 0.4860
CE: 0.2430 0.4860 0.4860
CF: 0.1816 0.3632 0.6054
D0: 0.4677 0.4677 0.4677
D1: 0.8100 0.0000 0.0000
D2: 0.0000 0.8100 0.0000
D3: 0.5728 0.5728 0.0000
D4: 0.0000 0.0000 0.8100
D5: 0.5728 0.0000 0.5728
D6: 0.0000 0.5728 0.5728
D7: 0.6727 0.4036 0.2018
D8: 0.4036 0.6727 0.2018
D9: 0.6614 0.3307 0.3307
DA: 0.3307 0.6614 0.3307
DB: 0.5400 0.5400 0.2700
DC: 0.3307 0.3307 0.6614
DD: 0.5400 0.2700 0.5400
DE: 0.2700 0.5400 0.5400
DF: 0.2018 0.4036 0.6727
E0: 0.5196 0.5196 0.5196
E1: 0.9000 0.0000 0.0000
E2: 0.0000 0.9000 0.0000
E3: 0.6364 0.6364 0.0000
E4: 0.0000 0.0000 0.9000
E5: 0.6364 0.0000 0.6364
E6: 0.0000 0.6364 0.6364
E7: 0.7474 0.4484 0.2242
E8: 0.4484 0.7474 0.2242
E9: 0.7348 0.3674 0.3674
EA: 0.3674 0.7348 0.3674
EB: 0.6000 0.6000 0.3000
EC: 0.3674 0.3674 0.7348
ED: 0.6000 0.3000 0.6000
EE: 0.3000 0.6000 0.6000
EF: 0.2242 0.4484 0.7474
F0: 0.5774 0.5774 0.5774
F1: 1.0000 0.0000 0.0000
F2: 0.0000 1.0000 0.0000
F3: 0.7071 0.7071 0.0000
F4: 0.0000 0.0000 1.0000
F5: 0.7071 0.0000 0.7071
F6: 0.0000 0.7071 0.7071
F7: 0.8305 0.4983 0.2491
F8: 0.4983 0.8305 0.2491
F9: 0.8165 0.4082 0.4082
FA: 0.4082 0.8165 0.4082
FB: 0.6667 0.6667 0.3333
FC: 0.4082 0.4082 0.8165
FD: 0.6667 0.3333 0.6667
FE: 0.3333 0.6667 0.6667
FF: 0.2491 0.4983 0.8305
BTGE_Voxel_LoadDungeonType: 1 none
Adler32: Fail  6DA618C2 0687901C
BTGE_Voxel_LoadDungeonType: 1 none: OK
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick
Adler32: Fail  5C1D0EA6 4ED7D9B3
BTGE_Voxel_LoadDungeonType: 4 hall_x_brick: OK
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick
Adler32: Fail  37090EA6 D9E07DA9
BTGE_Voxel_LoadDungeonType: 5 hall_y_brick: OK
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick
Adler32: Fail  D4423C22 C5D3007C
BTGE_Voxel_LoadDungeonType: 6 hall_xy_brick: OK
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick
Adler32: Fail  8469FB06 CDDA90BA
BTGE_Voxel_LoadDungeonType: 7 break_nx_brick: OK
BTGE_Voxel_LoadDungeonType: 8 break_px_brick
Adler32: Fail  2D34FB06 70839ED2
BTGE_Voxel_LoadDungeonType: 8 break_px_brick: OK
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick
Adler32: Fail  6DA9B4D1 2B599564
BTGE_Voxel_LoadDungeonType: 9 break_ny_brick: OK
BTGE_Voxel_LoadDungeonType: 10 break_py_brick
Adler32: Fail  3886B463 7CF0E69E
BTGE_Voxel_LoadDungeonType: 10 break_py_brick: OK
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick
Adler32: Fail  EC9F7922 B057B33F
BTGE_Voxel_LoadDungeonType: 11 hall_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick
Adler32: Fail  DA580EA6 BB50EAB2
BTGE_Voxel_LoadDungeonType: 12 hall_x_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick
Adler32: Fail  251B0EA6 70AD5E59
BTGE_Voxel_LoadDungeonType: 13 hall_y_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick
Adler32: Fail  F2243C22 66FCBA8D
BTGE_Voxel_LoadDungeonType: 14 hall_xy_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick
Adler32: Fail  8469FB06 099E159D
BTGE_Voxel_LoadDungeonType: 15 break_nx_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick
Adler32: Fail  2D34FB06 4201CC00
BTGE_Voxel_LoadDungeonType: 16 break_px_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick
Adler32: Fail  6DA9B4D1 03B3405C
BTGE_Voxel_LoadDungeonType: 17 break_ny_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick
Adler32: Fail  3886B463 155777EE
BTGE_Voxel_LoadDungeonType: 18 break_py_stonebrick: OK
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick
Adler32: Fail  28024F64 3BE9BD16
BTGE_Voxel_LoadDungeonType: 19 room_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick
Adler32: Fail  B26D1CD2 62565906
BTGE_Voxel_LoadDungeonType: 20 spawnroom_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick
Adler32: Fail  DE3B8945 B352BAD3
BTGE_Voxel_LoadDungeonType: 21 ladderfloor_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick
Adler32: Fail  551E9045 6B8CE2A4
BTGE_Voxel_LoadDungeonType: 22 ladderceil_xy_mixbrick: OK
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick
Adler32: Fail  ACAAA395 4D0CA917
BTGE_Voxel_LoadDungeonType: 23 laddershaft_mixbrick: OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,-1,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,-1,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(-1,1,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(1,1,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
Adler32: Fail  3A9CBB36 35700B2E
Adler32: Fail  281164E6 E278911B
PNG: Check Fail: Offs=109 2->0
PNG: Check Fail: Offs=30998 30->0
BTGE_ServerInitFunc: BTGE_DecodeClientUpdate Pass 0F591352
BTGE_DecodeClientConnect
btFindSpawnpoint: 1 spawnpoints
BTGE_ServerInitFunc: btsvFreeUpdate Pass 0F591A50
BTGE_ClientInitFunc: BTCL_DecodeUpdate Pass 51891285
BTGE_Voxel_AllocRegionForPoint: Pt=(0,0,0) -> Rgn=(0,0,0) Org=(0,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTCL_DecodeLDelta: (ldelta 1 (fl 33537) (coeff 0.862069 0.862069 1.0) (val 10000.0 0.0) (clr 1.0 1.0 1.0) (org 0.0 0.0 2048.0))
Texture: Missing-Base: textures/env/bkgtst
BTGE_Voxel_DeltaRegionBuffer: Buffer Space Check
LBXGL_SkyBox_LoadSky: bkgtst
Texture: Missing-Base: textures/env/stars
LBXGL_SkyBox_LoadSky: stars
Texture: Missing-Base: textures/env/bkgr
LBXGL_SkyBox_LoadSky: bkgr
camera: 4
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,0,0) -> Rgn=(-1,0,0) Org=(-512,0,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x0x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTGE_Voxel_AllocRegionForPoint: Pt=(0,-512,0) -> Rgn=(0,-1,0) Org=(0,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_0x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
BTCL_DecodeLDelta: (ldelta 1 (st 0) (fl 33537) (texname ()) (boxval 0.0 0.0 0.0) (maxs 0.0 0.0 0.0) (mins 0.0 0.0 0.0) (coeff 0.862069 0.862069 1.0) (val 10000.0 0.0) (clr 1.0 1.0 1.0) (dir 0.0 0.0 0.0) (org 0.0 0.0 2048.0))
stmt: (dbgmark "<eval-str>" 5) -> (dbgmark "<eval-str>" 5)
stmt: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: (funcall printf "Client Stuff Eval: Begin\n") -> (funcall printf "Client Stuff Eval: Begin\n")
expr: "Client Stuff Eval: Begin\n" -> "Client Stuff Eval: Begin\n"
stmt: (linenum 7) -> (linenum 7)
stmt: (vars (btcl_clientstuff_vol)) -> (vars (btcl_clientstuff_vol))
expr: () -> ()
stmt: (linenum 8) -> (linenum 8)
stmt: (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)) -> (set! btcl_clientstuff_vol (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400))
expr: (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400) -> (funcall LBXGL_BrushDraw2D_CreateDisplayImage2 "images/faces/anim/robotface0_aa" (unary - 200) (unary - 150) 400 400)
expr: "images/faces/anim/robotface0_aa" -> "images/faces/anim/robotface0_aa"
expr: (unary - 200) -> -200
expr: (unary - 150) -> -150
expr: 400 -> 400
expr: 400 -> 400
stmt: (linenum 11) -> (linenum 11)
stmt: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1)) -> (funcall LBXGL_BrushDraw2D_SetObjectOrdinal btcl_clientstuff_vol (unary - 1))
expr: btcl_clientstuff_vol -> btcl_clientstuff_vol
expr: (unary - 1) -> -1
stmt: (linenum 13) -> (linenum 13)
stmt: (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (define (BTCL_ClientStuff_Draw) (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))) -> (rlambda BTCL_ClientStuff_Draw () (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))))
expr: (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))) -> (begin (dbgmark "<eval-str>" 15) (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)))
stmt: (dbgmark "<eval-str>" 15) -> (dbgmark "<eval-str>" 15)
expr: (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin)) -> (if (funcall PDGL_KeyDown K_SHIFT) (begin) (begin))
expr: (funcall PDGL_KeyDown K_SHIFT) -> (funcall PDGL_KeyDown K_SHIFT)
expr: K_SHIFT -> 134
expr: () -> ()
expr: (begin) -> ()
BLK BTCL_ClientStuff_Draw, SA No, Capture=Yes
05ED7CF0 02 010F         dbgmark "<eval-str>" 15 
05ED7CF3 2A 02           tymark #"(r)r" 
05ED7CF5 57 86           push_sv_p 134 
05ED7CF7 23 03           call_s PDGL_KeyDown 
05ED7CF9 78 0500         jmp_false 05ED7D01 
05ED7CFC 42              push_null 
05ED7CFD 1F 04           cast_s r 
05ED7CFF 1A              clearenv 
05ED7D00 29              ret 
05ED7D01 42              push_null 
05ED7D02 1A              clearenv 
05ED7D03 29              ret 

stmt: (linenum 25) -> (linenum 25)
expr: (funcall printf "Client Stuff Eval: End\n") -> (funcall printf "Client Stuff Eval: End\n")
expr: "Client Stuff Eval: End\n" -> "Client Stuff Eval: End\n"
BLK (null), SA No, Capture=Yes
05ED7B80 02 0105         dbgmark "<eval-str>" 5 
05ED7B83 2A 02           tymark #"(Cs)r" 
05ED7B85 10 03           push "Client Stuff Eval: Begin\n" 
05ED7B87 23 04           call_s gc_printf 
05ED7B89 11              pop 
05ED7B8A 05 07           ln 7 
05ED7B8C 42              push_null 
05ED7B8D 14 05           bind btcl_clientstuff_vol 
05ED7B8F 05 08           ln 8 
05ED7B91 2A 06           tymark #"(Csrrrr)r" 
05ED7B93 10 07           push "images/faces/anim/robotface0_aa" 
05ED7B95 58 C8           push_sv_n 200 
05ED7B97 58 96           push_sv_n 150 
05ED7B99 45 9001         push_sv 400 
05ED7B9C 45 9001         push_sv 400 
05ED7B9F 23 08           call_s LBXGL_BrushDraw2D_CreateDisplayImage2 
05ED7BA1 13 05           store btcl_clientstuff_vol 
05ED7BA3 05 0B           ln 11 
05ED7BA5 2A 09           tymark #"(rr)r" 
05ED7BA7 12 05           load btcl_clientstuff_vol 
05ED7BA9 58 01           push_sv_n 1 
05ED7BAB 23 0A           call_s LBXGL_BrushDraw2D_SetObjectOrdinal 
05ED7BAD 11              pop 
05ED7BAE 05 0D           ln 13 
05ED7BB0 10 0B           push #!<svm_blk_t:05ED7C60> 
05ED7BB2 97 0C0D00       tybind BTCL_ClientStuff_Draw #"()r" () 
05ED7BB6 05 19           ln 25 
05ED7BB8 2A 02           tymark #"(Cs)r" 
05ED7BBA 10 0E           push "Client Stuff Eval: End\n" 
05ED7BBC 24 04           tailcall_s gc_printf 
05ED7BBE 29              ret 

Client Stuff Eval: Begin
Client Stuff Eval: End
LBXGL_SkyBox_LoadSky: bkgtst
LBXGL_SkyBox_LoadSky: stars
LBXGL_SkyBox_LoadSky: bkgr
BTGE_Voxel_AllocRegionForPoint: Pt=(-512,-512,0) -> Rgn=(-1,-1,0) Org=(-512,-512,0)
BTGE_VoxelSave_LoadRegion: region/terrtst_-1x-1x0.rgn OK
BTGE_VoxelSave_LoadRegion: Sig OK
SoundRec: Sound overrun
BTCL_SetupClientEntFrameWMdl: Model Changed
BTCL_SetupClientEntFrameWMdl: New wmdl instance
skel loaded, 2 bones, 0 solids
AC3D_LoadModel: loading 'models/weapons/v_blast/v_blast1.ac'
GroupMergeVecsFrac 1: 398 xyz, 705 st, 784 face
GroupMergeVecsFrac 2: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 1: 293 xyz, 1068 st, 578 face
GroupMergeVecsFrac 2: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 1: 217 xyz, 1011 st, 426 face
GroupMergeVecsFrac 2: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 1: 158 xyz, 818 st, 308 face
GroupMergeVecsFrac 2: 116 xyz, 617 st, 224 face
Hitbox: 0 22.990 Org=(-4.936 -15.016 -4.513) Rad=(0.116 0.905 0.122)
Hitbox: 1 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 06497770
anim active: 0, 5 frames
anim pow: 5, 4 frames
anim idle1: 9, 24 frames
anim idle2: 33, 20 frames
anim putway: 53, 3 frames
RNG Init
Th 00001D54 5304 1000496C
Setup FBO
BTGE_ClientInitFunc: BTCL_ComposeUpdate Pass 51891249
SoundRec: Sound overrun
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x08663760
mov [esi+248], 15
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x066EAB60
call @0x006B3585
mov [esp+4], eax
call @0x006B22B6
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x066EAC80
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x066EAE60
call @0x006B18D9
mov [esp+4], eax
call @0x006B16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
SoundRec: Sound overrun
Load Patch sound/player/jump1 (4096)
Th 00001D64 9036 0F951500
passive_pig: ctor
Add Slot 08679070 entity r
Add Slot 08679070 entity r
Add Slot 08679070 entity r
Add Slot 08679210 spawnEntity r
Add Slot 08679210 spawnEntity r
Add Slot 08679210 spawnEntity r
monster_sheep: init A self=2BBAE660
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 086A6A00 solidtype i
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 086A69A0 movetype i
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 086AD8A0 snd_sight Pc
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 086AD930 snd_idle Pc
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 086A71F0 mins Cb
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 086A7280 maxs Cb
dyllGetStructClassInfo: C 'btge_entity_t' -> 'BTGE_Entity_s'
Add Slot 086AA2D0 health f
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=2BBAED50 ent=2BBAE660
Load Patch sound/player/step1 (4097)
Load Patch sound/misc/tele1 (4098)
skel loaded, 32 bones, 0 solids
AC3D_LoadModel: loading 'models/monsters/pig/parasite2.ac'
GroupMergeVecsFrac 1: 696 xyz, 998 st, 1332 face
GroupMergeVecsFrac 2: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 1: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 2: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 1: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 2: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 1: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 2: 207 xyz, 973 st, 354 face
Hitbox: 0 59.495 Org=(0.006 0.897 0.687) Rad=(0.506 0.342 0.179)
Hitbox: 1 2.969 Org=(0.192 -2.232 2.020) Rad=(1.366 1.627 1.287)
Hitbox: 2 28.784 Org=(0.359 -0.520 0.710) Rad=(1.075 0.349 0.271)
Hitbox: 3 47.641 Org=(-0.145 -5.370 2.090) Rad=(0.241 0.323 0.217)
Hitbox: 4 4.833 Org=(0.069 -3.118 -0.419) Rad=(0.746 1.163 0.738)
Hitbox: 5 13.895 Org=(0.048 2.417 -0.516) Rad=(0.285 0.545 0.268)
Hitbox: 6 14.832 Org=(0.049 3.943 -0.256) Rad=(0.280 0.539 0.272)
Hitbox: 7 24.904 Org=(0.063 2.307 -0.139) Rad=(0.156 0.096 0.156)
Hitbox: 8 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 9 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 10 18.604 Org=(0.104 2.322 -4.180) Rad=(0.299 0.488 0.726)
Hitbox: 11 18.816 Org=(-0.011 2.025 -4.262) Rad=(0.299 0.491 0.749)
Hitbox: 12 23.046 Org=(-0.055 2.100 -5.228) Rad=(0.269 0.357 0.719)
Hitbox: 13 19.229 Org=(0.081 1.822 -5.075) Rad=(0.301 0.377 0.664)
Hitbox: 14 28.864 Org=(0.018 -3.398 -4.755) Rad=(0.234 0.458 0.550)
Hitbox: 15 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 16 28.045 Org=(0.029 -3.534 -4.878) Rad=(0.232 0.467 0.638)
Hitbox: 17 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 18 27.158 Org=(0.126 -3.331 -4.616) Rad=(0.233 0.474 0.645)
Hitbox: 19 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 20 27.157 Org=(0.024 -3.639 -4.766) Rad=(0.244 0.421 0.535)
Hitbox: 21 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 22 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 23 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 24 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 25 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 26 0.960 Org=(-0.278 -2.028 0.467) Rad=(2.764 0.000 0.000)
Hitbox: 27 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 28 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 29 3.192 Org=(0.344 1.051 0.960) Rad=(2.382 0.758 0.556)
Hitbox: 30 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 31 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 2BC5D680
anim walk1: 0, 30 frames
anim walk2: 30, 10 frames
anim run: 40, 7 frames
passive_sheep: ctor
Add Slot 08679070 entity r
Add Slot 08679210 spawnEntity r
monster_sheep: init A self=2BDD6280
BT_SpawnSEntity: Spawn From Class inf=086A1BA0 obj=2BDD6970 ent=2BDD6280
Add Slot 08691D50 stand1_mfi r
skel loaded, 32 bones, 0 solids
AC3D_LoadModel: loading 'models/monsters/sheep/parasite2.ac'
GroupMergeVecsFrac 1: 696 xyz, 998 st, 1332 face
GroupMergeVecsFrac 2: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 1: 501 xyz, 1720 st, 942 face
GroupMergeVecsFrac 2: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 1: 363 xyz, 1622 st, 666 face
GroupMergeVecsFrac 2: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 1: 271 xyz, 1271 st, 482 face
GroupMergeVecsFrac 2: 207 xyz, 973 st, 354 face
Hitbox: 0 59.495 Org=(0.006 0.897 0.687) Rad=(0.506 0.342 0.179)
Hitbox: 1 2.969 Org=(0.192 -2.232 2.020) Rad=(1.366 1.627 1.287)
Hitbox: 2 28.784 Org=(0.359 -0.520 0.710) Rad=(1.075 0.349 0.271)
Hitbox: 3 47.641 Org=(-0.145 -5.370 2.090) Rad=(0.241 0.323 0.217)
Hitbox: 4 4.833 Org=(0.069 -3.118 -0.419) Rad=(0.746 1.163 0.738)
Hitbox: 5 13.895 Org=(0.048 2.417 -0.516) Rad=(0.285 0.545 0.268)
Hitbox: 6 14.832 Org=(0.049 3.943 -0.256) Rad=(0.280 0.539 0.272)
Hitbox: 7 24.904 Org=(0.063 2.307 -0.139) Rad=(0.156 0.096 0.156)
Hitbox: 8 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 9 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 10 18.604 Org=(0.104 2.322 -4.180) Rad=(0.299 0.488 0.726)
Hitbox: 11 18.816 Org=(-0.011 2.025 -4.262) Rad=(0.299 0.491 0.749)
Hitbox: 12 23.046 Org=(-0.055 2.100 -5.228) Rad=(0.269 0.357 0.719)
Hitbox: 13 19.229 Org=(0.081 1.822 -5.075) Rad=(0.301 0.377 0.664)
Hitbox: 14 28.864 Org=(0.018 -3.398 -4.755) Rad=(0.234 0.458 0.550)
Hitbox: 15 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 16 28.045 Org=(0.029 -3.534 -4.878) Rad=(0.232 0.467 0.638)
Hitbox: 17 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 18 27.158 Org=(0.126 -3.331 -4.616) Rad=(0.233 0.474 0.645)
Hitbox: 19 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 20 27.157 Org=(0.024 -3.639 -4.766) Rad=(0.244 0.421 0.535)
Hitbox: 21 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 22 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 23 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 24 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 25 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 26 0.960 Org=(-0.278 -2.028 0.467) Rad=(2.764 0.000 0.000)
Hitbox: 27 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 28 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 29 3.192 Org=(0.344 1.051 0.960) Rad=(2.382 0.758 0.556)
Hitbox: 30 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
Hitbox: 31 0.000 Org=(0.000 0.000 0.000) Rad=(0.000 0.000 0.000)
mesh 2BE9FC60
anim walk1: 0, 30 frames
anim walk2: 30, 10 frames
anim run: 40, 7 frames
Add Slot 08691D50 stand1_mfi r
Add Slot 08691DE0 walk1_mfi r
Load Patch sound/animal/sheep_idle1 (4099)
passive_pig: ctor
monster_sheep: init A self=2C1F5AB0
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=2C1F61A0 ent=2C1F5AB0
MainAVIHeader:
dwMicroSecPerFrame=100000
dwMaxBytesPerSec=0
dwPaddingGranularity=0
dwFlags=16
dwTotalFrames=8
dwInitialFrames=0
dwStreams=1
dwSuggestedBufferSize=0
dwWidth=256
dwHeight=256

AVIStreamHeader(0):
fccType=vids
fccHandler=rpza
dwFlags=0
wPriority=0
wLanguage=0
dwInitialFrames=0
dwScale=1024
dwRate=10240
dwStart=0
dwLength=8
dwSuggestedBufferSize=0
dwQuality=0
dwSampleSize=0
rcFrame=left:0 top:0 right:0 bottom:0

BITMAPINFOHEADER(0):
biSize=40
biWidth=256
biHeight=256
biPlanes=1
biBitCount=32
biCompression=azpr
biSizeImage=262144
biXPelsPerMeter=0
biYPelsPerMeter=0
biClrUsed=0
biClrImportant=0

AVI: Index 8 ents
AVI: codec api
VFW: Init
fccType: vidc
fccHandler: mrle
fccType: vidc
fccHandler: msvc
fccType: vidc
fccHandler: uyvy
fccType: vidc
fccHandler: yuy2
fccType: vidc
fccHandler: yvyu
fccType: vidc
fccHandler: iyuv
fccType: vidc
fccHandler: i420
fccType: vidc
fccHandler: yvu9
fccType: vidc
fccHandler: cvid
fccType: vidc
fccHandler: fps1
fccType: vidc
fccHandler: hfyu
fccType: vidc
fccHandler: lags
fccType: vidc
fccHandler: x264
fccType: vidc
fccHandler: xvid
fccType: vidc
fccHandler: ffds
fccType: vidc
fccHandler: lwlr
fccType: vidc
fccHandler: btic
fccType: vidc
fccHandler: bt1c
fccType: vidc
fccHandler: bt1d
fccType: vidc
fccHandler: bt2c
fccType: vidc
fccHandler: bt1h
MJPG: Init
MBTC: Init
MBTC: Init
RPZA: Init
passive_pig: ctor
monster_sheep: init A self=2C32EA00
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=2C32F0F0 ent=2C32EA00
passive_sheep: ctor
monster_sheep: init A self=2C475790
BT_SpawnSEntity: Spawn From Class inf=086A1BA0 obj=2C475E80 ent=2C475790
passive_pig: ctor
monster_sheep: init A self=2C5ADC10
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=2C5AE300 ent=2C5ADC10
Load Patch sound/player/land1 (4100)
passive_sheep: ctor
monster_sheep: init A self=2C3C6580
BT_SpawnSEntity: Spawn From Class inf=086A1BA0 obj=2C3C6C70 ent=2C3C6580
Add Slot 08691E70 walk2_mfi r
Load Patch sound/animal/pig0 (4101)
passive_pig: ctor
monster_sheep: init A self=2C10CD30
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=2C10D420 ent=2C10CD30
passive_sheep: ctor
monster_sheep: init A self=2C143C80
BT_SpawnSEntity: Spawn From Class inf=086A1BA0 obj=2C144370 ent=2C143C80
Add Slot 08691DE0 walk1_mfi r
Add Slot 08691E70 walk2_mfi r
passive_pig: ctor
monster_sheep: init A self=2C829490
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=2C829B80 ent=2C829490
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+248], 150
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C0C7770
call @0x006B3585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2C0C7830
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_pig: ctor
monster_sheep: init A self=3227D730
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=3227DE20 ent=3227D730
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0867A2A0
mov [esi+248], 232
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C0C7A10
call @0x006B3585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C0C7AD0
call @0x006B3012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
Load Patch sound/player/land (4102)
passive_pig: ctor
monster_sheep: init A self=3279E210
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=3279E900 ent=3279E210
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0867A2A0
mov [esi+248], 78
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C179EA0
call @0x006B3585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C179F60
call @0x006B3012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C17A020
call @0x006B3585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C17A0E0
call @0x006B2BEE
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0867A2A0
mov [esi+248], 270
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C02EA30
call @0x006B3585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C02EAF0
call @0x006B3012
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C02EFD0
call @0x006B18D9
mov [esp+4], eax
call @0x006B16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C0C7FB0
call @0x006B18D9
mov [esp+4], eax
call @0x006B16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_pig: ctor
monster_sheep: init A self=32E1C620
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=32E1CD10 ent=32E1C620
passive_sheep: ctor
monster_sheep: init A self=32EA0620
BT_SpawnSEntity: Spawn From Class inf=086A1BA0 obj=32EA0D10 ent=32EA0620
passive_sheep: ctor
monster_sheep: init A self=06A00080
BT_SpawnSEntity: Spawn From Class inf=086A1BA0 obj=06A00770 ent=06A00080
passive_pig: ctor
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0867A2A0
mov [esi+248], 115
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BBAF500
call @0x006B2CC0
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2BBAF620
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0866FD60
mov [esi+248], 26
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BBAFB80
call @0x006B2CC0
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2BBAFCA0
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0866FD60
mov [esi+248], 9
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BBAFFD0
call @0x006B2A90
mov esi, [ebp+8]
mov [esi+248], 10
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BBB00F0
call @0x006B2554
mov [esp+4], eax
call @0x006B2A90
mov [esp+4], eax
call @0x006B16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BBAFD00
call @0x006B16EF
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BBAF680
call @0x006B252C
mov esi, [ebp+8]
mov [esi+248], 118
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BBAF740
call @0x006B3585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-16]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BBAF800
call @0x006B1893
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
monster_sheep: init A self=327C9810
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=327C9F00 ent=327C9810
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0867A2A0
mov [esi+248], 73
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BDDAC10
call @0x006B3585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2BDDACD0
call @0x006B2BEE
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
Th 00001D74 4332 0F951500
passive_pig: ctor
monster_sheep: init A self=32FD5C60
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=32FD6350 ent=32FD5C60
passive_sheep: ctor
monster_sheep: init A self=32AB5CF0
BT_SpawnSEntity: Spawn From Class inf=086A1BA0 obj=32AB63E0 ent=32AB5CF0
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+244], 0x0867A2A0
mov [esi+248], 84
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C0C7040
call @0x006B3585
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C0C7100
call @0x006B2E73
mov [esp+8], eax
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
dyllAsmEndDebug: [[
[section .text]
[bits 32]
push ebp
mov ebp, esp
sub esp, 24
mov [ebp-4], esi
mov [ebp-8], edi
mov esi, [ebp+8]
mov [esi+248], 172
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+4], 0x2C02E790
call @0x006B3585
mov esi, [ebp+8]
mov ecx, [esi+4]
mov edi, [esi+0]
mov eax, [esi+36]
mov edx, [esi+32]
movq xmm0, [edx+eax*8-8]
movq [edi+ecx*8+0], xmm0
inc ecx
mov [esi+4], ecx
mov eax, [ebp+8]
mov [esp+0], eax
mov dword [esp+8], 0x2C02E850
mov eax, [ebp+12]
mov [esp+4], eax
call @0x006B2D51
mov esi, [ebp-4]
mov edi, [ebp-8]
mov esp, ebp
pop ebp
ret
]]
passive_sheep: ctor
monster_sheep: init A self=323AE060
BT_SpawnSEntity: Spawn From Class inf=086A1BA0 obj=323AE750 ent=323AE060
passive_pig: ctor
monster_sheep: init A self=32BD3530
BT_SpawnSEntity: Spawn From Class inf=086A21C0 obj=32BD3C20 ent=32BD3530
PDGL: Main Break
app1 shutdown
BGBGC_DeinitThread
GC: Termination Request (bgbgc_spawngc<0)
GC: Collect Loop Exited
